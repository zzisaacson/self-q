{"version":3,"sources":["screens/Login.js","assets/swipe_btn.png","assets/self-q.png","assets/selfq_science.png","assets/selfq_math.png","assets/selfq_reading.png","assets/selfq_writing.png","assets/selfq_social.png","assets/academic_social.png","assets/selfq_emotional.png","assets/selfq_custom.png","assets/row_btn.png","App.js","screens/Home.js","screens/AddSet.js","screens/TypeSelect.js","screens/Settings.js","screens/AddCustomPrompts.js","screens/SelectCustom.js","screens/SwipeAddSet.js","screens/SignUp.js","screens/ClassroomMain.js","screens/ClassroomCreate.js","screens/ClassroomJoin.js","screens/AssignTypeSelect.js","screens/AssignSet.js","screens/AddSetClass.js","screens/SwipeAddSetClass.js","screens/GradingStudList.js","screens/ClassSelectCustom.js","screens/LeaveFeedback.js","screens/AssignCustom.js","components/Blank.js","components/Linking.js","screens/LinkLoading.js","components/Tab.js","components/TabN.js","components/TabG.js","components/TabS.js","components/MenuBar.js","components/Popup.js","screens/ClassDetails.js","components/FeedbackGoalView.js","screens/ViewFeedback.js","web-build/register-service-worker.js","assets/home.png","assets/document.png","assets/classroom.png","components/GoalInput.js","assets/settings.png","components/CustomGoalInput.js","components/GoalItem.js","assets/left_arrow.png","assets/right_arrow.png","components/FeedbackGoalInput.js"],"names":["height_logo","Dimensions","get","height","styles","StyleSheet","create","container","flex","backgroundColor","header","justifyContent","alignItems","footer","borderTopLeftRadius","borderTopRightRadius","paddingVertical","paddingHorizontal","logo","width","title","color","fontSize","fontWeight","text","marginTop","clickableText","smallHeader","button","signIn","borderRadius","flexDirection","textSign","input","borderColor","borderWidth","padding","margin","Login","props","useState","email","setEmail","password","setPassword","error","setError","firebase","auth","onAuthStateChanged","user","console","log","global","linked","setScreen","style","source","require","resizeMode","placeholder","onChangeText","secureTextEntry","onPress","signInWithEmailAndPassword","then","catch","module","exports","done","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","App","currScreen","courseGoals","setCourseGoals","colorList","setColorList","qInfo","setQInfo","rid","setRid","classes","setClasses","classDetails","setClassDetails","className","setClassName","student","setStudent","fInfo","setFInfo","link","setLink","setScreenHandler","s","handleAssignmentLink","cls","id","ref","once","snapshot","data","val","includes","currentUser","uid","targetScreen","errorObject","code","setGoalsHanlder","goals","set","goClassroomHandler","l","c","m","push","goClassroom","qList","setQList","setNoDB","globalUpdate","Stack","createStackNavigator","nav","React","useRef","navCon","linking","enabled","fallback","Navigator","Screen","name","component","Blank","Linking","screen","space","Platform","OS","disableYellowBox","Home","on","removeGoalHandler","goalId","keyExtractor","item","index","renderItem","itemData","onDelete","value","marginBottom","AddSet","useCustom","setUseCustom","userInput","setUserInput","focus","setFocus","gather","setGather","brainstorm","setBrainstorm","evaluate","setEvaluate","plan","setPlan","reflect","setReflect","focusP","setFocusP","gatherP","setGatherP","brainstormP","setBrainstormP","evaluateP","setEvaluateP","planP","setPlanP","reflectP","setReflectP","regInput","Fragment","setInput","question","custInput","prompt","setPrompt","details","goalTitle","forEach","element","toPage","bind","image_width","Math","min","image","dropdown","row","listItem","marginVertical","extraSpacing","marginRight","TypeSelect","academic_open","set_academic_open","personal_open","set_personal_open","academic","random","toString","substring","personal","Settings","signOut","AddCustomPrompts","handleEdit","yesSave","setYesSave","setName","SelectCustom","nameList","setNameList","n","SwipeAddSet","currQ","setCurrQ","addGoalHandler","namePage","focusPage","multiline","gatherPage","brainstormPage","evaluatePage","planPage","reflectPage","centerRow","SignUp","createUserWithEmailAndPassword","ClassroomMain","ClassroomCreate","toLowerCase","ClassroomJoin","realName","setRealName","names","AssignTypeSelect","AssignSet","replaceAll","assignments","AddSetClass","SwipeAddSetClass","GradingStudList","toDoOpen","setToDoOpen","completeOpen","setCompleteOpen","handleStudClick","to_grade","graded","el","fontStyle","ClassSelectCustom","LeaveFeedback","focusR","setFocusR","gatherR","setGatherR","brainstormR","setBrainstormR","evaluateR","setEvaluateR","planR","setPlanR","reflectR","setReflectR","gFeedback","setGFeedback","grade","setGrade","responses","comment","AssignCustom","route","params","class","assignment","LinkLoading","tab","Tab","View","TouchableOpacity","Image","TabN","TabG","TabS","MenuBar","card","position","left","top","Popup","Text","TextInput","Button","ClassroomDetails","handleAssingmentClick","isOwned","to_do","complete","zIndex","elevation","FlatList","GoalItem","ownerAssignmentClicked","inputContainer","italics","FeedbackGoalView","setCommentMode","ViewFeedback","ScrollView","navigator","window","addEventListener","serviceWorker","register","scope","info","GoalInput","enteredText","CustomGoalInput","FeedbackGoalInput","commentMode"],"mappings":"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","file":"static/js/app.26da0c8e.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\r\nimport firebase from 'firebase';\r\n//import { useNavigation } from '@react-navigation/native';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n//React.createContext\r\n\r\nconst Login= props =>{\r\n   // global.nav = useNavigation();\r\n    //console.log(global.nav.navigate);\r\n    //nav.\r\n  //  console.log(props.navigation.getParam('setScreen'));\r\n   // const navigation = useNavigation();\r\n    //props=navigation.props;\r\n    //console.log('after: '+global.yep);\r\n    //props = {...global.props, props};\r\n    //console.log(props);\r\n\r\n    const [email, setEmail]= useState('');\r\n    const [password, setPassword]= useState('');\r\n    const [error, setError]=useState('');\r\n\r\n\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        console.log('LOG '+global.linked)\r\n        if (user && !global.linked) {\r\n          props.setScreen(0);\r\n        }\r\n     });\r\n   \r\n    const handleSignIn = ()=>{\r\n        setError('Loading...');\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(()=>{\r\n            props.setScreen(0);\r\n        })\r\n        .catch((error)=>{\r\n            setError(error+ ' Please try again.');\r\n            console.log('auth failed '+error+' && email='+email);\r\n        });\r\n     \r\n    }\r\n    const setScreenHandler=()=>{\r\n        props.setScreen(3);\r\n    }\r\n    return   (\r\n    <View style={styles.container}>\r\n        <View style ={styles.header}>\r\n            <Image \r\n            source={require('../assets/self-q.png')}\r\n            style={styles.logo}\r\n            resizeMode={\"stretch\"}/>\r\n        </View>\r\n        <View style ={styles.footer}>\r\n            <Text style={styles.title}>Welcome to SELf-Q!</Text>\r\n            <Text style = {styles.text}>Sign in with account</Text>\r\n            <TextInput placeholder={\"Email\"} style ={styles.input} onChangeText={setEmail}/>\r\n            <TextInput secureTextEntry={true} placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\r\n            <Text style={styles.text}>{error}</Text>\r\n            <Button style={{width:'25%'}} title=\"Sign In\" onPress ={handleSignIn}/>\r\n            <View style ={{alignItems:'center'}}> \r\n                <TouchableOpacity onPress={setScreenHandler}>\r\n                    <Text  style = {styles.clickableText}>New user? Sign up.</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst {height} = Dimensions.get(\"screen\");\r\nconst height_logo = height * 0.14;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 2, \r\n      backgroundColor: '#009387'\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    footer: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        paddingVertical: 50,\r\n        paddingHorizontal: 30\r\n    },\r\n    logo: {\r\n        width: height_logo,\r\n        height: height_logo\r\n    },\r\n    title: {\r\n        color: '#05375a',\r\n        fontSize: 30,\r\n        fontWeight: 'bold'\r\n    },\r\n    text: {\r\n        color: 'grey',\r\n        marginTop:5\r\n    },\r\n    clickableText: {\r\n        color: 'blue',\r\n        fontWeight: 'bold',\r\n        marginTop:10\r\n    },\r\n    smallHeader: {\r\n        color: '#05375a',\r\n        fontWeight: 'bold',\r\n        marginTop:10\r\n    },\r\n    button: {\r\n        width:\"20%\",\r\n        marginTop: 30\r\n    },\r\n    signIn: {\r\n        width: 150,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 50,\r\n        flexDirection: 'row'\r\n    },\r\n    textSign: {\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n    },\r\n    input:{\r\n        width: '90%', \r\n         borderColor:'black', \r\n         borderWidth:1, \r\n         padding:5,\r\n        margin: 10\r\n       },\r\n       \r\n  });\r\n  \r\n\r\nexport default Login;","module.exports = __webpack_public_path__ + \"static/media/swipe_btn.75af9935.png\";","module.exports = __webpack_public_path__ + \"static/media/self-q.1050f68b.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_science.8475672d.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_math.3a01f113.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_reading.7d79b493.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_writing.9ca6bb68.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_social.07bec3e5.png\";","module.exports = __webpack_public_path__ + \"static/media/academic_social.8c7f8345.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_emotional.6fa4cdf5.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_custom.89d6291b.png\";","module.exports = __webpack_public_path__ + \"static/media/row_btn.cfd107e8.png\";","import React, {useState } from 'react';\r\nimport { Platform, View, Dimensions } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {StackNavigator} from '@react-navigation/stack'\r\n\r\n//import GLOBAl from './global'\r\nimport Home from './screens/Home' \r\nimport AddSet from './screens/AddSet';\r\nimport Login from './screens/Login';\r\nimport MenuBar from './components/MenuBar';\r\nimport TypeSelect from './screens/TypeSelect';\r\nimport Settings from './screens/Settings';\r\nimport AddCustomPrompts from './screens/AddCustomPrompts';\r\nimport SelectCustom from './screens/SelectCustom';\r\nimport SwipeAddSet from './screens/SwipeAddSet';\r\n\r\n\r\nimport firebase from 'firebase';\r\nimport SignUp from './screens/SignUp';\r\nimport ClassroomMain from './screens/ClassroomMain';\r\nimport ClassroomCreate from './screens/ClassroomCreate';\r\nimport ClassroomJoin from './screens/ClassroomJoin';\r\nimport ClassroomDetails from './screens/ClassDetails';\r\nimport AssignTypeSelect from './screens/AssignTypeSelect';\r\nimport AssignSet from './screens/AssignSet';\r\nimport AddSetClass from './screens/AddSetClass';\r\nimport SwipeAddSetClass from './screens/SwipeAddSetClass';\r\nimport GradingStudList from './screens/GradingStudList';\r\nimport ClassSelectCustom from './screens/ClassSelectCustom';\r\nimport LeaveFeedback from './screens/LeaveFeedback';\r\nimport ViewFeedback from './screens/ViewFeedback';\r\nimport AssignCustom from './screens/AssignCustom';\r\nimport Blank from './components/Blank';\r\nimport Linking from './components/Linking';\r\nimport LinkLoading from './screens/LinkLoading';\r\nglobal.linked=false;\r\n//import { firebaseConfig } from './components/config';\r\n//import { firebaseConfig } from './components/config';\r\nconst firebaseConfig={\r\n  apiKey: \"AIzaSyC9IrMEpuMkTgDdYnXzay5PnZ1MYgrqeyU\",\r\n  authDomain: \"self-q.firebaseapp.com\",\r\n  databaseURL: \"https://self-q.firebaseio.com\",\r\n  projectId: \"self-q\",\r\n  storageBucket: \"self-q.appspot.com\",\r\n  messagingSenderId: \"815667248878\",\r\n  appId: \"1:815667248878:web:5101ab55ce6deac57ffdff\",\r\n  measurementId: \"G-C9QTCTBDSL\"\r\n}\r\nvar done =false;\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\nconst db = firebase.database();\r\nconsole.disableYellowBox = true;\r\n\r\nexport default function App() { \r\n\r\n  const [currScreen, setScreen]= useState(2);\r\n  const [courseGoals, setCourseGoals] = useState([]);\r\n  const [colorList, setColorList] = useState(['lightgrey','lightgrey','lightgrey','lightblue']); \r\n  const [qInfo, setQInfo]= useState(4);\r\n  const [rid, setRid]=useState(0);\r\n  const [classes, setClasses]=useState([]);\r\n  const [classDetails, setClassDetails]=useState([]);\r\n  const [className, setClassName]=useState('');\r\n  const [student, setStudent]=useState('');\r\n  const [fInfo, setFInfo]=useState('');\r\n  const [link, setLink]=useState('');\r\n  const setScreenHandler=s=>{\r\n    console.log('To '+s +' and beyond');\r\n    var cList = [];\r\n    if(s == 0){\r\n      cList= ['lightblue','lightgrey','lightgrey','lightgrey'];\r\n    }\r\n    else if(s==1||s==4||s==7||s==8){\r\n      cList= ['lightgrey','lightblue','lightgrey','lightgrey'];\r\n    }\r\n    else if(s==9||s==10||s==11||s==12||s==13||s==14||s==15||s==16||s==17||s==18){\r\n      cList= ['lightgrey','lightgrey','lightblue','lightgrey'];\r\n    }\r\n    else if(s==2 ||s==3 || s==5) {\r\n      cList= ['lightgrey','lightgrey','lightgrey','lightblue'];\r\n    }\r\n    else{\r\n      cList= ['lightgrey','lightblue','lightgrey','lightgrey'];\r\n    }\r\n    setColorList(cList);\r\n    //console.log(global.nav.current.navigate);\r\n    // if (s==0 ){\r\n    //   global.nav.current.navigate('home');\r\n    // }\r\n    // if (s==1){\r\n    //   global.nav.current.navigate('add-set');\r\n    // }\r\n    // if (s==2){\r\n    //   global.nav.current.navigate('login');\r\n    // }\r\n    // if (s==3){\r\n    //   global.nav.current.navigate('sign-up');\r\n    // }\r\n    // if (s==4){\r\n    //   global.nav.current.navigate('type-select');\r\n    // }\r\n    // if (s==5){\r\n    //   global.nav.current.navigate('settings');\r\n    // }\r\n    // if (s==6){\r\n    //   global.nav.current.navigate('add-custom-prompts');\r\n    // }\r\n    // if (s==7){\r\n    //   global.nav.current.navigate('select-custom');\r\n    // }\r\n    // if (s==8){\r\n    //   global.nav.current.navigate('swipe-add-set');\r\n    // }\r\n    // if (s==9){\r\n    //   global.nav.current.navigate('classroom-main');\r\n    // }\r\n    // if (s==10){\r\n    //   global.nav.current.navigate('classroom-create');\r\n    // }\r\n    // if (s==11){\r\n    //   global.nav.current.navigate('classroom-join');\r\n    // }\r\n    // if (s==12){\r\n    //   global.nav.current.navigate('classroom-data');\r\n    // }\r\n    // if (s==13){\r\n    //   global.nav.current.navigate('assign-type-select');\r\n    // }\r\n    // if (s==14){\r\n    //   global.nav.current.navigate('assign-custom');\r\n    // }\r\n    // if (s==15){\r\n    //   global.nav.current.navigate('assign-set');\r\n    // }\r\n    // if (s==16){\r\n    //   global.nav.current.navigate('add-set-class');\r\n    // }\r\n    // if (s==17){\r\n    //   global.nav.current.navigate('swipe-add-set-class');\r\n    // }\r\n    // if (s==18){\r\n    //   global.nav.current.navigate('grading-stud-list');\r\n    // }\r\n    // if (s==19){\r\n    //   global.nav.current.navigate('class-select-custom');\r\n    // }\r\n    // if (s==20){\r\n    //   global.nav.current.navigate('leave-feedback');\r\n    // }\r\n    // if (s==21){\r\n    //   global.nav.current.navigate('view-feedback');\r\n    // }\r\n    \r\n\r\n    return setScreen(s)\r\n  }\r\n \r\n  global.handleAssignmentLink=(cls, id)=>{\r\n        setClassName(cls);\r\n        db.ref('/classes/'+cls).once(\"value\", function(snapshot) {\r\n            var data=snapshot.val();\r\n            console.log(data)\r\n            setClassDetails(data);\r\n\r\n            if(!data['members'].includes(firebase.auth().currentUser.uid)){\r\n              return;\r\n            }\r\n            \r\n            var qInfo = data['assignments']['details'][id];\r\n            if (data['responses']!=null&&data['responses'][id]!=null&&data['responses'][id][firebase.auth().currentUser.uid]!=null){\r\n                qInfo = data['responses'][id][firebase.auth().currentUser.uid];\r\n            }\r\n\r\n            \r\n            var fInfo={'grade': '',\r\n            'gFeedback':'',\r\n            'focus':'',\r\n            'gather':'',\r\n            'brainstorm':'',\r\n            'evaluate':'',\r\n            'plan':'',\r\n            'reflect':''};\r\n            var targetScreen =16;\r\n            //console.log(props.classDetails);\r\n            if (data['responses']!=null&&data['responses'][id]!=null&&data['responses'][id][firebase.auth().currentUser.uid]!=null &&data['responses'][id][firebase.auth().currentUser.uid]['feedback']!=null){\r\n                fInfo = data['responses'][id][firebase.auth().currentUser.uid]['feedback'];\r\n                targetScreen=21;\r\n            }\r\n            if(firebase.auth().currentUser.uid==data['owner']){\r\n              targetScreen=18;\r\n            }\r\n\r\n            setFInfo(fInfo);\r\n            setRid(id);\r\n            setQInfo(qInfo);\r\n            setScreenHandler(targetScreen);\r\n\r\n\r\n              }, function (errorObject) {\r\n                console.log(\"The read failed: \" + errorObject.code);\r\n              });\r\n            }; \r\n  \r\n  \r\n\r\n  if (currScreen==2 && firebase.auth().currentUser!=null && !done){\r\n    //console.log('memememememe');\r\n    done=true;\r\n    setScreen(0);\r\n  }\r\n\r\n  //console.log(firebase.auth().currentUser.uid)\r\n  const setGoalsHanlder=goals=>{\r\n    //console.log(firebase.auth().currentUser.uid)\r\n    db.ref(firebase.auth().currentUser.uid+'/set-list').set(goals);\r\n    return setCourseGoals(goals);\r\n  }\r\n\r\n  const goClassroomHandler=()=>{\r\n    var l =[];\r\n    //console.log(firebase.auth().currentUser.uid)\r\n    db.ref('/classes').once(\"value\", function(snapshot) {\r\n      const data=snapshot.val();\r\n      const uid = firebase.auth().currentUser.uid;\r\n      \r\n      for(var c in data){\r\n          \r\n          for(var m in data[c]['members']){\r\n              if(uid==data[c]['members'][m]){\r\n                  l.push({'id':c,'value':c});\r\n              }\r\n          }\r\n          \r\n      }\r\n\r\n      console.log(l);\r\n      setClasses(l);\r\n      setScreenHandler(9);\r\n    }, function (errorObject) {\r\n      console.log(\"The read failed: \" + errorObject.code+' Please try again');\r\n    });\r\n    \r\n  }\r\n  global.goClassroom=goClassroomHandler;\r\n  \r\n  global.setScreen=setScreenHandler;\r\n  const globalUpdate = ()=>{\r\n    console.log('global update, qlist='+courseGoals)\r\n    global.props={currScreen:currScreen,\r\n      setScreen:setScreenHandler,\r\n      courseGoals:courseGoals,\r\n      setCourseGoals:setCourseGoals,\r\n      colorList:colorList,\r\n      setColorList:setColorList,\r\n      qInfo:qInfo,\r\n      setQInfo:setQInfo,\r\n      rid:rid,\r\n      setRid:setRid,\r\n      classes: classes,\r\n      setClasses: setClasses,\r\n      classDetails:classDetails,\r\n      setClassDetails:setClassDetails,\r\n      className: className,\r\n      setClassName:setClassName,\r\n      student:student,\r\n      setStudent:setStudent,\r\n      fInfo: fInfo,\r\n      setFInfo: setFInfo,\r\n      qList:courseGoals,\r\n      setQList:setGoalsHanlder,\r\n      setNoDB:setCourseGoals\r\n  \r\n    }\r\n  }\r\n\r\n  global.props={currScreen:currScreen,\r\n    setScreen:setScreenHandler,\r\n    courseGoals:courseGoals,\r\n    setCourseGoals:setCourseGoals,\r\n    colorList:colorList,\r\n    setColorList:setColorList,\r\n    qInfo:qInfo,\r\n    setQInfo:setQInfo,\r\n    rid:rid,\r\n    setRid:setRid,\r\n    classes: classes,\r\n    setClasses: setClasses,\r\n    classDetails:classDetails,\r\n    setClassDetails:setClassDetails,\r\n    className: className,\r\n    setClassName:setClassName,\r\n    student:student,\r\n    setStudent:setStudent,\r\n    fInfo: fInfo,\r\n    setFInfo: setFInfo,\r\n    qList:courseGoals,\r\n    setQList:setGoalsHanlder,\r\n    setNoDB:setCourseGoals,\r\n    globalUpdate:globalUpdate\r\n  };\r\n  const Stack = createStackNavigator();\r\n  const nav = React.useRef(null);\r\n  const navCon =  <NavigationContainer  linking={{ enabled: true }} ref={nav} fallback={<Login setScreen = {setScreenHandler}/>}>\r\n  <Stack.Navigator>\r\n      <Stack.Screen  name=\"selfq\" component={Blank}/>\r\n      <Stack.Screen  name=\"link\" component={Linking}/>\r\n      {/*<Stack.Screen  name=\"login\" component={Login}/>\r\n      <Stack.Screen  name=\"home\" component={Home}/>\r\n      <Stack.Screen  name=\"add-set\" component={AddSet}/>\r\n      <Stack.Screen  name=\"sign-up\" component={SignUp}/>\r\n      <Stack.Screen  name=\"type-select\" component={AddSet}/>\r\n      <Stack.Screen  name=\"settings\" component={Settings}/>\r\n      <Stack.Screen  name=\"add-custom-prompts\" component={AddCustomPrompts}/>\r\n      <Stack.Screen  name=\"select-custom\" component={SelectCustom}/>\r\n      <Stack.Screen  name=\"swipe-add-set\" component={SwipeAddSet}/>\r\n      <Stack.Screen  name=\"classroom-main\" component={ClassroomMain}/>\r\n      <Stack.Screen  name=\"classroom-create\" component={ClassroomCreate}/>\r\n      <Stack.Screen  name=\"classroom-join\" component={ClassroomJoin}/>\r\n      <Stack.Screen  name=\"classroom-details\" component={ClassroomDetails}/>\r\n      <Stack.Screen  name=\"assign-type-select\" component={AssignTypeSelect}/>\r\n      <Stack.Screen  name=\"assign-custom\" component={AssignCustom}/>\r\n      <Stack.Screen  name=\"assign-set\" component={AssignSet}/>\r\n      <Stack.Screen  name=\"add-set-class\" component={AddSetClass}/>\r\n      <Stack.Screen  name=\"swipe-add-set-class\" component={SwipeAddSetClass}/>\r\n      <Stack.Screen  name=\"grading-stud-list\" component={GradingStudList}/>\r\n      <Stack.Screen  name=\"class-select-custom\" component={ClassSelectCustom}/>\r\n      <Stack.Screen  name=\"leave-feedback\" component={LeaveFeedback}/>\r\n<Stack.Screen  name=\"view-feedback\" component={ViewFeedback}/>*/}\r\n      \r\n        \r\n    </Stack.Navigator>\r\n</NavigationContainer>;\r\n  var screen = <Home setRid={setRid} setQInfo={setQInfo } setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder} setNoDB={setCourseGoals}/>\r\n  if (currScreen==1 ){\r\n    screen = <AddSet rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\r\n  }\r\n  if (currScreen==2){\r\n    screen = <Login setScreen = {setScreenHandler} nav={nav}/>\r\n  }\r\n  if (currScreen==3){\r\n    screen = <SignUp setScreen = {setScreenHandler}/>\r\n  }\r\n  if (currScreen==4){\r\n    screen = <TypeSelect setQInfo={setQInfo} setScreen = {setScreen} setRid={setRid}/>\r\n  }\r\n  if (currScreen==5){\r\n    screen = <Settings setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==6){\r\n    screen = <AddCustomPrompts qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==7){\r\n    screen = <SelectCustom setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==8){\r\n    screen = <SwipeAddSet rid={rid} qList={courseGoals} setQList={setGoalsHanlder} setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==9){\r\n    screen = <ClassroomMain setClassName={setClassName} setClassDetails={setClassDetails} classes={classes} setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==10){\r\n    screen = <ClassroomCreate classes={classes}setClasses={setClasses} setClassDetails={setClassDetails}setClassName={setClassName}setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==11){\r\n    screen = <ClassroomJoin  classes={classes}setClasses={setClasses}setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==12){\r\n    screen = <ClassroomDetails link={link} setLink={setLink} setFInfo={setFInfo} setRid={setRid} name ={className}classDetails={classDetails} setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==13){\r\n    screen = <AssignTypeSelect setQInfo={setQInfo} setScreen = {setScreen} setRid={setRid}/>\r\n  }\r\n  if (currScreen==14){\r\n    screen = <AssignCustom setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==15){\r\n    screen = <AssignSet setLink={setLink} className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} classDetails ={classDetails} setClassDetails={setClassDetails}/>\r\n  }\r\n  if (currScreen==16){\r\n    screen = <AddSetClass classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\r\n  }\r\n  if (currScreen==17){\r\n    screen = <SwipeAddSetClass classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\r\n  }\r\n  if (currScreen==18){\r\n    screen = <GradingStudList link={link} setLink={setLink} setFInfo={setFInfo}setStudent={setStudent} rid={rid}classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\r\n  }\r\n  if (currScreen==19){\r\n    screen = <ClassSelectCustom setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\r\n  }\r\n  if (currScreen==20){\r\n    screen = <LeaveFeedback fInfo={fInfo} student={student} classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\r\n  }\r\n  if (currScreen==21){\r\n    screen = <ViewFeedback fInfo={fInfo} student={student} classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\r\n  }\r\n  if (currScreen==22){\r\n    screen = <LinkLoading/>\r\n  }\r\n  //const navigation = useNavigation();\r\n  //navigation.setParams({setScreen:setScreenHandler});\r\n  //console.log('meme.exe '+navigation.params)\r\n \r\n  // const l = StackNavigator({\r\n  //   login: {screen: (props)=> <Login {...props} setScreen = {setScreenHandler}/>\r\n  //   },\r\n  //   navigationOptions: ({navigation}) => ({\r\n  //     title: 'Login',\r\n  // })\r\n  // });\r\n  \r\n //navigationRef.params={a:'a'};\r\n //console.log(navigationRef.params);\r\n\r\n\r\n\r\n  //screen =<AddCustomSet setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\r\n  const {height} = Dimensions.get(\"screen\");\r\n  var space = 64+50+30;\r\n  if(Platform.OS=='android'){\r\n    space-=30;\r\n  }\r\n  return (\r\n    <View style={{height:height-space+64}}>\r\n      { <View style={{height:height-space}}>\r\n        {screen}\r\n      </View> }\r\n      {navCon}\r\n    <View style={{justifyContent:'flex-end'}}>\r\n      <MenuBar goClassroom={goClassroomHandler} setScreen ={setScreenHandler} screen ={currScreen} colorList={colorList}></MenuBar>\r\n    </View>\r\n    </View>\r\n  );\r\n\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\r\n\r\nimport GoalItem from '../components/GoalItem';\r\nimport firebase from 'firebase';\r\n//import Card from '../components/Card'\r\n\r\nvar once = 0;\r\nconst Home = props =>{\r\n    //props = {...global.props, props};\r\n    const db = firebase.database();\r\n    if (firebase.auth().currentUser.uid!=once){\r\n      db.ref(firebase.auth().currentUser.uid+'/set-list').on(\"value\", function(snapshot) {\r\n        console.log(snapshot.val())\r\n        if(snapshot.val()!=null){\r\n          console.log(props.setNoDB);\r\n          props.setNoDB(snapshot.val());\r\n          //props.globalUpdate();\r\n          //console.log(props);\r\n          //console.log(props.qList);\r\n        }\r\n      }, function (errorObject) {\r\n        console.log(\"The read failed: \" + errorObject.code);\r\n      });\r\n      once=firebase.auth().currentUser.uid;\r\n   }\r\n\r\n\r\n    const removeGoalHandler = goalId=>{\r\n        // props.setQList(currentGoals=>{\r\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\r\n        // });\r\n        db.ref(firebase.auth().currentUser.uid+'/detail-list/'+goalId).once(\"value\", function(snapshot) {\r\n          const data=snapshot.val();\r\n          props.setRid(goalId);\r\n          props.setQInfo(data);\r\n          props.setScreen(1);\r\n        }, function (errorObject) {\r\n          console.log(\"The read failed: \" + errorObject.code);\r\n        });\r\n      }; \r\n    return   (\r\n    <View style={styles.screen}>\r\n      <Button title  = 'New Question Set' onPress={()=>props.setScreen(4)}/>\r\n      <FlatList data = {props.qList}\r\n      keyExtractor={(item, index)=> item.id}\r\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30\r\n      }\r\n});\r\n\r\nexport default Home;","import React, {useState} from 'react';\r\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\r\n\r\nimport GoalInput from '../components/GoalInput';\r\nimport CustomGoalInput from '../components/CustomGoalInput';\r\nimport firebase from 'firebase'\r\n\r\nconst AddSet = props =>{\r\n    const db = firebase.database();\r\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\r\n\r\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\r\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\r\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\r\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\r\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\r\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\r\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\r\n\r\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\r\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\r\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\r\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\r\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\r\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\r\n    const addGoalHandler = goalTitle=>{\r\n        const rid =props.rid;\r\n        var rid_contained=false;\r\n        var l =[]\r\n        props.qList.forEach(element=>{\r\n            if(element['id']!=rid){\r\n                l.push(element);\r\n            }\r\n        });\r\n        props.setQList([...l, {id: rid, value: goalTitle}]);\r\n        const details = {'name': userInput,\r\n                        'focus':{\r\n                            'prompt':focusP,\r\n                            'answer':focus\r\n                        },\r\n                        'gather':{\r\n                            'prompt':gatherP,\r\n                            'answer':gather\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':brainstormP,\r\n                            'answer':brainstorm\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt':evaluateP,\r\n                            'answer':evaluate\r\n                        },\r\n                        'plan':{\r\n                            'prompt':planP,\r\n                            'answer':plan\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':reflectP,\r\n                            'answer':reflect\r\n                        }};\r\n        console.log(details);\r\n        db.ref(firebase.auth().currentUser.uid+'/detail-list/'+rid).set(details);\r\n        var toPage=0;\r\n        if(focusP!=props.qInfo['focus']['prompt']||gatherP!=props.qInfo['gather']['prompt']||brainstormP!=props.qInfo['brainstorm']['prompt']||\r\n            evaluateP!=props.qInfo['evaluate']['prompt']||planP!=props.qInfo['plan']['prompt']||reflectP!=props.qInfo['reflect']['prompt']  ){\r\n                props.setQInfo(details);\r\n                toPage=6;\r\n            }\r\n        //console.log(details);\r\n        props.setScreen(toPage);\r\n      };\r\n\r\n      const handleSwipeButton=()=>{\r\n        const details = {'name': userInput,\r\n        'focus':{\r\n            'prompt':focusP,\r\n            'answer':focus\r\n        },\r\n        'gather':{\r\n            'prompt':gatherP,\r\n            'answer':gather\r\n        },\r\n        'brainstorm':{\r\n            'prompt':brainstormP,\r\n            'answer':brainstorm\r\n        },\r\n        'evaluate':{\r\n            'prompt':evaluateP,\r\n            'answer':evaluate\r\n        },\r\n        'plan':{\r\n            'prompt':planP,\r\n            'answer':plan\r\n        },\r\n        'reflect':{\r\n            'prompt':reflectP,\r\n            'answer':reflect\r\n        }};\r\n        props.setQInfo(details);\r\n          props.setScreen(8);\r\n      }\r\n\r\n    const regInput=<React.Fragment>\r\n    <GoalInput input = {focus} setInput={setFocus} text={props.qInfo['focus']['prompt']}color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }useCustom={setUseCustom}/>\r\n    <GoalInput input = {gather} setInput={setGather} text={props.qInfo['gather']['prompt']} color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {brainstorm} setInput={setBrainstorm} text={props.qInfo['brainstorm']['prompt']} color ='orange' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {evaluate} setInput={setEvaluate} color ='green' text={props.qInfo['evaluate']['prompt']} header='Evaluate' question = {props.qInfo['evaluate']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {plan} setInput={setPlan} color ='#ffdb58' text={props.qInfo['plan']['prompt']} header='Plan and Act' question = {props.qInfo['plan']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {reflect} setInput={setReflect} text={props.qInfo['reflect']['prompt']}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}useCustom={setUseCustom}/></React.Fragment>;\r\n\r\nconst custInput=<React.Fragment>\r\n<CustomGoalInput color='#00FFFF' input = {focus} setInput={setFocus}  header='Select A Focus' prompt={focusP} setPrompt={setFocusP}/>\r\n<CustomGoalInput color ='#AF69EF' input = {gather} setInput={setGather}  header='Gather Information' prompt={gatherP} setPrompt={setGatherP}/>\r\n<CustomGoalInput color ='yellow' input = {brainstorm} setInput={setBrainstorm}  header='Brainstorm' prompt={brainstormP} setPrompt={setBrainstormP}/>\r\n<CustomGoalInput color ='green' input = {evaluate} setInput={setEvaluate}  header='Evaluate' prompt={evaluateP} setPrompt={setEvaluateP}/>\r\n<CustomGoalInput color ='ffdb58' input = {plan} setInput={setPlan}  header='Plan and Act' prompt={planP} setPrompt={setPlanP}/>\r\n<CustomGoalInput color ='purple' input = {reflect} setInput={setReflect}  header='Reflect' prompt={reflectP} setPrompt={setReflectP}/>\r\n</React.Fragment>;\r\n    var input=useCustom? custInput:regInput;\r\n\r\n    return(\r\n        <ScrollView>\r\n            <View style={{width:'90%', flexDirection:'row-reverse'}}>\r\n                <TouchableOpacity onPress={handleSwipeButton}>\r\n                    <Image style={{height:50,width:50, margin:16}}\r\n                        source={require('../assets/swipe_btn.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n                \r\n            <View style={{\r\n                padding:30,\r\n                flex:1,\r\n                flexDirection :'column',\r\n                alignItems: 'center'\r\n            }}>\r\n                \r\n                <Text style={{fontWeight:'bold'}} >Name this Question Set</Text>\r\n                <TextInput value = {userInput} placeholder = 'Name' style={{\r\n            width: '80%', \r\n            borderColor:'black', \r\n            borderWidth:1, \r\n            padding:10,\r\n            marginBottom: 10\r\n        }} onChangeText ={text=>setUserInput(text)}/>\r\n                {input}\r\n                <Button style={{width:'20%'}} title='DONE' onPress = {addGoalHandler.bind(this, userInput)}/>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30,\r\n        alignItems:'center'\r\n      },\r\n      button:{\r\n        width:'20%' \r\n      },\r\n      input:{\r\n        width: '80%', \r\n        borderColor:'black', \r\n        borderWidth:1, \r\n        padding:10,\r\n        marginBottom: 10\r\n      }\r\n});\r\n\r\nexport default AddSet;","import React, {useState} from 'react';\r\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\r\nimport firebase from 'firebase';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\n\r\nconst TypeSelect = props =>{\r\n    props = {...global.props, props};\r\n    const [academic_open, set_academic_open]= useState(true);\r\n    const [personal_open, set_personal_open]= useState(false);\r\n    const science=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n                        'focus':{\r\n                            'prompt':'What are my questions? Which question is most relevant?',\r\n                            'answer':''\r\n                        },\r\n                        'gather':{\r\n                            'prompt':'How will I gather information? What is my hypothesis?',\r\n                            'answer':''\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':  'How will I design an experiment? How is this similar to previous experiments?',\r\n                            'answer':''\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt':'What is the best choice?',\r\n                            'answer':''\r\n                        },\r\n                        'plan':{\r\n                            'prompt':'What do I do first, second ..? Is this working?',\r\n                            'answer':''\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':'What did I learn? How do I know?',\r\n                            'answer':''\r\n                        }});\r\n        props.setScreen(1);\r\n    }\r\n    const math=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n                        'focus':{\r\n                            'prompt':'What is the problem asking me to solve?',\r\n                            'answer':''\r\n                        },\r\n                        'gather':{\r\n                            'prompt':'How do I know? What do I need to know?',\r\n                            'answer':''\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':   'What are the ways I can solve this problem?',\r\n                            'answer':''\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt': 'What is the best way to solve this problem?',\r\n                            'answer':''\r\n                        },\r\n                        'plan':{\r\n                            'prompt':  'Can I make a model?',\r\n                            'answer':''\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':'Did it work? How do I know?',\r\n                            'answer':''\r\n                        }});\r\n        props.setScreen(1);\r\n    }\r\n    const reading=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':\"Do I understand what I'm reading? Does what I'm reading make sense?\",\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt':'What do I understand? What do I need to understand?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':   'What strategies could help me understand?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':  'Which is the best choice? Why?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What should I try first? Second?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Is this working? Do I understand now?',\r\n            'answer':''\r\n        }});\r\n  \r\n        props.setScreen(1);\r\n    }\r\n\r\n    const writing=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'How do I select a topic/focus? What questions do I have about any topic/focus? What are my best questions?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'How will I gather information on some or all of my questions?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':    'How could I organize and present my information?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'What is the best choice? Why?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What do I do first, second ..? Is this working?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'What was surprising about my research? What did I do well and how can I improve?',\r\n            'answer':''\r\n        }});\r\n\r\n        props.setScreen(1);\r\n    }\r\n\r\n    const social=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'What happened?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'Who? What? Where? When? Why? How?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':    'What am I willing to do? What have a I tried? What might work?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'What are the pros and cons? What is the best choice? ',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What are my next steps? How can I do it?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again to solve this?',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(1);\r\n    }\r\n\r\n    const emotional=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'What am I feeling? How do I/they feel? What is she/he feeling?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'What is causing this feeling?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':     'What strategies can I use to make myself feel better?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'Has this helped me in the past? How did it help? How did it help? How did I feel after?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again? ',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(1);\r\n    }\r\n\r\n    const academicAndSocial=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'What is the problem? What is the question? What is the task?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'What do I know? What do I need to know? What is similar and what is different?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':     'How can I solve this problem? What are possible solutions? What can I do?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'What is the best way to solve this problem? Does this make sense?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again?',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(1);\r\n    }\r\n    const custom=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': '',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':     '',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   '',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  '',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': '',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(7);\r\n    }\r\n\r\n    var academic = \r\n    <React.Fragment>\r\n    <View style={styles.row}>\r\n    <TouchableOpacity onPress={science}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_science.png')}\r\n    resizeMode={\"stretch\"}\r\n    /></TouchableOpacity>\r\n    <TouchableOpacity onPress={math}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_math.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n</View>\r\n<View style={styles.row}>\r\n    <TouchableOpacity onPress={reading}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_reading.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n    <TouchableOpacity onPress={writing}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_writing.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n</View></React.Fragment>;\r\n     var personal = \r\n    <React.Fragment>\r\n    <View style={styles.row}>\r\n    <View style={styles.extraSpacing}>\r\n    <TouchableOpacity onPress={social}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_social.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n    </View>\r\n   \r\n</View></React.Fragment>;\r\n\r\n    return   (\r\n\r\n        <ScrollView>\r\n            <View style={styles.row}>\r\n             \r\n                        <TouchableOpacity onPress={academicAndSocial}>\r\n                            <Image style={styles.image}\r\n                            source={require('../assets/academic_social.png')}\r\n                            resizeMode={\"stretch\"}/>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={emotional}>\r\n                        <Image style={styles.image}\r\n                        source={require('../assets/selfq_emotional.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                        </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.row}>\r\n                <View style={styles.extraSpacing}>\r\n                    <TouchableOpacity onPress={custom}>\r\n                        <Image style={styles.image}\r\n                        source={require('../assets/selfq_custom.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n             \r\n            </View>\r\n            <View style={styles.row}>\r\n                <TouchableOpacity style={styles.dropdown} onPress= {set_academic_open.bind(this,!academic_open)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(academic_open?'v':'>') +'  Academic'}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {academic_open && academic}\r\n\r\n            <View style={styles.row}>\r\n                <TouchableOpacity style={styles.dropdown} onPress= {set_personal_open.bind(this,!personal_open)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(personal_open?'v':'>') +'  Personal'}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {personal_open && personal}\r\n\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n/*\r\n\r\n*/\r\nconst {width} = Dimensions.get(\"screen\");\r\nconst image_width =Math.min( width * 0.45,250);\r\nconst styles = StyleSheet.create({\r\n    image:{\r\n        height:image_width,\r\n        width:image_width,\r\n        margin:15\r\n    },\r\n    dropdown:{\r\n        width:2*image_width +30\r\n    },\r\n    row:{\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n    },\r\n    listItem:{ \r\n        padding:10,\r\n        marginVertical:10,\r\n        backgroundColor: '#ccc',\r\n        borderColor:'black',\r\n        borderWidth:1\r\n      },\r\n      extraSpacing:{\r\n          marginRight:image_width+15\r\n        }\r\n  });\r\n  \r\n\r\nexport default TypeSelect;","import React, {useState} from 'react';\r\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\r\nimport firebase from 'firebase';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\nconst Settings= props =>{\r\n\r\n    const handleSignOut = ()=>{\r\n        firebase.auth().signOut();\r\n        props.setScreen(2);\r\n    }\r\n    \r\n    return   (\r\n    <View style={styles.container}>\r\n        <View style={{ alignItems:'center', justifyContent:'center'}}>\r\n            <Button  title=\"  Log Out  \" onPress ={handleSignOut}/>\r\n        </View>\r\n    </View>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1, \r\n      alignItems: 'center',\r\n    justifyContent:'center'}\r\n   \r\n  });\r\n  \r\n\r\nexport default Settings;","import React, {useState} from 'react';\r\nimport {View, Text, Button, StyleSheet,FlatList, TouchableOpacity, TextInput} from 'react-native';\r\n\r\nimport GoalItem from '../components/GoalItem';\r\nimport firebase from 'firebase';\r\n//import Card from '../components/Card'\r\n\r\nconst AddCustomPrompts = props =>{\r\n    const handleEdit=()=>{\r\n        props.setScreen(1);\r\n    }\r\n\r\n    const[yesSave, setYesSave]=useState(false);\r\n    const[name, setName]=useState('');\r\n\r\n    const handleSetSave=()=>{\r\n        setYesSave(true);\r\n    }\r\n   \r\n    const handleNo=()=>{\r\n        props.setScreen(0);\r\n    }\r\n    const handleCancel=()=>{\r\n        setYesSave(false);\r\n    }\r\n    const handleSave=()=>{\r\n        const db= firebase.database();\r\n        var details=props.qInfo;\r\n        details['name']='';\r\n        details['focus']['answer']='';\r\n        details['gather']['answer']='';\r\n        details['brainstorm']['answer']='';\r\n        details['plan']['answer']='';\r\n        details['reflect']['answer']='';\r\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+name).set(details);\r\n        props.setScreen(0);\r\n    }\r\n    return   (\r\n    <View style={styles.screen}>\r\n        <Text style={{color: '#05375a',fontSize: 30,fontWeight: 'bold',padding:15}}>Set Saved!</Text>\r\n        <Text style={{color: '#05375a',fontSize: 30}}>Also save custom prompt list for reuse?</Text>\r\n        \r\n        {!yesSave&&<View style={{flexDirection:'row'}}>\r\n            <View style={{padding:15}}>\r\n                <Button  title=' Yes ' onPress={handleSetSave}/>\r\n            </View>\r\n            <View style={{padding:15}}>\r\n                <Button  title=' No ' onPress={handleNo}/>\r\n            </View>\r\n        </View>}\r\n        {yesSave&&<View  style={styles.screen}>\r\n            <TextInput style={{width: '100%', borderColor:'black', borderWidth:1, padding:10,marginBottom: 10}}placeholder='Name this prompt set' value={name} onChangeText={setName}/>\r\n            <View style={{flexDirection:'row'}}>\r\n                <View style={{padding:15}}>\r\n                    <Button  title=' Save ' onPress={handleSave}/>\r\n                </View>\r\n                <View style={{padding:15}}>\r\n                    <Button  title=' Cancel ' onPress={handleCancel}/>\r\n                </View>\r\n            </View>\r\n        </View>}\r\n\r\n        <Text style={{fontWeight:'bold', color :'red'}}>Select A Focus</Text>\r\n        <TouchableOpacity onPress={handleEdit}>\r\n            <Text>{props.qInfo['focus']['prompt']}</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={{fontWeight:'bold', color :'orange'}}>Gather Information</Text>\r\n        <TouchableOpacity onPress={handleEdit}>\r\n            <Text>{props.qInfo['gather']['prompt']}</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={{fontWeight:'bold', color :'yellow'}}>Brainstorm</Text>\r\n        <TouchableOpacity onPress={handleEdit}>\r\n            <Text>{props.qInfo['brainstorm']['prompt']}</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={{fontWeight:'bold', color :'green'}}>Evaluate</Text>\r\n        <TouchableOpacity onPress={handleEdit}>\r\n            <Text>{props.qInfo['evaluate']['prompt']}</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={{fontWeight:'bold', color :'blue'}}>Plan and Act</Text>\r\n        <TouchableOpacity onPress={handleEdit}>\r\n            <Text>{props.qInfo['plan']['prompt']}</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={{fontWeight:'bold', color :'purple'}}>Reflect</Text>\r\n        <TouchableOpacity onPress={handleEdit}>\r\n            <Text>{props.qInfo['reflect']['prompt']}</Text>\r\n        </TouchableOpacity>\r\n\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30,\r\n        alignItems:'center'\r\n      }\r\n});\r\n\r\nexport default AddCustomPrompts;","import React, {useState} from 'react';\r\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\r\n\r\nimport GoalItem from '../components/GoalItem';\r\nimport firebase from 'firebase';\r\n//import Card from '../components/Card'\r\n\r\n//var once = 0;\r\nconst SelectCustom = props =>{\r\n    const [nameList, setNameList]=useState([]);\r\n    const db = firebase.database();\r\n    //if (firebase.auth().currentUser.uid!=once){\r\n      db.ref(firebase.auth().currentUser.uid+'/custom-prompts').once(\"value\", function(snapshot) {\r\n\r\n        //console.log(snapshot.val())\r\n        if(snapshot.val()!=null){\r\n          var l =[];\r\n            for (var n in snapshot.val()){\r\n               l.push({'id':n,'value':n});\r\n           }\r\n          setNameList(l);\r\n        }\r\n      }, function (errorObject) {\r\n        console.log(\"The read failed: \" + errorObject.code);\r\n      });\r\n     // once=firebase.auth().currentUser.uid;\r\n  // }\r\n\r\n\r\n    const removeGoalHandler = goalId=>{\r\n        // props.setQList(currentGoals=>{\r\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\r\n        // });\r\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+goalId).once(\"value\", function(snapshot) {\r\n          const data=snapshot.val();\r\n          console.log(goalId)\r\n          props.setQInfo(data);\r\n          props.setScreen(1);\r\n        }, function (errorObject) {\r\n          console.log(\"The read failed: \" + errorObject.code);\r\n        });\r\n      }; \r\n    return   (\r\n    <View style={styles.screen}>\r\n      <Button title  = 'New Custom Set' onPress={()=>props.setScreen(1)}/>\r\n      <FlatList data = {nameList}\r\n      keyExtractor={(item, index)=> item.id}\r\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30\r\n      }\r\n});\r\n\r\nexport default SelectCustom;","import React, {useState} from 'react';\r\nimport {Image,View, Platform,Dimensions, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\r\n\r\nimport GoalInput from '../components/GoalInput';\r\nimport CustomGoalInput from '../components/CustomGoalInput';\r\nimport firebase from 'firebase'\r\n\r\nconst SwipeAddSet = props =>{\r\n    const db = firebase.database();\r\n    const [currQ, setCurrQ]= useState(0);\r\n    const [useCustom, setUseCustom]= useState(false);\r\n\r\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\r\n    console.log(userInput);\r\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\r\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\r\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\r\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\r\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\r\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\r\n\r\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\r\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\r\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\r\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\r\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\r\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\r\n    const addGoalHandler = goalTitle=>{\r\n        const rid =props.rid;\r\n        //console.log(rid);\r\n        var l =[];\r\n        props.qList.forEach(element=>{\r\n            if(element['id']!=rid){\r\n                l.push(element);\r\n            }\r\n        });\r\n        console.log([...l, {id: rid, value: userInput}]);\r\n        props.setQList([...l, {id: rid, value: userInput}]);\r\n        const details = {'name': userInput,\r\n                        'focus':{\r\n                            'prompt':focusP,\r\n                            'answer':focus\r\n                        },\r\n                        'gather':{\r\n                            'prompt':gatherP,\r\n                            'answer':gather\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':brainstormP,\r\n                            'answer':brainstorm\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt':evaluateP,\r\n                            'answer':evaluate\r\n                        },\r\n                        'plan':{\r\n                            'prompt':planP,\r\n                            'answer':plan\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':reflectP,\r\n                            'answer':reflect\r\n                        }};\r\n        \r\n        db.ref(firebase.auth().currentUser.uid+'/detail-list/'+rid).set(details);\r\n        var toPage=0;\r\n        if(focusP!=props.qInfo['focus']['prompt']||gatherP!=props.qInfo['gather']['prompt']||brainstormP!=props.qInfo['brainstorm']['prompt']||\r\n            evaluateP!=props.qInfo['evaluate']['prompt']||planP!=props.qInfo['plan']['prompt']||reflectP!=props.qInfo['reflect']['prompt']  ){\r\n                props.setQInfo(details);\r\n                toPage=6;\r\n            }\r\n        //console.log(details);\r\n        props.setScreen(toPage);\r\n      };\r\n      const handleSwipeButton=()=>{\r\n        const details = {'name': userInput,\r\n        'focus':{\r\n            'prompt':focusP,\r\n            'answer':focus\r\n        },\r\n        'gather':{\r\n            'prompt':gatherP,\r\n            'answer':gather\r\n        },\r\n        'brainstorm':{\r\n            'prompt':brainstormP,\r\n            'answer':brainstorm\r\n        },\r\n        'evaluate':{\r\n            'prompt':evaluateP,\r\n            'answer':evaluate\r\n        },\r\n        'plan':{\r\n            'prompt':planP,\r\n            'answer':plan\r\n        },\r\n        'reflect':{\r\n            'prompt':reflectP,\r\n            'answer':reflect\r\n        }};\r\n        props.setQInfo(details);\r\n        props.setScreen(1);\r\n    }\r\n\r\n    const namePage=<React.Fragment>\r\n      <View style={{flex:1}}>\r\n      <View style={{width:'90%', flexDirection:'row-reverse'}}>\r\n                <TouchableOpacity onPress={handleSwipeButton}>\r\n                    <Image style={{height:50,width:50, margin:16}}\r\n                        source={require('../assets/row_btn.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n          <View style={{\r\n                  flex:1,\r\n                  flexDirection :'column',\r\n                  alignItems: 'center',\r\n                  padding:20\r\n              }}>\r\n                  <TextInput value={userInput} onChangeText={setUserInput} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Name this question set'></TextInput>\r\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                          <Button onPress={(userInput)=>addGoalHandler(userInput)} title={' DONE '}/>\r\n                          \r\n                  </View>\r\n                  <View style={{height:'70%',flexDirection:'column-reverse'}}>\r\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                                <Image \r\n                                source={require('../assets/left_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                                <Image \r\n                                source={require('../assets/right_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            \r\n                    </View>\r\n                    </View>\r\n          </View>\r\n      </View>\r\n  </React.Fragment>;\r\n\r\n    const focusPage=<React.Fragment>\r\n        <View style={{flex:1}}>\r\n            <View style={{\r\n                    flex:1,\r\n                    flexDirection :'column',\r\n                    alignItems: 'center',\r\n                    backgroundColor:'#00FFFF',\r\n                    padding:20\r\n                }}>\r\n                    <TextInput value={focusP} onChangeText={setFocusP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a focus question'></TextInput>\r\n                    <TextInput value={focus} onChangeText={setFocus} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the focus question'></TextInput>\r\n                    <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                                <Image \r\n                                source={require('../assets/left_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                                <Image \r\n                                source={require('../assets/right_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            \r\n                    </View>\r\n            </View>\r\n        </View>\r\n    </React.Fragment>;\r\n\r\nconst gatherPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'#AF69EF',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={gatherP} onChangeText={setGatherP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a gathering information question'></TextInput>\r\n            <TextInput value={gather} onChangeText={setGather} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the gathering information question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst brainstormPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'yellow',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={brainstormP} onChangeText={setBrainstormP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a brainstorming question'></TextInput>\r\n            <TextInput value={brainstorm} onChangeText={setBrainstorm} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the brainstorming question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst evaluatePage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'green',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={evaluateP} onChangeText={setEvaluateP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask an evaluation question'></TextInput>\r\n            <TextInput value={evaluate} onChangeText={setEvaluate} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the evaluation question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst planPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'#ffdb58',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={planP} onChangeText={setPlanP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a plan and action question'></TextInput>\r\n            <TextInput value={plan} onChangeText={setPlan} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the plan and action question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst reflectPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'purple',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={reflectP} onChangeText={setReflectP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a reflection question'></TextInput>\r\n            <TextInput value={reflect} onChangeText={setReflect} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the reflection question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\n\r\n\r\n    return(\r\n        <View style={{flex:1}}>\r\n            {currQ==0&&namePage}\r\n            {currQ==1&&focusPage}\r\n            {currQ==2&&gatherPage}\r\n            {currQ==3&&brainstormPage}\r\n            {currQ==4&&evaluatePage}\r\n            {currQ==5&&planPage}\r\n            {currQ==6&&reflectPage}\r\n        </View>\r\n    );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30,\r\n        alignItems:'center'\r\n      },\r\n      button:{\r\n        width:'20%' \r\n      },\r\n      input:{\r\n        width: '80%', \r\n        borderColor:'black', \r\n        borderWidth:1, \r\n        padding:10,\r\n        marginBottom: 10\r\n      }\r\n});\r\n\r\nexport default SwipeAddSet;","import React, {useState} from 'react';\r\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image} from 'react-native';\r\nimport firebase from 'firebase';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\n\r\nconst SignUp = props =>{\r\n    console.log('HERE SIR');\r\n    const [email, setEmail]= useState('');\r\n    const [password, setPassword]= useState('');\r\n    const [error, setError]=useState('');\r\n    const handleSignUp = ()=>{\r\n        setError('Loading...');\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(()=>{\r\n            props.setScreen(0);\r\n        })\r\n        .catch((error)=>{\r\n            setError(error+' Please try again.');\r\n        });\r\n     \r\n    }\r\n    const handleBack = ()=>{\r\n        props.setScreen(2);\r\n     \r\n    }\r\n    return   (\r\n    <View style={styles.container}>\r\n        <View style ={styles.header}>\r\n            <Image \r\n            source={require('../assets/self-q.png')}\r\n            style={styles.logo}\r\n            resizeMode={\"stretch\"}/>\r\n        </View>\r\n        <View style ={styles.footer}>\r\n            <Text style={styles.title}>Welcome to SELf-Q!</Text>\r\n            <Text style = {styles.text}>Register With A New Account</Text>\r\n            <TextInput placeholder={\"Email\"} style ={styles.input} onChangeText={setEmail}/>\r\n            <TextInput secureTextEntry={true} placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\r\n            <Text style={styles.text}>{error}</Text>\r\n          \r\n            <View style={styles.centerRow}>\r\n                <View style={styles.button}>\r\n                    <Button style={styles.button} title=\"Sign Up\" onPress ={()=>handleSignUp()}/>\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button style={styles.button} title=\"Back\" onPress ={()=>handleBack()}/>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst {height,width} = Dimensions.get(\"screen\");\r\nconst height_logo = height * 0.14;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 2, \r\n      backgroundColor: '#009387'\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    footer: {\r\n        flex: 2,\r\n        backgroundColor: '#fff',\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        paddingVertical: 50,\r\n        paddingHorizontal: 30\r\n    },\r\n    logo: {\r\n        width: height_logo,\r\n        height: height_logo\r\n    },\r\n    title: {\r\n        color: '#05375a',\r\n        fontSize: 30,\r\n        fontWeight: 'bold'\r\n    },\r\n    text: {\r\n        color: 'grey',\r\n        marginTop:5\r\n    },\r\n    clickableText: {\r\n        color: 'blue',\r\n        fontWeight: 'bold',\r\n        marginTop:10\r\n    },\r\n    smallHeader: {\r\n        color: '#05375a',\r\n        fontWeight: 'bold',\r\n        marginTop:10\r\n    },\r\n    button: {\r\n        width:\"20%\",\r\n        marginTop: 30\r\n    },\r\n    signIn: {\r\n        width: 150,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 50,\r\n        flexDirection: 'row'\r\n    },\r\n    textSign: {\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n    },\r\n    input:{\r\n        width: '90%', \r\n         borderColor:'black', \r\n         borderWidth:1, \r\n         padding:5,\r\n        margin: 10\r\n       },\r\n    button:{\r\n        padding:20, \r\n        width:'40%'\r\n    },\r\n    centerRow:{\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n    }\r\n  });\r\n  \r\n\r\nexport default SignUp;","import React, {useState} from 'react';\r\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\r\nimport firebase from 'firebase';\r\nimport GoalItem from '../components/GoalItem';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\n\r\nconst ClassroomMain = props =>{\r\n    const db = firebase.database();\r\n    const clickClassHandler=(name)=>{\r\n        props.setClassName(name);\r\n        db.ref('/classes/'+name).once(\"value\", function(snapshot) {\r\n            var data=snapshot.val();\r\n            //console.log(data)\r\n            props.setClassDetails(data);\r\n            props.setScreen(12);\r\n          }, function (errorObject) {\r\n            console.log(\"The read failed: \" + errorObject.code);\r\n          });\r\n        }; \r\n       \r\n   \r\n     \r\n\r\n    return   (\r\n    <View style={{padding:20}}>\r\n            <View style={styles.row}>\r\n                <View style={{margin:15}}>\r\n                    <Button title=' Join a Class ' onPress={()=>props.setScreen(11)}/>  \r\n                </View> \r\n                <View style={{margin:15}}>\r\n                    <Button onPress={()=>props.setScreen(10)} title='Create a Class'/>\r\n                </View>\r\n            </View>\r\n            <FlatList style={{flex:1}}data = {props.classes}\r\n            keyExtractor={(item, index)=> item.id}\r\n            renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={id=>clickClassHandler(id)}title ={itemData.item.value}/>}/>\r\n\r\n    </View>\r\n    );\r\n}\r\n\r\nconst {width} = Dimensions.get(\"screen\");\r\nconst image_width =Math.min( width * 0.45,250);\r\nconst styles = StyleSheet.create({\r\n    \r\n    row:{\r\n        flexDirection:'row',\r\n        justifyContent:'center',\r\n        padding:15\r\n    },\r\n    listItem:{ \r\n        padding:10,\r\n        marginVertical:10,\r\n        backgroundColor: '#ccc',\r\n        borderColor:'black',\r\n        borderWidth:1\r\n      },\r\n      extraSpacing:{\r\n          marginRight:image_width+15\r\n        }\r\n  });\r\n  \r\n\r\nexport default ClassroomMain;","import React, {useState} from 'react';\r\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\r\nimport firebase from 'firebase';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\nconst ClassroomCreate= props =>{\r\n    const [name, setName]= useState('');\r\n    const [password, setPassword]= useState('');\r\n    const [error, setError]=useState('');\r\n\r\n    const db= firebase.database();\r\n   \r\n    const handleCreate = ()=>{\r\n        setError('Loading...');\r\n        //console.log('HERERE mememememe');\r\n        db.ref('/classes/'+name.toLowerCase()).once(\"value\", function(snapshot) {\r\n            const data=snapshot.val();\r\n            if(data==null){\r\n                console.log(props.classes);\r\n                props.setClasses([...props.classes, {'id':name.toLowerCase(),'value':name.toLowerCase()}]);\r\n                db.ref('/classes/'+name.toLowerCase()+'/password').set(password);\r\n                db.ref('/classes/'+name.toLowerCase()+'/members').set([firebase.auth().currentUser.uid]);\r\n                db.ref('/classes/'+name.toLowerCase()+'/owner').set(firebase.auth().currentUser.uid);\r\n                props.setClassName(name.toLowerCase());\r\n                \r\n                props.setClassDetails({'password':password,\r\n                                    'members':[firebase.auth().currentUser.uid],\r\n                                    'owner':firebase.auth().currentUser.uid\r\n\r\n                })\r\n                props.setScreen(12);\r\n            }\r\n            else{\r\n                setError('Class name already exists, please choose another. ')\r\n            }\r\n          }, function (errorObject) {\r\n            setError(\"The read failed: \" + errorObject.code+' Please try again');\r\n          });\r\n        }; \r\n     \r\n    \r\n\r\n    return   (\r\n    <View style={styles.container}>\r\n        <View >\r\n            <Text style={styles.title}>Create a Class</Text>\r\n            <TextInput placeholder={\"Class Name\"} style ={styles.input} onChangeText={setName}/>\r\n            <TextInput placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\r\n            <Text style={styles.text}>{error}</Text>\r\n            <Button style={{width:'25%'}} title=\"Create\" onPress ={handleCreate}/>\r\n        </View>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 2, \r\n      padding:20\r\n    },\r\n    title: {\r\n        color: '#05375a',\r\n        fontSize: 30,\r\n        fontWeight: 'bold'\r\n    },\r\n    text: {\r\n        color: 'grey',\r\n        marginTop:5\r\n    },\r\n    smallHeader: {\r\n        color: '#05375a',\r\n        fontWeight: 'bold',\r\n        marginTop:10\r\n    },\r\n    button: {\r\n        width:\"20%\",\r\n        marginTop: 30\r\n    },\r\n    signIn: {\r\n        width: 150,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 50,\r\n        flexDirection: 'row'\r\n    },\r\n    textSign: {\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n    },\r\n    input:{\r\n        width: '90%', \r\n         borderColor:'black', \r\n         borderWidth:1, \r\n         padding:5,\r\n        margin: 10\r\n       }\r\n  });\r\n  \r\n\r\nexport default ClassroomCreate;","import React, {useState} from 'react';\r\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\r\nimport firebase from 'firebase';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\nconst ClassroomJoin= props =>{\r\n    const [name, setName]= useState('');\r\n    const [password, setPassword]= useState('');\r\n    const [error, setError]=useState('');\r\n    const [realName, setRealName]=useState('');\r\n\r\n    const db= firebase.database();\r\n   \r\n    const handleJoin = ()=>{\r\n        setError('Loading...');\r\n        db.ref('/classes/'+name.toLowerCase()).once(\"value\", function(snapshot) {\r\n            const data=snapshot.val();\r\n            if(data==null){\r\n                setError('The class are trying to join does exist. Check the spelling and try again.')\r\n            }\r\n            else{\r\n                if(data['members'].includes(firebase.auth().currentUser.uid)){\r\n                    setError('You are already in this class.');\r\n                }\r\n                else{\r\n                    if(password!=data['password']){\r\n                        setError('Incorrect Password.')\r\n                    }\r\n                    else{\r\n                        var names=  data['names']!=null? data['names']:[]; \r\n                        db.ref('/classes/'+name.toLowerCase()+'/members').set([...data['members'], firebase.auth().currentUser.uid ]);\r\n                        db.ref('/classes/'+name.toLowerCase()+'/names').set([...names, {'id':firebase.auth().currentUser.uid,'value': realName }]);\r\n                        //console.log(props.classes);\r\n                        //console.log({'id':name.toLowerCase,'value':name.toLowerCase});\r\n                        props.setClasses([...props.classes, {'id':name.toLowerCase(),'value':name.toLowerCase()}]);\r\n                        //onsole.log(props.classes);\r\n                        props.setScreen(9);\r\n                    }\r\n                }\r\n            }\r\n          }, function (errorObject) {\r\n            setError(\"The read failed: \" + errorObject.code+' Please try again.');\r\n          });\r\n        }; \r\n     \r\n    \r\n\r\n    return   (\r\n    <View style={styles.container}>\r\n        <View >\r\n            <Text style={styles.title}>Join a Class</Text>\r\n            <TextInput placeholder={\"Enter your real name\"} style ={styles.input} onChangeText={setRealName}/>\r\n            <TextInput placeholder={\"Class Name\"} style ={styles.input} onChangeText={setName}/>\r\n            <TextInput placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\r\n            <Text style={styles.text}>{error}</Text>\r\n            <Button style={{width:'25%'}} title=\"Join\" onPress ={handleJoin}/>\r\n        </View>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 2, \r\n      padding:20\r\n    },\r\n    title: {\r\n        color: '#05375a',\r\n        fontSize: 30,\r\n        fontWeight: 'bold'\r\n    },\r\n    text: {\r\n        color: 'grey',\r\n        marginTop:5\r\n    },\r\n    smallHeader: {\r\n        color: '#05375a',\r\n        fontWeight: 'bold',\r\n        marginTop:10\r\n    },\r\n    button: {\r\n        width:\"20%\",\r\n        marginTop: 30\r\n    },\r\n    signIn: {\r\n        width: 150,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 50,\r\n        flexDirection: 'row'\r\n    },\r\n    textSign: {\r\n        color: 'white',\r\n        fontWeight: 'bold'\r\n    },\r\n    input:{\r\n        width: '90%', \r\n         borderColor:'black', \r\n         borderWidth:1, \r\n         padding:5,\r\n        margin: 10\r\n       }\r\n  });\r\n  \r\n\r\nexport default ClassroomJoin;","import React, {useState} from 'react';\r\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\r\nimport firebase from 'firebase';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\n\r\nconst AssignTypeSelect = props =>{\r\n    const [academic_open, set_academic_open]= useState(true);\r\n    const [personal_open, set_personal_open]= useState(false);\r\n    const science=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n                        'focus':{\r\n                            'prompt':'What are my questions? Which question is most relevant?',\r\n                            'answer':''\r\n                        },\r\n                        'gather':{\r\n                            'prompt':'How will I gather information? What is my hypothesis?',\r\n                            'answer':''\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':  'How will I design an experiment? How is this similar to previous experiments?',\r\n                            'answer':''\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt':'What is the best choice?',\r\n                            'answer':''\r\n                        },\r\n                        'plan':{\r\n                            'prompt':'What do I do first, second ..? Is this working?',\r\n                            'answer':''\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':'What did I learn? How do I know?',\r\n                            'answer':''\r\n                        }});\r\n        props.setScreen(15);\r\n    }\r\n    const math=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n                        'focus':{\r\n                            'prompt':'What is the problem asking me to solve?',\r\n                            'answer':''\r\n                        },\r\n                        'gather':{\r\n                            'prompt':'How do I know? What do I need to know?',\r\n                            'answer':''\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':   'What are the ways I can solve this problem?',\r\n                            'answer':''\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt': 'What is the best way to solve this problem?',\r\n                            'answer':''\r\n                        },\r\n                        'plan':{\r\n                            'prompt':  'Can I make a model?',\r\n                            'answer':''\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':'Did it work? How do I know?',\r\n                            'answer':''\r\n                        }});\r\n        props.setScreen(15);\r\n    }\r\n    const reading=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':\"Do I understand what I'm reading? Does what I'm reading make sense?\",\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt':'What do I understand? What do I need to understand?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':   'What strategies could help me understand?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':  'Which is the best choice? Why?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What should I try first? Second?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Is this working? Do I understand now?',\r\n            'answer':''\r\n        }});\r\n  \r\n        props.setScreen(15);\r\n    }\r\n\r\n    const writing=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'How do I select a topic/focus? What questions do I have about any topic/focus? What are my best questions?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'How will I gather information on some or all of my questions?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':    'How could I organize and present my information?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'What is the best choice? Why?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What do I do first, second ..? Is this working?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'What was surprising about my research? What did I do well and how can I improve?',\r\n            'answer':''\r\n        }});\r\n\r\n        props.setScreen(15);\r\n    }\r\n\r\n    const social=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'What happened?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'Who? What? Where? When? Why? How?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':    'What am I willing to do? What have a I tried? What might work?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'What are the pros and cons? What is the best choice? ',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What are my next steps? How can I do it?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again to solve this?',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(15);\r\n    }\r\n\r\n    const emotional=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'What am I feeling? How do I/they feel? What is she/he feeling?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'What is causing this feeling?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':     'What strategies can I use to make myself feel better?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'Has this helped me in the past? How did it help? How did it help? How did I feel after?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again? ',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(1);\r\n    }\r\n    const academicAndSocial=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'What is the problem? What is the question? What is the task?',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': 'What do I know? What do I need to know? What is similar and what is different?',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':     'How can I solve this problem? What are possible solutions? What can I do?',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   'What is the best way to solve this problem? Does this make sense?',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again?',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(1);\r\n    }\r\n    const custom=()=>{\r\n        props.setRid(Math.random().toString().substring(2));\r\n        props.setQInfo({'name':'',\r\n        'focus':{\r\n            'prompt':'',\r\n            'answer':''\r\n        },\r\n        'gather':{\r\n            'prompt': '',\r\n            'answer':''\r\n        },\r\n        'brainstorm':{\r\n            'prompt':     '',\r\n            'answer':''\r\n        },\r\n        'evaluate':{\r\n            'prompt':   '',\r\n            'answer':''\r\n        },\r\n        'plan':{\r\n            'prompt':  '',\r\n            'answer':''\r\n        },\r\n        'reflect':{\r\n            'prompt': '',\r\n            'answer':''\r\n        }});\r\n        props.setScreen(19);\r\n    }\r\n\r\n    var academic = \r\n    <React.Fragment>\r\n    <View style={styles.row}>\r\n    <TouchableOpacity onPress={science}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_science.png')}\r\n    resizeMode={\"stretch\"}\r\n    /></TouchableOpacity>\r\n    <TouchableOpacity onPress={math}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_math.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n</View>\r\n<View style={styles.row}>\r\n    <TouchableOpacity onPress={reading}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_reading.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n    <TouchableOpacity onPress={writing}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_writing.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n</View></React.Fragment>;\r\n     var personal = \r\n    <React.Fragment>\r\n    <View style={styles.row}>\r\n    <View style={styles.extraSpacing}>\r\n    <TouchableOpacity onPress={social}>\r\n    <Image style={styles.image}\r\n    source={require('../assets/selfq_social.png')}\r\n    resizeMode={\"stretch\"}/>\r\n    </TouchableOpacity>\r\n    </View>\r\n   \r\n</View></React.Fragment>;\r\n\r\n    return   (\r\n\r\n        <ScrollView>\r\n            <View style={styles.row}>\r\n             \r\n                        <TouchableOpacity onPress={academicAndSocial}>\r\n                            <Image style={styles.image}\r\n                            source={require('../assets/academic_social.png')}\r\n                            resizeMode={\"stretch\"}/>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={emotional}>\r\n                        <Image style={styles.image}\r\n                        source={require('../assets/selfq_emotional.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                        </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.row}>\r\n                <View style={styles.extraSpacing}>\r\n                    <TouchableOpacity onPress={custom}>\r\n                        <Image style={styles.image}\r\n                        source={require('../assets/selfq_custom.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n             \r\n            </View>\r\n            <View style={styles.row}>\r\n                <TouchableOpacity style={styles.dropdown} onPress= {set_academic_open.bind(this,!academic_open)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(academic_open?'v':'>') +'  Academic'}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {academic_open && academic}\r\n\r\n            <View style={styles.row}>\r\n                <TouchableOpacity style={styles.dropdown} onPress= {set_personal_open.bind(this,!personal_open)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(personal_open?'v':'>') +'  Personal'}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {personal_open && personal}\r\n\r\n        </ScrollView>\r\n    \r\n    );\r\n}\r\n\r\n/*\r\n\r\n*/\r\nconst {width} = Dimensions.get(\"screen\");\r\nconst image_width =Math.min( width * 0.45,250);\r\nconst styles = StyleSheet.create({\r\n    image:{\r\n        height:image_width,\r\n        width:image_width,\r\n        margin:15\r\n    },\r\n    dropdown:{\r\n        width:2*image_width +30\r\n    },\r\n    row:{\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n    },\r\n    listItem:{ \r\n        padding:10,\r\n        marginVertical:10,\r\n        backgroundColor: '#ccc',\r\n        borderColor:'black',\r\n        borderWidth:1\r\n      },\r\n      extraSpacing:{\r\n          marginRight:image_width+15\r\n        }\r\n  });\r\n  \r\n\r\nexport default AssignTypeSelect;","import React, {useState} from 'react';\r\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity, AsyncStorage} from 'react-native';\r\n\r\nimport GoalInput from '../components/GoalInput';\r\nimport CustomGoalInput from '../components/CustomGoalInput';\r\nimport firebase from 'firebase'\r\n\r\nconst AssignSet = props =>{\r\n    const db = firebase.database();\r\n    const [useCustom, setUseCustom]= useState(true);\r\n\r\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\r\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\r\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\r\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\r\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\r\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\r\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\r\n\r\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\r\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\r\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\r\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\r\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\r\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\r\n    const addGoalHandler = goalTitle=>{\r\n        const rid =props.rid;\r\n        props.setLink(\"http://localhost:19006/link?assignment=\"+props.rid+\"&class=\"+props.className.replaceAll(\" \", \"%20\"));\r\n        var rid_contained=false;\r\n        var l =[];\r\n        var assignments=[];\r\n        if(props.classDetails['assignments']!=null && props.classDetails['assignments']['set-list']!=null){\r\n            assignments=props.classDetails['assignments']['set-list'];\r\n        }\r\n        console.log(props.classDetails);\r\n        console.log(assignments);\r\n        assignments.forEach(element=>{\r\n            if(element['id']!=rid){\r\n                l.push(element);\r\n            }\r\n        });\r\n        db.ref('/classes/'+props.className+'/assignments/set-list').set([...l, {id: rid, value: goalTitle}]);\r\n        const details = {'name': goalTitle,\r\n                        'focus':{\r\n                            'prompt':focusP,\r\n                            'answer':focus\r\n                        },\r\n                        'gather':{\r\n                            'prompt':gatherP,\r\n                            'answer':gather\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':brainstormP,\r\n                            'answer':brainstorm\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt':evaluateP,\r\n                            'answer':evaluate\r\n                        },\r\n                        'plan':{\r\n                            'prompt':planP,\r\n                            'answer':plan\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':reflectP,\r\n                            'answer':reflect\r\n                        }};\r\n        //console.log(details);\r\n        db.ref('/classes/'+props.className+'/assignments/details/'+rid).set(details);\r\n\r\n        db.ref('/classes/'+props.className).on(\"value\", function(snapshot) {\r\n            const data=snapshot.val();\r\n            props.setClassDetails(data);\r\n\r\n            var toPage=12;\r\n            if(focusP!=props.qInfo['focus']['prompt']||gatherP!=props.qInfo['gather']['prompt']||brainstormP!=props.qInfo['brainstorm']['prompt']||\r\n                evaluateP!=props.qInfo['evaluate']['prompt']||planP!=props.qInfo['plan']['prompt']||reflectP!=props.qInfo['reflect']['prompt']  ){\r\n                    props.setQInfo(details);\r\n                    toPage=6;\r\n                }\r\n            //console.log(details);\r\n            props.setScreen(toPage);\r\n            \r\n          }, function (errorObject) {\r\n            setError(\"The read failed: \" + errorObject.code+' Please try again.');\r\n          });\r\n\r\n       \r\n      };\r\n\r\n    \r\n\r\n      const regInput=<React.Fragment>\r\n      <GoalInput input = {focus} setInput={setFocus} text={props.qInfo['focus']['prompt']}color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }useCustom={setUseCustom}/>\r\n      <GoalInput input = {gather} setInput={setGather} text={props.qInfo['gather']['prompt']} color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}useCustom={setUseCustom}/>\r\n      <GoalInput input = {brainstorm} setInput={setBrainstorm} text={props.qInfo['brainstorm']['prompt']} color ='orange' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}useCustom={setUseCustom}/>\r\n      <GoalInput input = {evaluate} setInput={setEvaluate} color ='green' text={props.qInfo['evaluate']['prompt']} header='Evaluate' question = {props.qInfo['evaluate']['prompt']}useCustom={setUseCustom}/>\r\n      <GoalInput input = {plan} setInput={setPlan} color ='#ffdb58' text={props.qInfo['plan']['prompt']} header='Plan and Act' question = {props.qInfo['plan']['prompt']}useCustom={setUseCustom}/>\r\n      <GoalInput input = {reflect} setInput={setReflect} text={props.qInfo['reflect']['prompt']}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}useCustom={setUseCustom}/></React.Fragment>;\r\n  \r\n  const custInput=<React.Fragment>\r\n  <CustomGoalInput color='#00FFFF' input = {focus} setInput={setFocus}  header='Select A Focus' prompt={focusP} setPrompt={setFocusP}/>\r\n  <CustomGoalInput color ='#AF69EF' input = {gather} setInput={setGather}  header='Gather Information' prompt={gatherP} setPrompt={setGatherP}/>\r\n  <CustomGoalInput color ='yellow' input = {brainstorm} setInput={setBrainstorm}  header='Brainstorm' prompt={brainstormP} setPrompt={setBrainstormP}/>\r\n  <CustomGoalInput color ='green' input = {evaluate} setInput={setEvaluate}  header='Evaluate' prompt={evaluateP} setPrompt={setEvaluateP}/>\r\n  <CustomGoalInput color ='ffdb58' input = {plan} setInput={setPlan}  header='Plan and Act' prompt={planP} setPrompt={setPlanP}/>\r\n  <CustomGoalInput color ='purple' input = {reflect} setInput={setReflect}  header='Reflect' prompt={reflectP} setPrompt={setReflectP}/>\r\n  </React.Fragment>;\r\n    var input=useCustom? custInput:regInput;\r\n\r\n    return(\r\n        <ScrollView>\r\n                \r\n            <View style={{\r\n                padding:30,\r\n                flex:1,\r\n                flexDirection :'column',\r\n                alignItems: 'center'\r\n            }}>\r\n                \r\n                <Text style={{fontWeight:'bold'}} >Ask the class a question</Text>\r\n                <TextInput value = {userInput} placeholder = 'Question' style={{\r\n            width: '80%', \r\n            borderColor:'black', \r\n            borderWidth:1, \r\n            padding:10,\r\n            marginBottom: 10\r\n        }} onChangeText ={text=>setUserInput(text)}/>\r\n                {input}\r\n                <Button style={{width:'20%'}} title='ASSIGN' onPress = {addGoalHandler.bind(this, userInput)}/>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default AssignSet;","import React, {useState} from 'react';\r\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\r\n\r\nimport GoalInput from '../components/GoalInput';\r\nimport CustomGoalInput from '../components/CustomGoalInput';\r\nimport firebase from 'firebase'\r\n\r\nconst AddSetClass = props =>{\r\n    const db = firebase.database();\r\n    // console.log('here sir');\r\n    // console.log(props.qInfo);\r\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\r\n\r\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\r\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\r\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\r\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\r\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\r\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\r\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\r\n\r\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\r\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\r\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\r\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\r\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\r\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\r\n    const addGoalHandler = goalTitle=>{\r\n        const rid =props.rid;\r\n        // var l =[]\r\n        // props.qList.forEach(element=>{\r\n        //     if(element['id']!=rid){\r\n        //         l.push(element);\r\n        //     }\r\n        // });\r\n        // props.setQList([...l, {id: rid, value: goalTitle}]);\r\n        const details = {'name': goalTitle,\r\n                        'focus':{\r\n                            'prompt':focusP,\r\n                            'answer':focus\r\n                        },\r\n                        'gather':{\r\n                            'prompt':gatherP,\r\n                            'answer':gather\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':brainstormP,\r\n                            'answer':brainstorm\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt':evaluateP,\r\n                            'answer':evaluate\r\n                        },\r\n                        'plan':{\r\n                            'prompt':planP,\r\n                            'answer':plan\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':reflectP,\r\n                            'answer':reflect\r\n                        }};\r\n        //console.log(details);\r\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+firebase.auth().currentUser.uid).set(details);\r\n\r\n        var classDetails = props.classDetails;\r\n        db.ref('classes/'+props.className).on(\"value\", function(snapshot) {\r\n            const data=snapshot.val();\r\n            console.log(data);\r\n            props.setClassDetails(data);\r\n            props.setScreen(12);\r\n            \r\n          }, function (errorObject) {\r\n            setError(\"The read failed: \" + errorObject.code+' Please try again.');\r\n          });\r\n\r\n      \r\n      };\r\n\r\n      const handleSwipeButton=()=>{\r\n        const details = {'name': userInput,\r\n        'focus':{\r\n            'prompt':focusP,\r\n            'answer':focus\r\n        },\r\n        'gather':{\r\n            'prompt':gatherP,\r\n            'answer':gather\r\n        },\r\n        'brainstorm':{\r\n            'prompt':brainstormP,\r\n            'answer':brainstorm\r\n        },\r\n        'evaluate':{\r\n            'prompt':evaluateP,\r\n            'answer':evaluate\r\n        },\r\n        'plan':{\r\n            'prompt':planP,\r\n            'answer':plan\r\n        },\r\n        'reflect':{\r\n            'prompt':reflectP,\r\n            'answer':reflect\r\n        }};\r\n        props.setQInfo(details);\r\n          props.setScreen(17);\r\n      }\r\n\r\n    const regInput=<React.Fragment>\r\n    <GoalInput input = {focus} setInput={setFocus} text={props.qInfo['focus']['prompt']}color ='red' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }useCustom={setUseCustom}/>\r\n    <GoalInput input = {gather} setInput={setGather} text={props.qInfo['gather']['prompt']} color ='orange' header='Gather Information' question = {props.qInfo['gather']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {brainstorm} setInput={setBrainstorm} text={props.qInfo['brainstorm']['prompt']} color ='yellow' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {evaluate} setInput={setEvaluate} color ='green' text={props.qInfo['evaluate']['prompt']} header='Evaluate' question = {props.qInfo['evaluate']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {plan} setInput={setPlan} color ='blue' text={props.qInfo['plan']['prompt']} header='Plan and Act' question = {props.qInfo['plan']['prompt']}useCustom={setUseCustom}/>\r\n    <GoalInput input = {reflect} setInput={setReflect} text={props.qInfo['reflect']['prompt']}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}useCustom={setUseCustom}/></React.Fragment>;\r\n\r\nconst custInput=<React.Fragment>\r\n<CustomGoalInput color='red' input = {focus} setInput={setFocus}  header='Select A Focus' prompt={focusP} setPrompt={setFocusP}/>\r\n<CustomGoalInput color ='orange' input = {gather} setInput={setGather}  header='Gather Information' prompt={gatherP} setPrompt={setGatherP}/>\r\n<CustomGoalInput color ='yellow' input = {brainstorm} setInput={setBrainstorm}  header='Brainstorm' prompt={brainstormP} setPrompt={setBrainstormP}/>\r\n<CustomGoalInput color ='green' input = {evaluate} setInput={setEvaluate}  header='Evaluate' prompt={evaluateP} setPrompt={setEvaluateP}/>\r\n<CustomGoalInput color ='blue' input = {plan} setInput={setPlan}  header='Plan and Act' prompt={planP} setPrompt={setPlanP}/>\r\n<CustomGoalInput color ='purple' input = {reflect} setInput={setReflect}  header='Reflect' prompt={reflectP} setPrompt={setReflectP}/>\r\n</React.Fragment>;\r\n    var input=useCustom? custInput:regInput;\r\n\r\n    return(\r\n        <ScrollView>\r\n            <View style={{width:'90%', flexDirection:'row-reverse'}}>\r\n                <TouchableOpacity onPress={handleSwipeButton}>\r\n                    <Image style={{height:50,width:50, margin:16}}\r\n                        source={require('../assets/swipe_btn.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n                \r\n            <View style={{\r\n                padding:30,\r\n                flex:1,\r\n                flexDirection :'column',\r\n                alignItems: 'center'\r\n            }}>\r\n                \r\n                <Text style={{fontWeight:'bold'}} >Name this Question Set</Text>\r\n                <TextInput value = {userInput} placeholder = 'Name' style={{\r\n            width: '80%', \r\n            borderColor:'black', \r\n            borderWidth:1, \r\n            padding:10,\r\n            marginBottom: 10\r\n        }} onChangeText ={text=>setUserInput(text)}/>\r\n                {input}\r\n                <Button style={{width:'20%'}} title='DONE' onPress = {addGoalHandler.bind(this, userInput)}/>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30,\r\n        alignItems:'center'\r\n      },\r\n      button:{\r\n        width:'20%' \r\n      },\r\n      input:{\r\n        width: '80%', \r\n        borderColor:'black', \r\n        borderWidth:1, \r\n        padding:10,\r\n        marginBottom: 10\r\n      }\r\n});\r\n\r\nexport default AddSetClass;","import React, {useState} from 'react';\r\nimport {Image,View, Platform,Dimensions, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\r\n\r\nimport GoalInput from '../components/GoalInput';\r\nimport CustomGoalInput from '../components/CustomGoalInput';\r\nimport firebase from 'firebase'\r\n\r\nconst SwipeAddSetClass = props =>{\r\n    const db = firebase.database();\r\n    const [currQ, setCurrQ]= useState(0);\r\n    const [useCustom, setUseCustom]= useState(false);\r\n\r\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\r\n    console.log(userInput);\r\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\r\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\r\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\r\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\r\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\r\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\r\n\r\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\r\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\r\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\r\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\r\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\r\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\r\n    const addGoalHandler = goalTitle=>{\r\n        const rid =props.rid;\r\n        // var l =[]\r\n        // props.qList.forEach(element=>{\r\n        //     if(element['id']!=rid){\r\n        //         l.push(element);\r\n        //     }\r\n        // });\r\n        // props.setQList([...l, {id: rid, value: goalTitle}]);\r\n        const details = {'name': userInput,\r\n                        'focus':{\r\n                            'prompt':focusP,\r\n                            'answer':focus\r\n                        },\r\n                        'gather':{\r\n                            'prompt':gatherP,\r\n                            'answer':gather\r\n                        },\r\n                        'brainstorm':{\r\n                            'prompt':brainstormP,\r\n                            'answer':brainstorm\r\n                        },\r\n                        'evaluate':{\r\n                            'prompt':evaluateP,\r\n                            'answer':evaluate\r\n                        },\r\n                        'plan':{\r\n                            'prompt':planP,\r\n                            'answer':plan\r\n                        },\r\n                        'reflect':{\r\n                            'prompt':reflectP,\r\n                            'answer':reflect\r\n                        }};\r\n        console.log(details);\r\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+firebase.auth().currentUser.uid).set(details);\r\n        var classDetails = props.classDetails;\r\n        classDetails['responses'][rid][firebase.auth().currentUser.uid]=details;\r\n        console.log(classDetails);\r\n        props.setClassDetails(classDetails);\r\n        props.setScreen(12);\r\n      };\r\n      const handleSwipeButton=()=>{\r\n        const details = {'name': userInput,\r\n        'focus':{\r\n            'prompt':focusP,\r\n            'answer':focus\r\n        },\r\n        'gather':{\r\n            'prompt':gatherP,\r\n            'answer':gather\r\n        },\r\n        'brainstorm':{\r\n            'prompt':brainstormP,\r\n            'answer':brainstorm\r\n        },\r\n        'evaluate':{\r\n            'prompt':evaluateP,\r\n            'answer':evaluate\r\n        },\r\n        'plan':{\r\n            'prompt':planP,\r\n            'answer':plan\r\n        },\r\n        'reflect':{\r\n            'prompt':reflectP,\r\n            'answer':reflect\r\n        }};\r\n        props.setQInfo(details);\r\n        props.setScreen(16);\r\n    }\r\n\r\n    const namePage=<React.Fragment>\r\n      <View style={{flex:1}}>\r\n      <View style={{width:'90%', flexDirection:'row-reverse'}}>\r\n                <TouchableOpacity onPress={handleSwipeButton}>\r\n                    <Image style={{height:50,width:50, margin:16}}\r\n                        source={require('../assets/row_btn.png')}\r\n                        resizeMode={\"stretch\"}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n          <View style={{\r\n                  flex:1,\r\n                  flexDirection :'column',\r\n                  alignItems: 'center',\r\n                  padding:20\r\n              }}>\r\n                  <TextInput value={userInput} onChangeText={setUserInput} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Name this question set'></TextInput>\r\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                          <Button onPress={(userInput)=>addGoalHandler(userInput)} title={' DONE '}/>\r\n                          \r\n                  </View>\r\n                  <View style={{height:'70%',flexDirection:'column-reverse'}}>\r\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                                <Image \r\n                                source={require('../assets/left_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                                <Image \r\n                                source={require('../assets/right_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            \r\n                    </View>\r\n                    </View>\r\n          </View>\r\n      </View>\r\n  </React.Fragment>;\r\n\r\n    const focusPage=<React.Fragment>\r\n        <View style={{flex:1}}>\r\n            <View style={{\r\n                    flex:1,\r\n                    flexDirection :'column',\r\n                    alignItems: 'center',\r\n                    backgroundColor:'#00FFFF',\r\n                    padding:20\r\n                }}>\r\n                    <TextInput value={focusP} onChangeText={setFocusP} style={{backgroundColor:'#FFFFFF',width: '100%', borderColor:'#000000', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a focus question'></TextInput>\r\n                    <TextInput value={focus} onChangeText={setFocus} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the focus question'></TextInput>\r\n                    <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                                <Image \r\n                                source={require('../assets/left_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                                <Image \r\n                                source={require('../assets/right_arrow.png')}\r\n                                style={{height:'100%',width:'100%'}}\r\n                                resizeMode={\"stretch\"}/>\r\n                            </TouchableOpacity>\r\n                            \r\n                    </View>\r\n            </View>\r\n        </View>\r\n    </React.Fragment>;\r\n\r\nconst gatherPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'#AF69EF',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={gatherP} onChangeText={setGatherP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a gathering information question'></TextInput>\r\n            <TextInput value={gather} onChangeText={setGather} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the gathering information question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst brainstormPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'yellow',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={brainstormP} onChangeText={setBrainstormP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a brainstorming question'></TextInput>\r\n            <TextInput value={brainstorm} onChangeText={setBrainstorm} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the brainstorming question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst evaluatePage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'green',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={evaluateP} onChangeText={setEvaluateP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask an evaluation question'></TextInput>\r\n            <TextInput value={evaluate} onChangeText={setEvaluate} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the evaluation question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst planPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'#ffdb58',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={planP} onChangeText={setPlanP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a plan and action question'></TextInput>\r\n            <TextInput value={plan} onChangeText={setPlan} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the plan and action question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\nconst reflectPage=<React.Fragment>\r\n<View style={{flex:1}}>\r\n    <View style={{\r\n            flex:1,\r\n            flexDirection :'column',\r\n            alignItems: 'center',\r\n            backgroundColor:'purple',\r\n            padding:20\r\n        }}>\r\n            <TextInput value={reflectP} onChangeText={setReflectP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a reflection question'></TextInput>\r\n            <TextInput value={reflect} onChangeText={setReflect} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the reflection question'></TextInput>\r\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\r\n                        <Image \r\n                        source={require('../assets/left_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\r\n                        <Image \r\n                        source={require('../assets/right_arrow.png')}\r\n                        style={{height:'100%',width:'100%'}}\r\n                        resizeMode={\"stretch\"}/>\r\n                    </TouchableOpacity>\r\n                    \r\n            </View>\r\n    </View>\r\n</View>\r\n</React.Fragment>;\r\n\r\n\r\n\r\n    return(\r\n        <View style={{flex:1}}>\r\n            {currQ==0&&namePage}\r\n            {currQ==1&&focusPage}\r\n            {currQ==2&&gatherPage}\r\n            {currQ==3&&brainstormPage}\r\n            {currQ==4&&evaluatePage}\r\n            {currQ==5&&planPage}\r\n            {currQ==6&&reflectPage}\r\n        </View>\r\n    );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30,\r\n        alignItems:'center'\r\n      },\r\n      button:{\r\n        width:'20%' \r\n      },\r\n      input:{\r\n        width: '80%', \r\n        borderColor:'black', \r\n        borderWidth:1, \r\n        padding:10,\r\n        marginBottom: 10\r\n      }\r\n});\r\n\r\nexport default SwipeAddSetClass;","import React, {useState} from 'react';\r\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\r\nimport firebase, { auth } from 'firebase';\r\nimport GoalItem from '../components/GoalItem';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\n\r\nconst GradingStudList = props =>{\r\n    const [toDoOpen, setToDoOpen]= useState(true);\r\n    const [completeOpen, setCompleteOpen]= useState(false);\r\n    console.log(\"http://localhost:19006/link?assignment=\"+props.rid+\"&class=\"+props.className.replaceAll(\" \", \"%20\"));\r\n    \r\n    const handleStudClick=(id)=>{\r\n        // console.log('handleStudClick');\r\n        // console.log(props.classDetails);\r\n        // console.log(props.rid);\r\n       \r\n        var qInfo = props.classDetails['assignments']['details'][props.rid];\r\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][props.rid]!=null&&props.classDetails['responses'][props.rid][id]!=null){\r\n            qInfo = props.classDetails['responses'][props.rid][id];\r\n            \r\n        }\r\n\r\n        var fInfo={'grade': '',\r\n        'gFeedback':'',\r\n        'focus':'',\r\n        'gather':'',\r\n        'brainstorm':'',\r\n        'evaluate':'',\r\n        'plan':'',\r\n        'reflect':''};\r\n\r\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][props.rid]!=null&&props.classDetails['responses'][props.rid][id]!=null &&props.classDetails['responses'][props.rid][id]['feedback']!=null){\r\n            fInfo = props.classDetails['responses'][props.rid][id]['feedback'];\r\n            \r\n        }\r\n\r\n        props.setStudent(id);\r\n        props.setQInfo(qInfo);\r\n        props.setFInfo(fInfo);\r\n        props.setScreen(20);\r\n    };\r\n\r\n\r\n    var data = props.classDetails['names']!=null?props.classDetails['names']:[];\r\n\r\n    var to_grade=[];\r\n    var graded=[];\r\n    data.forEach(element => {\r\n        console.log(element);\r\n        if(props.classDetails['responses'][props.rid]==null||props.classDetails['responses'][props.rid][element['id']]==null||props.classDetails['responses'][props.rid][element['id']]['feedback']==null){\r\n           \r\n            to_grade.push(element);\r\n        }\r\n        else{\r\n            console.log(element['value']);\r\n            const el ={'id':element['id'],'value': element['value']+\" - \"+props.classDetails['responses'][props.rid][element['id']]['feedback']['grade']};\r\n            graded.push(el);\r\n        }\r\n    });\r\n\r\n    return   (\r\n    <View style={{padding:20}}>\r\n        <View style={{flexDirection:'row'}}>\r\n            <Text style={{color:'grey'}}>{\"Link to Share: \"}</Text>\r\n            <TextInput style={{flex:1}}value={\"http://localhost:19006/link?assignment=\"+props.rid+\"&class=\"+props.className.replaceAll(\" \", \"%20\")}/>\r\n        </View> \r\n         <View style={styles.row}>\r\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setToDoOpen(!toDoOpen)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(toDoOpen?'v':'>') +'  To-Grade  '}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        {\r\n             toDoOpen&&<View>\r\n                 <FlatList style={{flex:1}}data = {to_grade}\r\n             keyExtractor={(item, index)=> item.id}\r\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleStudClick(id)}title ={itemData.item.value}/>}/>\r\n             {to_grade.length==0&&<Text style={{fontStyle:'italic'}}>All done.</Text>}\r\n             </View>\r\n\r\n            }\r\n\r\n            <View style={styles.row}>\r\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setCompleteOpen(!completeOpen)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(completeOpen?'v':'>') +'  Graded  '}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {\r\n             completeOpen&&<FlatList style={{flex:1}}data = {graded}\r\n             keyExtractor={(item, index)=> item.id}\r\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleStudClick(id)}title ={itemData.item.value}/>}/>\r\n\r\n            }\r\n\r\n        \r\n           \r\n\r\n    </View>\r\n    );\r\n}\r\n\r\nconst {width} = Dimensions.get(\"screen\");\r\nconst image_width =Math.min( width * 0.45,250);\r\nconst styles = StyleSheet.create({\r\n    \r\n    row:{\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n    },\r\n    listItem:{ \r\n        padding:10,\r\n        marginVertical:10,\r\n        backgroundColor: '#add8e6',\r\n        borderColor:'black',\r\n        borderWidth:1\r\n      },\r\n      extraSpacing:{\r\n          marginRight:image_width+15\r\n        },\r\n    header:{\r\n            color: '#05375a',\r\n            fontSize: 30,\r\n            fontWeight: 'bold'\r\n    }\r\n  });\r\n  \r\n\r\nexport default GradingStudList;","import React, {useState} from 'react';\r\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\r\n\r\nimport GoalItem from '../components/GoalItem';\r\nimport firebase from 'firebase';\r\n//import Card from '../components/Card'\r\n\r\n//var once = 0;\r\nconst ClassSelectCustom = props =>{\r\n    const [nameList, setNameList]=useState([]);\r\n    const db = firebase.database();\r\n    //if (firebase.auth().currentUser.uid!=once){\r\n      db.ref(firebase.auth().currentUser.uid+'/custom-prompts').once(\"value\", function(snapshot) {\r\n\r\n        //console.log(snapshot.val())\r\n        if(snapshot.val()!=null){\r\n          var l =[];\r\n            for (var n in snapshot.val()){\r\n               l.push({'id':n,'value':n});\r\n           }\r\n          setNameList(l);\r\n        }\r\n      }, function (errorObject) {\r\n        console.log(\"The read failed: \" + errorObject.code);\r\n      });\r\n     // once=firebase.auth().currentUser.uid;\r\n  // }\r\n\r\n\r\n    const removeGoalHandler = goalId=>{\r\n        // props.setQList(currentGoals=>{\r\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\r\n        // });\r\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+goalId).once(\"value\", function(snapshot) {\r\n          const data=snapshot.val();\r\n          //console.log(goalId)\r\n          props.setQInfo(data);\r\n          props.setScreen(15);\r\n        }, function (errorObject) {\r\n          console.log(\"The read failed: \" + errorObject.code);\r\n        });\r\n      }; \r\n    return   (\r\n    <View style={styles.screen}>\r\n      <Button title  = 'New Custom Set' onPress={()=>props.setScreen(15)}/>\r\n      <FlatList data = {nameList}\r\n      keyExtractor={(item, index)=> item.id}\r\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30\r\n      }\r\n});\r\n\r\nexport default ClassSelectCustom;","import React, {useState} from 'react';\r\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\r\n\r\nimport GoalInput from '../components/GoalInput';\r\nimport CustomGoalInput from '../components/CustomGoalInput';\r\nimport firebase from 'firebase'\r\nimport FeedbackGoalInput from '../components/FeedbackGoalInput';\r\n\r\nconst LeaveFeedback = props =>{\r\n    const db = firebase.database();\r\n    // console.log('here sir');\r\n    // console.log(props.qInfo);\r\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\r\n\r\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\r\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\r\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\r\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\r\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\r\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\r\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\r\n\r\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\r\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\r\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\r\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\r\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\r\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\r\n\r\n    const [focusR, setFocusR]= useState(props.fInfo['focus']);\r\n    const [gatherR, setGatherR]= useState(props.fInfo['gather']);\r\n    const [brainstormR, setBrainstormR]= useState(props.fInfo['brainstorm']);\r\n    const [evaluateR, setEvaluateR]= useState(props.fInfo['evaluate']);\r\n    const [planR, setPlanR]= useState(props.fInfo['plan']);\r\n    const [reflectR, setReflectR]= useState(props.fInfo['reflect']);\r\n    const [gFeedback, setGFeedback]=useState(props.fInfo['gFeedback']);\r\n    const [grade, setGrade]=useState(props.fInfo['grade']);\r\n    const handleDone = ()=>{\r\n        const rid =props.rid;\r\n        // var l =[]\r\n        // props.qList.forEach(element=>{\r\n        //     if(element['id']!=rid){\r\n        //         l.push(element);\r\n        //     }\r\n        // });\r\n        // props.setQList([...l, {id: rid, value: goalTitle}]);\r\n        const details = {'grade': grade,\r\n                        'gFeedback':gFeedback,\r\n                        'focus':focusR,\r\n                        'gather':gatherR,\r\n                        'brainstorm':brainstormR,\r\n                        'evaluate':evaluateR,\r\n                        'plan':planR,\r\n                        'reflect':reflectR};\r\n        //console.log(details);\r\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+props.student).set(props.qInfo);\r\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+props.student+'/feedback').set(details);\r\n        var classDetails = props.classDetails;\r\n        console.log(rid);\r\n        console.log(classDetails);\r\n        classDetails['responses'][rid][props.student]=props.qInfo;\r\n        classDetails['responses'][rid][props.student]['feedback']=details;\r\n        //console.log(classDetails);\r\n        props.setClassDetails(classDetails);\r\n        props.setScreen(18);\r\n      };\r\n\r\n    const responses=<React.Fragment>\r\n    <FeedbackGoalInput comment={focusR}input = {focus} setInput={setFocusR} color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }/>\r\n    <FeedbackGoalInput comment={gatherR}input = {gather} setInput={setGatherR}  color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}/>\r\n    <FeedbackGoalInput comment={brainstormR}input = {brainstorm} setInput={setBrainstormR} color ='yellow' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}/>\r\n    <FeedbackGoalInput comment={evaluateR}input = {evaluate} setInput={setEvaluateR} color ='green'header='Evaluate' question = {props.qInfo['evaluate']['prompt']}/>\r\n    <FeedbackGoalInput comment={planR}input = {plan} setInput={setPlanR} color ='#ffdb58'  header='Plan and Act' question = {props.qInfo['plan']['prompt']}/>\r\n    <FeedbackGoalInput comment={reflectR} input = {reflect} setInput={setReflectR}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}/></React.Fragment>;\r\n\r\n\r\n\r\n    return(\r\n        <ScrollView>\r\n                \r\n            <View style={{\r\n                padding:30,\r\n                flex:1,\r\n                flexDirection :'column',\r\n                alignItems: 'center'\r\n            }}>\r\n                \r\n                <Text style={{fontWeight:'bold'}} >Leave Feedback</Text>\r\n                <Text style={{\r\n            width: '80%', \r\n            borderColor:'black', \r\n            borderWidth:1, \r\n            padding:10,\r\n            marginBottom: 10\r\n        }} > {userInput}</Text>\r\n                {responses}\r\n                <TextInput value={gFeedback}style={styles.input} placeholder='General Feedback' onChangeText={text=>setGFeedback(text)}/>\r\n                <TextInput value={grade}  style={{\r\n        width: '10%', \r\n        borderColor:'black', \r\n        borderWidth:1, \r\n        padding:10,\r\n        marginBottom: 10\r\n      }} placeholder='Grade' onChangeText={text=>setGrade(text)}/>\r\n                <Button style={{width:'20%'}} title='DONE' onPress = {handleDone}/>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30,\r\n        alignItems:'center'\r\n      },\r\n      button:{\r\n        width:'20%' \r\n      },\r\n      input:{\r\n        width: '80%', \r\n        borderColor:'black', \r\n        borderWidth:1, \r\n        padding:10,\r\n        marginBottom: 10\r\n      }\r\n});\r\n\r\nexport default LeaveFeedback;","import React, {useState} from 'react';\r\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\r\n\r\nimport GoalItem from '../components/GoalItem';\r\nimport firebase from 'firebase';\r\n//import Card from '../components/Card'\r\n\r\n//var once = 0;\r\nconst AssignCustom = props =>{\r\n    const [nameList, setNameList]=useState([]);\r\n    const db = firebase.database();\r\n    //if (firebase.auth().currentUser.uid!=once){\r\n      db.ref(firebase.auth().currentUser.uid+'/custom-prompts').once(\"value\", function(snapshot) {\r\n\r\n        //console.log(snapshot.val())\r\n        if(snapshot.val()!=null){\r\n          var l =[];\r\n            for (var n in snapshot.val()){\r\n               l.push({'id':n,'value':n});\r\n           }\r\n          setNameList(l);\r\n        }\r\n      }, function (errorObject) {\r\n        console.log(\"The read failed: \" + errorObject.code);\r\n      });\r\n     // once=firebase.auth().currentUser.uid;\r\n  // }\r\n\r\n\r\n    const removeGoalHandler = goalId=>{\r\n        // props.setQList(currentGoals=>{\r\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\r\n        // });\r\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+goalId).once(\"value\", function(snapshot) {\r\n          const data=snapshot.val();\r\n          console.log(goalId)\r\n          props.setQInfo(data);\r\n          props.setScreen(15);\r\n        }, function (errorObject) {\r\n          console.log(\"The read failed: \" + errorObject.code);\r\n        });\r\n      }; \r\n    return   (\r\n    <View style={styles.screen}>\r\n      <Button title  = 'New Custom Set' onPress={()=>props.setScreen(15)}/>\r\n      <FlatList data = {nameList}\r\n      keyExtractor={(item, index)=> item.id}\r\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30\r\n      }\r\n});\r\n\r\nexport default AssignCustom;","import React from 'react';\r\nimport {View, Text, StyleSheet} from 'react-native';\r\n\r\nconst Blank = props =>{\r\n    return   (\r\n    <View>\r\n       \r\n    </View>\r\n    );\r\n}\r\n\r\n\r\nexport default Blank;","import React from 'react';\r\nimport {View, Text, StyleSheet} from 'react-native';\r\nimport firebase from 'firebase';\r\nconst Linking = props =>{\r\n    global.linked=true;\r\n    //console.log(global.linked);\r\n    global.setScreen(22);\r\n\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n       // console.log('LOG '+global.linked)\r\n        if (user) {\r\n            console.log(props);\r\n         global.handleAssignmentLink(props.route.params.class,props.route.params.assignment);\r\n        }\r\n     });\r\n    return   (\r\n    <View >\r\n    </View>\r\n    );\r\n}\r\n\r\n\r\nexport default Linking;","import React from 'react';\r\nimport {View, Text, StyleSheet} from 'react-native';\r\nconst LinkLoading = props =>{\r\n    return   (\r\n    <View >\r\n        <Text style={{margin:10}}>Loading...</Text>\r\n        <Text style={{margin:10}}>If you are not automatically redirected make sure you are signed in and enrolled in this class</Text>\r\n    </View>\r\n    );\r\n}\r\n\r\n\r\nexport default LinkLoading;","import React, {useState} from 'react';\r\nimport {View,Dimensions, Image, Button, StyleSheet,FlatList, TouchableOpacity} from 'react-native';\r\nimport firebase from 'firebase';\r\n\r\nconst Tab = props =>{\r\n    var img = \"../assets/home.png\";\r\n    const handlePress=()=>{\r\n        if(firebase.auth().currentUser!=null){\r\n            props.setScreen(0);\r\n        }\r\n    }\r\n    return   (\r\n    \r\n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1}} onPress={()=> props.setScreen(props.screen)}>\r\n        <TouchableOpacity onPress={handlePress}>\r\n        <Image \r\n            source={require('../assets/home.png')}\r\n            style={styles.logo}\r\n            resizeMode={\"stretch\"}/>\r\n        </TouchableOpacity>\r\n    </View>\r\n    );\r\n}\r\n  \r\nconst {width} = Dimensions.get(\"screen\");\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    tab:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1\r\n    },\r\n    logo: {\r\n        width: 72,\r\n        height: 64\r\n    }\r\n    \r\n});\r\n\r\nexport default Tab;","import React, {useState} from 'react';\r\nimport {View,Dimensions, Image, Button, StyleSheet,FlatList, TouchableOpacity} from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nconst TabN = props =>{\r\n    var img = \"../assets/home.png\";\r\n    const handlePress=()=>{\r\n      if(firebase.auth().currentUser!=null){\r\n          props.setScreen(4);\r\n        }\r\n     }\r\n    return   (\r\n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1}} onPress={()=> props.setScreen(props.screen)}>\r\n        <TouchableOpacity onPress={handlePress}>\r\n          <Image \r\n              source={require('../assets/document.png')}\r\n              style={styles.logo}\r\n              resizeMode={\"stretch\"}/>\r\n        </TouchableOpacity>\r\n    </View>\r\n    );\r\n}\r\n  \r\nconst {width} = Dimensions.get(\"screen\");\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    tab:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1\r\n    },\r\n    logo: {\r\n        width: 72,\r\n        height: 64\r\n    }\r\n    \r\n});\r\n\r\nexport default TabN;","import React, {useState} from 'react';\r\nimport {TouchableOpacity,View,Dimensions, Image, Button, StyleSheet,FlatList} from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nconst TabG = props =>{\r\n    var img = \"../assets/home.png\";\r\n\r\n    const handlePress=()=>{\r\n      if(firebase.auth().currentUser!=null){\r\n          props.goClassroom();\r\n      }\r\n  }\r\n    return   (\r\n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1}} >\r\n        <TouchableOpacity onPress={handlePress}>\r\n          <Image \r\n              source={require('../assets/classroom.png')}\r\n              style={styles.logo}\r\n              resizeMode={\"stretch\"}/>\r\n          </TouchableOpacity>\r\n    </View>\r\n    );\r\n}\r\n  \r\nconst {width} = Dimensions.get(\"screen\");\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    tab:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1\r\n    },\r\n    logo: {\r\n        width: 72,\r\n        height: 64\r\n    }\r\n    \r\n});\r\n\r\nexport default TabG;","import React, {useState} from 'react';\r\nimport {View,Dimensions, Image, Button, StyleSheet,FlatList, TouchableOpacity} from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nconst TabS = props =>{\r\n    var img = \"../assets/home.png\";\r\n    const handlePress=()=>{\r\n      if(firebase.auth().currentUser!=null){\r\n          props.setScreen(5);\r\n        }\r\n        else{\r\n            props.setScreen(2);\r\n        }\r\n     }\r\n    return   (\r\n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1}} onPress={()=> props.setScreen(props.screen)}>\r\n        <TouchableOpacity onPress={handlePress}>\r\n          <Image \r\n              source={require('../assets/settings.png')}\r\n              style={styles.logo}\r\n              resizeMode={\"stretch\"}/>\r\n        </TouchableOpacity>\r\n    </View>\r\n    );\r\n}\r\n  \r\nconst {width} = Dimensions.get(\"screen\");\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    tab:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        borderColor:'grey',\r\n        borderWidth:1\r\n    },\r\n    logo: {\r\n        width: 72,\r\n        height: 64\r\n    }\r\n    \r\n});\r\n\r\nexport default TabS;","import React, {useState} from 'react';\r\nimport {View, TextInput, Button, StyleSheet, Modal, Text} from 'react-native';\r\nimport Tab from './Tab';\r\nimport TabN from './TabN';\r\nimport TabG from './TabG';\r\nimport TabS from './TabS';\r\n\r\nconst MenuBar = props =>{\r\n    \r\n    return  (\r\n      \r\n        <View style={{flexDirection:'row'}}>\r\n            <Tab setScreen = {props.setScreen} currScreen ={props.screen} screen={0} colorList={props.colorList}></Tab>\r\n            <TabN setScreen = {props.setScreen} currScreen ={props.screen} screen={1} colorList={props.colorList}></TabN>\r\n            <TabG goClassroom={props.goClassroom} setScreen = {props.setScreen} currScreen ={props.screen} screen={2} colorList={props.colorList}></TabG>\r\n            <TabS setScreen = {props.setScreen} currScreen ={props.screen} screen={3} colorList={props.colorList}></TabS>\r\n      </View>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default MenuBar;","import React from 'react';\r\nimport {View, Button,TextInput, Text, Dimensions, StyleSheet} from 'react-native';\r\n\r\nconst Popup = props =>{\r\n    console.log('popup');\r\n    const handleClick =()=>{\r\n        props.setLink(\"\");\r\n    }\r\n    return   (\r\n    <View style ={styles.card}>\r\n        <Text style={{color:'blue', fontSize:20}}>Link to Share</Text>\r\n        <TextInput style={{width:250, margin:20}}value={props.link}/>\r\n        <Button style={{width:100, height:50}} title='Done' onPress={handleClick}/>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n   card:{\r\n       width: 300,\r\n       height:150,\r\n       borderColor:'black', \r\n       borderWidth:1, \r\n       padding:10,\r\n       backgroundColor:'white',\r\n        position: 'absolute', justifyContent: 'center', alignItems: 'center',\r\n        left: (Dimensions.get('window').width / 2) - 175,\r\n        top:(Dimensions.get('window').height / 2) - 125},\r\n   \r\n});\r\n\r\nexport default Popup;","import React, {useState} from 'react';\r\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\r\nimport firebase, { auth } from 'firebase';\r\nimport GoalItem from '../components/GoalItem';\r\nimport Popup from '../components/Popup';\r\n//import * as GoogleSignIn from 'expo-google-sign-in';\r\n\r\n\r\n\r\n\r\nconst ClassroomDetails = props =>{\r\n\r\n    const [toDoOpen, setToDoOpen]= useState(true);\r\n    const [completeOpen, setCompleteOpen]= useState(false);\r\n    //console.log(props.classDetails)\r\n    const assignHandler=()=>{\r\n        props.setScreen(13);\r\n    };\r\n    const handleAssingmentClick=(id)=>{\r\n        // console.log(props.classDetails);\r\n        // console.log(props.classDetails['responses'][id]);\r\n        var qInfo = props.classDetails['assignments']['details'][id];\r\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][id]!=null&&props.classDetails['responses'][id][firebase.auth().currentUser.uid]!=null){\r\n            qInfo = props.classDetails['responses'][id][firebase.auth().currentUser.uid];\r\n        }\r\n\r\n        \r\n        var fInfo={'grade': '',\r\n        'gFeedback':'',\r\n        'focus':'',\r\n        'gather':'',\r\n        'brainstorm':'',\r\n        'evaluate':'',\r\n        'plan':'',\r\n        'reflect':''};\r\n        var targetScreen =16;\r\n        console.log(props.classDetails);\r\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][id]!=null&&props.classDetails['responses'][id][firebase.auth().currentUser.uid]!=null &&props.classDetails['responses'][id][firebase.auth().currentUser.uid]['feedback']!=null){\r\n            fInfo = props.classDetails['responses'][id][firebase.auth().currentUser.uid]['feedback'];\r\n            targetScreen=21;\r\n        }\r\n        props.setFInfo(fInfo);\r\n        props.setRid(id);\r\n        props.setQInfo(qInfo);\r\n        props.setScreen(targetScreen);\r\n    };\r\n\r\n    const ownerAssignmentClicked=(id)=>{\r\n        props.setRid(id);\r\n        props.setScreen(18);\r\n    }\r\n    var isOwned = firebase.auth().currentUser.uid==props.classDetails['owner'];\r\n\r\n    var data = props.classDetails['assignments']!=null&&props.classDetails['assignments']['set-list'] !=null?props.classDetails['assignments']['set-list']:[];\r\n    var to_do=[];\r\n    var complete=[];\r\n    if(!isOwned){\r\n        data.forEach(element => {\r\n            if(props.classDetails['responses']==null||props.classDetails['responses'][element['id']]==null||props.classDetails['responses'][element['id']][firebase.auth().currentUser.uid]==null){\r\n\r\n                to_do.push(element);\r\n            }\r\n            else{\r\n                complete.push(element);\r\n            }\r\n        });\r\n    }\r\n    // else{\r\n    //     data.forEach(element => {\r\n    //         var existsUngraded =false;\r\n    //         console.log( props.classDetails['responses'][element['id']])\r\n    //         props.classDetails['responses'][element['id']].forEach(([key,value]) => {\r\n    //             if(value==null || value['feedback']==null){\r\n    //                 existsUngraded=true;\r\n    //             }\r\n    //         });\r\n    //         if(existsUngraded){\r\n    //             to_do.push(element);\r\n    //         }\r\n    //         else{\r\n    //             complete.push(element);\r\n    //         }\r\n\r\n             \r\n    //     });\r\n    // }\r\n\r\n    return   (\r\n    <View style={{height:'100%', width: '100%'}}>\r\n        <View style={{position:'absolute', zIndex: 3, elevation: 3}}>\r\n            {props.link.length!=0&&<Popup   link={props.link} setLink={props.setLink}/>}\r\n        </View>\r\n\r\n        <View style={{padding:20}}>\r\n         {props.link.length!=0&&<Popup link={props.link} setLink={props.setLink}/>}\r\n           <Text style={styles.header}>{props.name}</Text>\r\n            {isOwned&&<View>\r\n                <View style={styles.row}>\r\n                <View style={{margin:15}}>\r\n                    <Text>{'Password: ' +props.classDetails['password']}</Text>\r\n                </View> \r\n                <View style={{margin:15}}>\r\n                    <Button title=' Assign ' onPress={assignHandler}/>  \r\n                </View> \r\n            </View>\r\n             <FlatList style={{flex:1}}data = {data}\r\n             keyExtractor={(item, index)=> item.id}\r\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={id=>ownerAssignmentClicked(id)}title ={itemData.item.value}/>}/>\r\n             </View>}\r\n             {!isOwned&&<View>\r\n            <View style={styles.row}>\r\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setToDoOpen(!toDoOpen)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(toDoOpen?'v':'>') +'  To-Do  '}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {\r\n             toDoOpen&&<View>\r\n                 <FlatList style={{flex:1}}data = {to_do}\r\n             keyExtractor={(item, index)=> item.id}\r\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleAssingmentClick(id)}title ={itemData.item.value}/>}/>\r\n             {to_do.length==0&&<Text style={{fontStyle:'italic'}}>All done.</Text>}\r\n             </View>\r\n\r\n            }\r\n\r\n            <View style={styles.row}>\r\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setCompleteOpen(!completeOpen)}>\r\n                    <View style = {styles.listItem}>\r\n                        <Text>{(completeOpen?'v':'>') +'  Complete  '}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n            {\r\n             completeOpen&&<FlatList style={{flex:1}}data = {complete}\r\n             keyExtractor={(item, index)=> item.id}\r\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleAssingmentClick(id)}title ={itemData.item.value}/>}/>\r\n\r\n            }\r\n            </View>\r\n\r\n            \r\n             \r\n             }\r\n\r\n\r\n           \r\n\r\n    </View>\r\n    \r\n    \r\n    </View>\r\n    );\r\n}\r\n\r\nconst {width} = Dimensions.get(\"screen\");\r\nconst image_width =Math.min( width * 0.45,250);\r\nconst styles = StyleSheet.create({\r\n    \r\n    row:{\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n    },\r\n    listItem:{ \r\n        padding:10,\r\n        marginVertical:10,\r\n        backgroundColor: '#add8e6',\r\n        borderColor:'black',\r\n        borderWidth:1\r\n      },\r\n      extraSpacing:{\r\n          marginRight:image_width+15\r\n        },\r\n    header:{\r\n            color: '#05375a',\r\n            fontSize: 30,\r\n            fontWeight: 'bold'\r\n    }\r\n  });\r\n  \r\n\r\nexport default ClassroomDetails;","import React, {useState} from 'react';\r\nimport {View, TextInput, Button, StyleSheet, Modal, Text, TouchableOpacity} from 'react-native';\r\n\r\nconst FeedbackGoalView = props =>{\r\n  \r\n\r\n    return  (\r\n      \r\n          <View style={styles.inputContainer}>\r\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\r\n            \r\n              <Text>{props.question}</Text>\r\n \r\n            <TouchableOpacity onPress={()=>setCommentMode(true)}>\r\n              <Text> {props.input}</Text>\r\n            </TouchableOpacity>\r\n          <View style={{width:'100%'}}>\r\n    <Text style={styles.italics}>{props.comment!=''?'Instructor feedback: '+props.comment:''}</Text>\r\n\r\n              </View>\r\n\r\n  \r\n            \r\n          </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer:{\r\n        width:'80%',\r\n        flex:1,\r\n        flexDirection :'column',\r\n        alignItems: 'center'\r\n  \r\n     },\r\n     input:{\r\n      width: '100%', \r\n       borderColor:'black', \r\n       borderWidth:1, \r\n       padding:10,\r\n       marginBottom: 10\r\n     },\r\n     italics:{\r\n      fontStyle:'italic',\r\n        width: '100%', \r\n       padding:10,\r\n       marginBottom: 10\r\n     }\r\n});\r\n\r\nexport default FeedbackGoalView;","import React, {useState} from 'react';\r\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\r\n\r\nimport GoalInput from '../components/GoalInput';\r\nimport CustomGoalInput from '../components/CustomGoalInput';\r\nimport firebase from 'firebase'\r\nimport FeedbackGoalInput from '../components/FeedbackGoalInput';\r\nimport FeedbackGoalView from '../components/FeedbackGoalView';\r\n\r\nconst ViewFeedback = props =>{\r\n    const db = firebase.database();\r\n    // console.log('here sir');\r\n    // console.log(props.qInfo);\r\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\r\n\r\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\r\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\r\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\r\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\r\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\r\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\r\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\r\n\r\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\r\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\r\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\r\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\r\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\r\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\r\n\r\n    const [focusR, setFocusR]= useState(props.fInfo['focus']);\r\n    const [gatherR, setGatherR]= useState(props.fInfo['gather']);\r\n    const [brainstormR, setBrainstormR]= useState(props.fInfo['brainstorm']);\r\n    const [evaluateR, setEvaluateR]= useState(props.fInfo['evaluate']);\r\n    const [planR, setPlanR]= useState(props.fInfo['plan']);\r\n    const [reflectR, setReflectR]= useState(props.fInfo['reflect']);\r\n    const [gFeedback, setGFeedback]=useState(props.fInfo['gFeedback']);\r\n    const [grade, setGrade]=useState(props.fInfo['grade']);\r\n    const handleDone = ()=>{\r\n       \r\n        //props.setClassDetails(classDetails);\r\n        props.setScreen(12);\r\n      };\r\n\r\n    const responses=<React.Fragment>\r\n    <FeedbackGoalView comment={focusR}input = {focus} setInput={setFocusR} color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }/>\r\n    <FeedbackGoalView comment={gatherR}input = {gather} setInput={setGatherR}  color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}/>\r\n    <FeedbackGoalView comment={brainstormR}input = {brainstorm} setInput={setBrainstormR} color ='yellow' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}/>\r\n    <FeedbackGoalView comment={evaluateR}input = {evaluate} setInput={setEvaluateR} color ='green'header='Evaluate' question = {props.qInfo['evaluate']['prompt']}/>\r\n    <FeedbackGoalView comment={planR}input = {plan} setInput={setPlanR} color ='#ffdb58'  header='Plan and Act' question = {props.qInfo['plan']['prompt']}/>\r\n    <FeedbackGoalView comment={reflectR} input = {reflect} setInput={setReflectR}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}/></React.Fragment>;\r\n\r\n\r\n\r\n    return(\r\n        <ScrollView>\r\n                \r\n            <View style={{\r\n                padding:30,\r\n                flex:1,\r\n                flexDirection :'column',\r\n                alignItems: 'center'\r\n            }}>\r\n                \r\n                <Text style={{fontWeight:'bold'}} >Leave Feedback</Text>\r\n                <Text style={{\r\n            width: '80%', \r\n            padding:10,\r\n            marginBottom: 10\r\n        }} > {userInput}</Text>\r\n                {responses}\r\n                <Text style={{fontStyle:'italic'}}>{gFeedback!=''?'Feedback: '+gFeedback:''}</Text>\r\n                <Text style={{fontStyle:'italic'}} >{'Grade: '+grade}</Text>\r\n                <Button style={{width:'20%'}} title='DONE' onPress = {handleDone}/>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen:{\r\n        padding:30,\r\n        alignItems:'center'\r\n      },\r\n      button:{\r\n        width:'20%' \r\n      },\r\n      input:{\r\n        width: '80%', \r\n        borderColor:'black', \r\n        borderWidth:1, \r\n        padding:10,\r\n        marginBottom: 10\r\n      }\r\n});\r\n\r\nexport default ViewFeedback;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/self-q/expo-service-worker.js', { scope: '/self-q/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/home.f2a9ae9d.png\";","module.exports = __webpack_public_path__ + \"static/media/document.37fa493b.png\";","module.exports = __webpack_public_path__ + \"static/media/classroom.c7ea54d6.png\";","import React, {useState} from 'react';\r\nimport {View, TextInput, Button, StyleSheet, Modal, Text, TouchableOpacity} from 'react-native';\r\n\r\nconst GoalInput = props =>{\r\n    const [enteredGoal, setEnteredGoal] = useState(''); \r\n\r\n    function goalInputHandler(enteredText){\r\n        props.setInput(enteredText);\r\n    }\r\n    return  (\r\n      \r\n          <View style={styles.inputContainer}>\r\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\r\n            <TouchableOpacity onPress={()=>props.useCustom(true)}>\r\n              <Text>{props.question}</Text>\r\n            </TouchableOpacity>\r\n            <TextInput text={props.text} placeholder={props.header} style ={styles.input} onChangeText = {goalInputHandler} value={props.input}/>\r\n            \r\n          </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer:{\r\n        width:'80%',\r\n        flex:1,\r\n        flexDirection :'column',\r\n        alignItems: 'center'\r\n  \r\n     },\r\n     input:{\r\n      width: '100%', \r\n       borderColor:'black', \r\n       borderWidth:1, \r\n       padding:10,\r\n       marginBottom: 10\r\n     }\r\n});\r\n\r\nexport default GoalInput;","module.exports = __webpack_public_path__ + \"static/media/settings.4564248b.png\";","import React, {useState} from 'react';\r\nimport {View, TextInput, Button, StyleSheet, Modal, Text} from 'react-native';\r\n\r\nconst CustomGoalInput = props =>{\r\n\r\n    function goalInputHandler(enteredText){\r\n        props.setInput(enteredText);\r\n    }\r\n    return  (\r\n      \r\n          <View style={styles.inputContainer}>\r\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\r\n            <TextInput style ={styles.input} placeholder ={props.header+' question'} value={props.prompt} onChangeText={props.setPrompt}></TextInput>\r\n            <TextInput placeholder={props.header} style ={styles.input} onChangeText = {goalInputHandler} value={props.input}/>\r\n            \r\n          </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer:{\r\n        width:'80%',\r\n        flex:1,\r\n        flexDirection :'column',\r\n        alignItems: 'center'\r\n  \r\n     },\r\n     input:{\r\n      width: '100%', \r\n       borderColor:'black', \r\n       borderWidth:1, \r\n       padding:10,\r\n       marginBottom: 10\r\n     }\r\n});\r\n\r\nexport default CustomGoalInput;","import React from 'react';\r\nimport {View, Text, StyleSheet, TouchableOpacity} from 'react-native';\r\n\r\nconst GoalItem = props =>{\r\n    return  (\r\n    <TouchableOpacity onPress= {props.onDelete.bind(this,props.id)}>\r\n        <View style = {styles.listItem}>\r\n            <Text>{props.title }</Text>\r\n        </View>\r\n    </TouchableOpacity>);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    listItem:{ \r\n        padding:10,\r\n        marginVertical:10,\r\n        backgroundColor: '#ccc',\r\n        borderColor:'black',\r\n        borderWidth:1\r\n      }\r\n});\r\n\r\nexport default GoalItem;","module.exports = __webpack_public_path__ + \"static/media/left_arrow.947c4ae8.png\";","module.exports = __webpack_public_path__ + \"static/media/right_arrow.05efbab9.png\";","import React, {useState} from 'react';\r\nimport {View, TextInput, Button, StyleSheet, Modal, Text, TouchableOpacity} from 'react-native';\r\n\r\nconst FeedbackGoalInput = props =>{\r\n    const [commentMode, setCommentMode] = useState(props.comment!=''); \r\n\r\n    return  (\r\n      \r\n          <View style={styles.inputContainer}>\r\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\r\n            \r\n              <Text>{props.question}</Text>\r\n \r\n            <TouchableOpacity onPress={()=>setCommentMode(true)}>\r\n              <Text  style ={styles.italics}> {props.input}</Text>\r\n            </TouchableOpacity>\r\n            {commentMode&& <View style={{width:'100%'}}>\r\n              <TextInput value={props.comment}style={styles.input} placeholder={'Leave a comment on '+props.header} onChangeText={text=>props.setInput(text)}/>\r\n\r\n              </View>\r\n\r\n            }\r\n            \r\n          </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer:{\r\n        width:'80%',\r\n        flex:1,\r\n        flexDirection :'column',\r\n        alignItems: 'center'\r\n  \r\n     },\r\n     input:{\r\n      width: '100%', \r\n       borderColor:'black', \r\n       borderWidth:1, \r\n       padding:10,\r\n       marginBottom: 10\r\n     },\r\n     italics:{\r\n      fontStyle:'italic',\r\n        width: '100%', \r\n       padding:10,\r\n       marginBottom: 10\r\n     }\r\n});\r\n\r\nexport default FeedbackGoalInput;"],"sourceRoot":""}