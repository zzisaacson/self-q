{"version":3,"sources":["screens/Login.js","assets/swipe_btn.png","assets/self-q.png","assets/selfq_science.png","assets/selfq_math.png","assets/selfq_reading.png","assets/selfq_writing.png","assets/selfq_social.png","assets/academic_social.png","assets/selfq_emotional.png","assets/selfq_custom.png","assets/row_btn.png","App.js","screens/Home.js","screens/AddSet.js","screens/TypeSelect.js","screens/Settings.js","screens/AddCustomPrompts.js","screens/SelectCustom.js","screens/SwipeAddSet.js","screens/SignUp.js","screens/ClassroomMain.js","screens/ClassroomCreate.js","screens/ClassroomJoin.js","screens/AssignTypeSelect.js","screens/AssignSet.js","screens/AddSetClass.js","screens/SwipeAddSetClass.js","screens/GradingStudList.js","screens/ClassSelectCustom.js","screens/LeaveFeedback.js","screens/AssignCustom.js","components/Blank.js","components/Linking.js","screens/LinkLoading.js","components/Tab.js","components/TabN.js","components/TabG.js","components/TabS.js","components/MenuBar.js","components/Popup.js","screens/ClassDetails.js","components/FeedbackGoalView.js","screens/ViewFeedback.js","assets/home.png","assets/document.png","assets/classroom.png","assets/settings.png","components/GoalInput.js","components/CustomGoalInput.js","components/GoalItem.js","assets/left_arrow.png","assets/right_arrow.png","components/FeedbackGoalInput.js"],"names":["height_logo","Dimensions","get","height","styles","StyleSheet","create","container","flex","backgroundColor","header","justifyContent","alignItems","footer","borderTopLeftRadius","borderTopRightRadius","paddingVertical","paddingHorizontal","logo","width","title","color","fontSize","fontWeight","text","marginTop","clickableText","smallHeader","button","signIn","borderRadius","flexDirection","textSign","input","borderColor","borderWidth","padding","margin","Login","props","useState","email","setEmail","password","setPassword","error","setError","firebase","auth","onAuthStateChanged","user","console","log","global","linked","setScreen","style","source","require","resizeMode","placeholder","onChangeText","secureTextEntry","onPress","signInWithEmailAndPassword","then","catch","module","exports","done","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","App","currScreen","courseGoals","setCourseGoals","colorList","setColorList","qInfo","setQInfo","rid","setRid","classes","setClasses","classDetails","setClassDetails","className","setClassName","student","setStudent","fInfo","setFInfo","link","setLink","setScreenHandler","s","handleAssignmentLink","cls","id","ref","once","snapshot","data","val","includes","currentUser","uid","targetScreen","errorObject","code","setGoalsHanlder","goals","set","goClassroomHandler","l","c","m","push","goClassroom","qList","setQList","setNoDB","globalUpdate","Stack","createStackNavigator","nav","React","useRef","navCon","linking","enabled","fallback","Navigator","Screen","name","component","Blank","Linking","screen","disableYellowBox","Home","on","removeGoalHandler","goalId","keyExtractor","item","index","renderItem","itemData","onDelete","value","marginBottom","AddSet","useCustom","setUseCustom","userInput","setUserInput","focus","setFocus","gather","setGather","brainstorm","setBrainstorm","evaluate","setEvaluate","plan","setPlan","reflect","setReflect","focusP","setFocusP","gatherP","setGatherP","brainstormP","setBrainstormP","evaluateP","setEvaluateP","planP","setPlanP","reflectP","setReflectP","map","element","delText","setDelText","regInput","Fragment","setInput","question","custInput","prompt","setPrompt","details","marginRight","goalTitle","forEach","toPage","bind","image_width","Math","min","image","dropdown","row","listItem","marginVertical","extraSpacing","TypeSelect","academic_open","set_academic_open","personal_open","set_personal_open","academic","random","toString","substring","personal","Settings","signOut","AddCustomPrompts","handleEdit","yesSave","setYesSave","setName","SelectCustom","nameList","setNameList","n","SwipeAddSet","currQ","setCurrQ","addGoalHandler","namePage","focusPage","multiline","gatherPage","brainstormPage","evaluatePage","planPage","reflectPage","centerRow","SignUp","createUserWithEmailAndPassword","ClassroomMain","ClassroomCreate","toLowerCase","ClassroomJoin","realName","setRealName","names","AssignTypeSelect","AssignSet","replaceAll","assignments","AddSetClass","SwipeAddSetClass","GradingStudList","toDoOpen","setToDoOpen","completeOpen","setCompleteOpen","handleStudClick","to_grade","graded","el","fontStyle","ClassSelectCustom","LeaveFeedback","focusR","setFocusR","gatherR","setGatherR","brainstormR","setBrainstormR","evaluateR","setEvaluateR","planR","setPlanR","reflectR","setReflectR","gFeedback","setGFeedback","responses","comment","AssignCustom","route","params","class","assignment","LinkLoading","tab","Tab","View","TouchableOpacity","Image","TabN","TabG","TabS","MenuBar","card","position","left","top","Popup","Text","TextInput","Button","ClassroomDetails","handleAssingmentClick","isOwned","to_do","complete","zIndex","elevation","FlatList","GoalItem","ownerAssignmentClicked","inputContainer","italics","FeedbackGoalView","setCommentMode","ViewFeedback","grade","ScrollView","GoalInput","enteredText","CustomGoalInput","FeedbackGoalInput","commentMode"],"mappings":"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","file":"static/js/app.732ddcb9.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\nimport firebase from 'firebase';\n//import { useNavigation } from '@react-navigation/native';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n//React.createContext\n\nconst Login= props =>{\n   // global.nav = useNavigation();\n    //console.log(global.nav.navigate);\n    //nav.\n  //  console.log(props.navigation.getParam('setScreen'));\n   // const navigation = useNavigation();\n    //props=navigation.props;\n    //console.log('after: '+global.yep);\n    //props = {...global.props, props};\n    //console.log(props);\n\n    const [email, setEmail]= useState('');\n    const [password, setPassword]= useState('');\n    const [error, setError]=useState('');\n\n\n    firebase.auth().onAuthStateChanged((user) => {\n        console.log('LOG '+global.linked)\n        if (user && !global.linked) {\n          props.setScreen(0);\n        }\n     });\n   \n    const handleSignIn = ()=>{\n        setError('Loading...');\n        firebase.auth().signInWithEmailAndPassword(email,password)\n        .then(()=>{\n            props.setScreen(0);\n        })\n        .catch((error)=>{\n            setError(error+ ' Please try again.');\n            console.log('auth failed '+error+' && email='+email);\n        });\n     \n    }\n    const setScreenHandler=()=>{\n        props.setScreen(3);\n    }\n    return   (\n    <View style={styles.container}>\n        <View style ={styles.header}>\n            <Image \n            source={require('../assets/self-q.png')}\n            style={styles.logo}\n            resizeMode={\"stretch\"}/>\n        </View>\n        <View style ={styles.footer}>\n            <Text style={styles.title}>Welcome to SELf-Q!</Text>\n            <Text style = {styles.text}>Sign in with account</Text>\n            <TextInput placeholder={\"Email\"} style ={styles.input} onChangeText={setEmail}/>\n            <TextInput secureTextEntry={true} placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\n            <Text style={styles.text}>{error}</Text>\n            <Button style={{width:'25%'}} title=\"Sign In\" onPress ={handleSignIn}/>\n            <View style ={{alignItems:'center'}}> \n                <TouchableOpacity onPress={setScreenHandler}>\n                    <Text  style = {styles.clickableText}>New user? Sign up.</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    </View>\n    );\n}\n\nconst {height} = Dimensions.get(\"screen\");\nconst height_logo = height * 0.14;\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 2, \n      backgroundColor: '#009387'\n    },\n    header: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    footer: {\n        flex: 1,\n        backgroundColor: '#fff',\n        borderTopLeftRadius: 30,\n        borderTopRightRadius: 30,\n        paddingVertical: 50,\n        paddingHorizontal: 30\n    },\n    logo: {\n        width: height_logo,\n        height: height_logo\n    },\n    title: {\n        color: '#05375a',\n        fontSize: 30,\n        fontWeight: 'bold'\n    },\n    text: {\n        color: 'grey',\n        marginTop:5\n    },\n    clickableText: {\n        color: 'blue',\n        fontWeight: 'bold',\n        marginTop:10\n    },\n    smallHeader: {\n        color: '#05375a',\n        fontWeight: 'bold',\n        marginTop:10\n    },\n    button: {\n        width:\"20%\",\n        marginTop: 30\n    },\n    signIn: {\n        width: 150,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 50,\n        flexDirection: 'row'\n    },\n    textSign: {\n        color: 'white',\n        fontWeight: 'bold'\n    },\n    input:{\n        width: '90%', \n         borderColor:'black', \n         borderWidth:1, \n         padding:5,\n        margin: 10\n       },\n       \n  });\n  \n\nexport default Login;","module.exports = __webpack_public_path__ + \"static/media/swipe_btn.75af9935.png\";","module.exports = __webpack_public_path__ + \"static/media/self-q.1050f68b.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_science.8475672d.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_math.3a01f113.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_reading.7d79b493.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_writing.9ca6bb68.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_social.07bec3e5.png\";","module.exports = __webpack_public_path__ + \"static/media/academic_social.8c7f8345.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_emotional.6fa4cdf5.png\";","module.exports = __webpack_public_path__ + \"static/media/selfq_custom.89d6291b.png\";","module.exports = __webpack_public_path__ + \"static/media/row_btn.cfd107e8.png\";","import React, {useState } from 'react';\nimport { Platform, View, Dimensions, useWindowDimensions } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport {StackNavigator} from '@react-navigation/stack'\n\n//import GLOBAl from './global'\nimport Home from './screens/Home' \nimport AddSet from './screens/AddSet';\nimport Login from './screens/Login';\nimport MenuBar from './components/MenuBar';\nimport TypeSelect from './screens/TypeSelect';\nimport Settings from './screens/Settings';\nimport AddCustomPrompts from './screens/AddCustomPrompts';\nimport SelectCustom from './screens/SelectCustom';\nimport SwipeAddSet from './screens/SwipeAddSet';\n\n\nimport firebase from 'firebase';\nimport SignUp from './screens/SignUp';\nimport ClassroomMain from './screens/ClassroomMain';\nimport ClassroomCreate from './screens/ClassroomCreate';\nimport ClassroomJoin from './screens/ClassroomJoin';\nimport ClassroomDetails from './screens/ClassDetails';\nimport AssignTypeSelect from './screens/AssignTypeSelect';\nimport AssignSet from './screens/AssignSet';\nimport AddSetClass from './screens/AddSetClass';\nimport SwipeAddSetClass from './screens/SwipeAddSetClass';\nimport GradingStudList from './screens/GradingStudList';\nimport ClassSelectCustom from './screens/ClassSelectCustom';\nimport LeaveFeedback from './screens/LeaveFeedback';\nimport ViewFeedback from './screens/ViewFeedback';\nimport AssignCustom from './screens/AssignCustom';\nimport Blank from './components/Blank';\nimport Linking from './components/Linking';\nimport LinkLoading from './screens/LinkLoading';\nglobal.linked=false;\n//import { firebaseConfig } from './components/config';\n//import { firebaseConfig } from './components/config';\nconst firebaseConfig={\n  apiKey: \"AIzaSyC9IrMEpuMkTgDdYnXzay5PnZ1MYgrqeyU\",\n  authDomain: \"self-q.firebaseapp.com\",\n  databaseURL: \"https://self-q.firebaseio.com\",\n  projectId: \"self-q\",\n  storageBucket: \"self-q.appspot.com\",\n  messagingSenderId: \"815667248878\",\n  appId: \"1:815667248878:web:5101ab55ce6deac57ffdff\",\n  measurementId: \"G-C9QTCTBDSL\"\n}\nvar done =false;\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}else {\n  firebase.app(); // if already initialized, use that one\n}\nconst db = firebase.database();\nconsole.disableYellowBox = true;\n\nexport default function App() { \n\n  const [currScreen, setScreen]= useState(2);\n  const [courseGoals, setCourseGoals] = useState([]);\n  const [colorList, setColorList] = useState(['lightgrey','lightgrey','lightgrey','lightblue']); \n  const [qInfo, setQInfo]= useState(4);\n  const [rid, setRid]=useState(0);\n  const [classes, setClasses]=useState([]);\n  const [classDetails, setClassDetails]=useState([]);\n  const [className, setClassName]=useState('');\n  const [student, setStudent]=useState('');\n  const [fInfo, setFInfo]=useState('');\n  const [link, setLink]=useState('');\n  const setScreenHandler=s=>{\n    console.log('To '+s +' and beyond');\n    var cList = [];\n    if(s == 0){\n      cList= ['lightblue','lightgrey','lightgrey','lightgrey'];\n    }\n    else if(s==1||s==4||s==7||s==8){\n      cList= ['lightgrey','lightblue','lightgrey','lightgrey'];\n    }\n    else if(s==9||s==10||s==11||s==12||s==13||s==14||s==15||s==16||s==17||s==18){\n      cList= ['lightgrey','lightgrey','lightblue','lightgrey'];\n    }\n    else if(s==2 ||s==3 || s==5) {\n      cList= ['lightgrey','lightgrey','lightgrey','lightblue'];\n    }\n    else{\n      cList= ['lightgrey','lightblue','lightgrey','lightgrey'];\n    }\n    setColorList(cList);\n    //console.log(global.nav.current.navigate);\n    // if (s==0 ){\n    //   global.nav.current.navigate('home');\n    // }\n    // if (s==1){\n    //   global.nav.current.navigate('add-set');\n    // }\n    // if (s==2){\n    //   global.nav.current.navigate('login');\n    // }\n    // if (s==3){\n    //   global.nav.current.navigate('sign-up');\n    // }\n    // if (s==4){\n    //   global.nav.current.navigate('type-select');\n    // }\n    // if (s==5){\n    //   global.nav.current.navigate('settings');\n    // }\n    // if (s==6){\n    //   global.nav.current.navigate('add-custom-prompts');\n    // }\n    // if (s==7){\n    //   global.nav.current.navigate('select-custom');\n    // }\n    // if (s==8){\n    //   global.nav.current.navigate('swipe-add-set');\n    // }\n    // if (s==9){\n    //   global.nav.current.navigate('classroom-main');\n    // }\n    // if (s==10){\n    //   global.nav.current.navigate('classroom-create');\n    // }\n    // if (s==11){\n    //   global.nav.current.navigate('classroom-join');\n    // }\n    // if (s==12){\n    //   global.nav.current.navigate('classroom-data');\n    // }\n    // if (s==13){\n    //   global.nav.current.navigate('assign-type-select');\n    // }\n    // if (s==14){\n    //   global.nav.current.navigate('assign-custom');\n    // }\n    // if (s==15){\n    //   global.nav.current.navigate('assign-set');\n    // }\n    // if (s==16){\n    //   global.nav.current.navigate('add-set-class');\n    // }\n    // if (s==17){\n    //   global.nav.current.navigate('swipe-add-set-class');\n    // }\n    // if (s==18){\n    //   global.nav.current.navigate('grading-stud-list');\n    // }\n    // if (s==19){\n    //   global.nav.current.navigate('class-select-custom');\n    // }\n    // if (s==20){\n    //   global.nav.current.navigate('leave-feedback');\n    // }\n    // if (s==21){\n    //   global.nav.current.navigate('view-feedback');\n    // }\n    \n\n    return setScreen(s)\n  }\n \n  global.handleAssignmentLink=(cls, id)=>{\n        setClassName(cls);\n        db.ref('/classes/'+cls).once(\"value\", function(snapshot) {\n            var data=snapshot.val();\n            console.log(data)\n            setClassDetails(data);\n\n            if(!data['members'].includes(firebase.auth().currentUser.uid)){\n              return;\n            }\n            \n            var qInfo = data['assignments']['details'][id];\n            if (data['responses']!=null&&data['responses'][id]!=null&&data['responses'][id][firebase.auth().currentUser.uid]!=null){\n                qInfo = data['responses'][id][firebase.auth().currentUser.uid];\n            }\n\n            \n            var fInfo={'grade': '',\n            'gFeedback':'',\n            'focus':'',\n            'gather':'',\n            'brainstorm':'',\n            'evaluate':'',\n            'plan':'',\n            'reflect':''};\n            var targetScreen =16;\n            //console.log(props.classDetails);\n            if (data['responses']!=null&&data['responses'][id]!=null&&data['responses'][id][firebase.auth().currentUser.uid]!=null &&data['responses'][id][firebase.auth().currentUser.uid]['feedback']!=null){\n                fInfo = data['responses'][id][firebase.auth().currentUser.uid]['feedback'];\n                targetScreen=21;\n            }\n            if(firebase.auth().currentUser.uid==data['owner']){\n              targetScreen=18;\n            }\n\n            setFInfo(fInfo);\n            setRid(id);\n            setQInfo(qInfo);\n            setScreenHandler(targetScreen);\n\n\n              }, function (errorObject) {\n                console.log(\"The read failed: \" + errorObject.code);\n              });\n            }; \n  \n  \n\n  if (currScreen==2 && firebase.auth().currentUser!=null && !done){\n    //console.log('memememememe');\n    done=true;\n    setScreen(0);\n  }\n\n  //console.log(firebase.auth().currentUser.uid)\n  const setGoalsHanlder=goals=>{\n    //console.log(firebase.auth().currentUser.uid)\n    db.ref(firebase.auth().currentUser.uid+'/set-list').set(goals);\n    return setCourseGoals(goals);\n  }\n\n  const goClassroomHandler=()=>{\n    var l =[];\n    //console.log(firebase.auth().currentUser.uid)\n    db.ref('/classes').once(\"value\", function(snapshot) {\n      const data=snapshot.val();\n      const uid = firebase.auth().currentUser.uid;\n      \n      for(var c in data){\n          \n          for(var m in data[c]['members']){\n              if(uid==data[c]['members'][m]){\n                  l.push({'id':c,'value':c});\n              }\n          }\n          \n      }\n\n      console.log(l);\n      setClasses(l);\n      setScreenHandler(9);\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code+' Please try again');\n    });\n    \n  }\n  global.goClassroom=goClassroomHandler;\n  \n  global.setScreen=setScreenHandler;\n  const globalUpdate = ()=>{\n    console.log('global update, qlist='+courseGoals)\n    global.props={currScreen:currScreen,\n      setScreen:setScreenHandler,\n      courseGoals:courseGoals,\n      setCourseGoals:setCourseGoals,\n      colorList:colorList,\n      setColorList:setColorList,\n      qInfo:qInfo,\n      setQInfo:setQInfo,\n      rid:rid,\n      setRid:setRid,\n      classes: classes,\n      setClasses: setClasses,\n      classDetails:classDetails,\n      setClassDetails:setClassDetails,\n      className: className,\n      setClassName:setClassName,\n      student:student,\n      setStudent:setStudent,\n      fInfo: fInfo,\n      setFInfo: setFInfo,\n      qList:courseGoals,\n      setQList:setGoalsHanlder,\n      setNoDB:setCourseGoals\n  \n    }\n  }\n\n  global.props={currScreen:currScreen,\n    setScreen:setScreenHandler,\n    courseGoals:courseGoals,\n    setCourseGoals:setCourseGoals,\n    colorList:colorList,\n    setColorList:setColorList,\n    qInfo:qInfo,\n    setQInfo:setQInfo,\n    rid:rid,\n    setRid:setRid,\n    classes: classes,\n    setClasses: setClasses,\n    classDetails:classDetails,\n    setClassDetails:setClassDetails,\n    className: className,\n    setClassName:setClassName,\n    student:student,\n    setStudent:setStudent,\n    fInfo: fInfo,\n    setFInfo: setFInfo,\n    qList:courseGoals,\n    setQList:setGoalsHanlder,\n    setNoDB:setCourseGoals,\n    globalUpdate:globalUpdate\n  };\n  const Stack = createStackNavigator();\n  const nav = React.useRef(null);\n  const navCon =  <NavigationContainer  linking={{ enabled: true }} ref={nav} fallback={<Login setScreen = {setScreenHandler}/>}>\n  <Stack.Navigator>\n      <Stack.Screen  name=\"selfq\" component={Blank}/>\n      <Stack.Screen  name=\"link\" component={Linking}/>\n      {/*<Stack.Screen  name=\"login\" component={Login}/>\n      <Stack.Screen  name=\"home\" component={Home}/>\n      <Stack.Screen  name=\"add-set\" component={AddSet}/>\n      <Stack.Screen  name=\"sign-up\" component={SignUp}/>\n      <Stack.Screen  name=\"type-select\" component={AddSet}/>\n      <Stack.Screen  name=\"settings\" component={Settings}/>\n      <Stack.Screen  name=\"add-custom-prompts\" component={AddCustomPrompts}/>\n      <Stack.Screen  name=\"select-custom\" component={SelectCustom}/>\n      <Stack.Screen  name=\"swipe-add-set\" component={SwipeAddSet}/>\n      <Stack.Screen  name=\"classroom-main\" component={ClassroomMain}/>\n      <Stack.Screen  name=\"classroom-create\" component={ClassroomCreate}/>\n      <Stack.Screen  name=\"classroom-join\" component={ClassroomJoin}/>\n      <Stack.Screen  name=\"classroom-details\" component={ClassroomDetails}/>\n      <Stack.Screen  name=\"assign-type-select\" component={AssignTypeSelect}/>\n      <Stack.Screen  name=\"assign-custom\" component={AssignCustom}/>\n      <Stack.Screen  name=\"assign-set\" component={AssignSet}/>\n      <Stack.Screen  name=\"add-set-class\" component={AddSetClass}/>\n      <Stack.Screen  name=\"swipe-add-set-class\" component={SwipeAddSetClass}/>\n      <Stack.Screen  name=\"grading-stud-list\" component={GradingStudList}/>\n      <Stack.Screen  name=\"class-select-custom\" component={ClassSelectCustom}/>\n      <Stack.Screen  name=\"leave-feedback\" component={LeaveFeedback}/>\n<Stack.Screen  name=\"view-feedback\" component={ViewFeedback}/>*/}\n      \n        \n    </Stack.Navigator>\n</NavigationContainer>;\n  var screen = <Home setRid={setRid} setQInfo={setQInfo } setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder} setNoDB={setCourseGoals}/>\n  if (currScreen==1 ){\n    screen = <AddSet rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\n  }\n  if (currScreen==2){\n    screen = <Login setScreen = {setScreenHandler} nav={nav}/>\n  }\n  if (currScreen==3){\n    screen = <SignUp setScreen = {setScreenHandler}/>\n  }\n  if (currScreen==4){\n    screen = <TypeSelect setQInfo={setQInfo} setScreen = {setScreen} setRid={setRid}/>\n  }\n  if (currScreen==5){\n    screen = <Settings setScreen={setScreenHandler}/>\n  }\n  if (currScreen==6){\n    screen = <AddCustomPrompts qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==7){\n    screen = <SelectCustom setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==8){\n    screen = <SwipeAddSet rid={rid} qList={courseGoals} setQList={setGoalsHanlder} setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==9){\n    screen = <ClassroomMain setClassName={setClassName} setClassDetails={setClassDetails} classes={classes} setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==10){\n    screen = <ClassroomCreate classes={classes}setClasses={setClasses} setClassDetails={setClassDetails}setClassName={setClassName}setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==11){\n    screen = <ClassroomJoin  classes={classes}setClasses={setClasses}setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==12){\n    screen = <ClassroomDetails link={link} setLink={setLink} setFInfo={setFInfo} setRid={setRid} name ={className}classDetails={classDetails} setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==13){\n    screen = <AssignTypeSelect setQInfo={setQInfo} setScreen = {setScreen} setRid={setRid}/>\n  }\n  if (currScreen==14){\n    screen = <AssignCustom setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==15){\n    screen = <AssignSet setLink={setLink} className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} classDetails ={classDetails} setClassDetails={setClassDetails}/>\n  }\n  if (currScreen==16){\n    screen = <AddSetClass classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\n  }\n  if (currScreen==17){\n    screen = <SwipeAddSetClass classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\n  }\n  if (currScreen==18){\n    screen = <GradingStudList link={link} setLink={setLink} setFInfo={setFInfo}setStudent={setStudent} rid={rid}classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\n  }\n  if (currScreen==19){\n    screen = <ClassSelectCustom setQInfo={setQInfo} qInfo ={qInfo} setScreen={setScreenHandler}/>\n  }\n  if (currScreen==20){\n    screen = <LeaveFeedback fInfo={fInfo} student={student} classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\n  }\n  if (currScreen==21){\n    screen = <ViewFeedback fInfo={fInfo} student={student} classDetails={classDetails} setClassDetails={setClassDetails}className={className}rid={rid} qInfo={qInfo} setQInfo={setQInfo} setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\n  }\n  if (currScreen==22){\n    screen = <LinkLoading/>\n  }\n  //const navigation = useNavigation();\n  //navigation.setParams({setScreen:setScreenHandler});\n  //console.log('meme.exe '+navigation.params)\n \n  // const l = StackNavigator({\n  //   login: {screen: (props)=> <Login {...props} setScreen = {setScreenHandler}/>\n  //   },\n  //   navigationOptions: ({navigation}) => ({\n  //     title: 'Login',\n  // })\n  // });\n  \n //navigationRef.params={a:'a'};\n //console.log(navigationRef.params);\n\n\n\n  //screen =<AddCustomSet setScreen = {setScreenHandler} qList ={courseGoals} setQList={setGoalsHanlder}/>\n  var height = Dimensions.get(\"window\").height;\n  var space = 0;\n  // if(Platform.OS=='web'){\n  //   height=height-50\n  //   space = (64+50+30)*(height/1080);\n  // }\n  // else{\n  //   space=64+50;\n  // }\n  //height = useWindowDimensions().height;\n  space=64;\n  return (\n    <View style={{height:height-space+64}}>\n      { <View style={{height:height-space}}>\n        {screen}\n      </View> }\n      {navCon}\n    <View style={{justifyContent:'flex-end'}}>\n      <MenuBar goClassroom={goClassroomHandler} setScreen ={setScreenHandler} screen ={currScreen} colorList={colorList}></MenuBar>\n    </View>\n    </View>\n  );\n\n\n}\n","import React, {useState} from 'react';\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\n\nimport GoalItem from '../components/GoalItem';\nimport firebase from 'firebase';\n//import Card from '../components/Card'\n\nvar once = 0;\nconst Home = props =>{\n    //props = {...global.props, props};\n    const db = firebase.database();\n    if (firebase.auth().currentUser.uid!=once){\n      db.ref(firebase.auth().currentUser.uid+'/set-list').on(\"value\", function(snapshot) {\n        console.log(snapshot.val())\n        if(snapshot.val()!=null){\n          console.log(props.setNoDB);\n          props.setNoDB(snapshot.val());\n          //props.globalUpdate();\n          //console.log(props);\n          //console.log(props.qList);\n        }\n      }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n      });\n      once=firebase.auth().currentUser.uid;\n   }\n\n\n    const removeGoalHandler = goalId=>{\n        // props.setQList(currentGoals=>{\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\n        // });\n        db.ref(firebase.auth().currentUser.uid+'/detail-list/'+goalId).once(\"value\", function(snapshot) {\n          const data=snapshot.val();\n          props.setRid(goalId);\n          props.setQInfo(data);\n          props.setScreen(1);\n        }, function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        });\n      }; \n    return   (\n    <View style={styles.screen}>\n      <Button title  = 'New Question Set' onPress={()=>props.setScreen(4)}/>\n      <FlatList data = {props.qList}\n      keyExtractor={(item, index)=> item.id}\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30\n      }\n});\n\nexport default Home;","import React, {useState} from 'react';\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\n\nimport GoalInput from '../components/GoalInput';\nimport CustomGoalInput from '../components/CustomGoalInput';\nimport firebase from 'firebase'\n\nconst AddSet = props =>{\n    const db = firebase.database();\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\n\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\n\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\n\n\n    const [delText, setDelText]= useState( props.qList.map(element=>element['id']).includes(props.rid)? 'Delete':'Cancel');\n\n    const handleDelete =()=>{\n        if (delText=='Delete'||delText=='Cancel'){\n            setDelText(delText + ' (Press Again)')\n        }\n        else{\n            var l =[]\n            props.qList.forEach(element=>{\n                if(element['id']!=props.rid){\n                    l.push(element);\n                }\n            });\n\n            props.setQList(l);\n            props.setScreen(0);\n        }\n    }\n\n    const addGoalHandler = goalTitle=>{\n        const rid =props.rid;\n        var rid_contained=false;\n        var l =[]\n        props.qList.forEach(element=>{\n            if(element['id']!=rid){\n                l.push(element);\n            }\n        });\n        props.setQList([...l, {id: rid, value: goalTitle}]);\n        const details = {'name': userInput,\n                        'focus':{\n                            'prompt':focusP,\n                            'answer':focus\n                        },\n                        'gather':{\n                            'prompt':gatherP,\n                            'answer':gather\n                        },\n                        'brainstorm':{\n                            'prompt':brainstormP,\n                            'answer':brainstorm\n                        },\n                        'evaluate':{\n                            'prompt':evaluateP,\n                            'answer':evaluate\n                        },\n                        'plan':{\n                            'prompt':planP,\n                            'answer':plan\n                        },\n                        'reflect':{\n                            'prompt':reflectP,\n                            'answer':reflect\n                        }};\n        //console.log(details);\n        db.ref(firebase.auth().currentUser.uid+'/detail-list/'+rid).set(details);\n        var toPage=0;\n        if(focusP!=props.qInfo['focus']['prompt']||gatherP!=props.qInfo['gather']['prompt']||brainstormP!=props.qInfo['brainstorm']['prompt']||\n            evaluateP!=props.qInfo['evaluate']['prompt']||planP!=props.qInfo['plan']['prompt']||reflectP!=props.qInfo['reflect']['prompt']  ){\n                props.setQInfo(details);\n                toPage=6;\n            }\n        //console.log(details);\n        props.setScreen(toPage);\n      };\n\n      const handleSwipeButton=()=>{\n        const details = {'name': userInput,\n        'focus':{\n            'prompt':focusP,\n            'answer':focus\n        },\n        'gather':{\n            'prompt':gatherP,\n            'answer':gather\n        },\n        'brainstorm':{\n            'prompt':brainstormP,\n            'answer':brainstorm\n        },\n        'evaluate':{\n            'prompt':evaluateP,\n            'answer':evaluate\n        },\n        'plan':{\n            'prompt':planP,\n            'answer':plan\n        },\n        'reflect':{\n            'prompt':reflectP,\n            'answer':reflect\n        }};\n        props.setQInfo(details);\n          props.setScreen(8);\n      }\n\n    const regInput=<React.Fragment>\n    <GoalInput input = {focus} setInput={setFocus} text={props.qInfo['focus']['prompt']}color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }useCustom={setUseCustom}/>\n    <GoalInput input = {gather} setInput={setGather} text={props.qInfo['gather']['prompt']} color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {brainstorm} setInput={setBrainstorm} text={props.qInfo['brainstorm']['prompt']} color ='orange' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {evaluate} setInput={setEvaluate} color ='green' text={props.qInfo['evaluate']['prompt']} header='Evaluate' question = {props.qInfo['evaluate']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {plan} setInput={setPlan} color ='#ffdb58' text={props.qInfo['plan']['prompt']} header='Plan and Act' question = {props.qInfo['plan']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {reflect} setInput={setReflect} text={props.qInfo['reflect']['prompt']}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}useCustom={setUseCustom}/></React.Fragment>;\n\nconst custInput=<React.Fragment>\n<CustomGoalInput color='#00FFFF' input = {focus} setInput={setFocus}  header='Select A Focus' prompt={focusP} setPrompt={setFocusP}/>\n<CustomGoalInput color ='#AF69EF' input = {gather} setInput={setGather}  header='Gather Information' prompt={gatherP} setPrompt={setGatherP}/>\n<CustomGoalInput color ='yellow' input = {brainstorm} setInput={setBrainstorm}  header='Brainstorm' prompt={brainstormP} setPrompt={setBrainstormP}/>\n<CustomGoalInput color ='green' input = {evaluate} setInput={setEvaluate}  header='Evaluate' prompt={evaluateP} setPrompt={setEvaluateP}/>\n<CustomGoalInput color ='ffdb58' input = {plan} setInput={setPlan}  header='Plan and Act' prompt={planP} setPrompt={setPlanP}/>\n<CustomGoalInput color ='purple' input = {reflect} setInput={setReflect}  header='Reflect' prompt={reflectP} setPrompt={setReflectP}/>\n</React.Fragment>;\n    var input=useCustom? custInput:regInput;\n\n    return(\n        <ScrollView>\n            <View style={{width:'90%', flexDirection:'row-reverse'}}>\n                <TouchableOpacity onPress={handleSwipeButton}>\n                    <Image style={{height:50,width:50, margin:16}}\n                        source={require('../assets/swipe_btn.png')}\n                        resizeMode={\"stretch\"}/>\n                </TouchableOpacity>\n            </View>\n                \n            <View style={{\n                padding:30,\n                flex:1,\n                flexDirection :'column',\n                alignItems: 'center'\n            }}>\n                \n                <Text style={{fontWeight:'bold'}} >Name this Question Set</Text>\n                <TextInput value = {userInput} placeholder = 'Name' style={{\n            width: '80%', \n            borderColor:'black', \n            borderWidth:1, \n            padding:10,\n            marginBottom: 10\n        }} onChangeText ={text=>setUserInput(text)}/>\n                {input}\n                <View style={{flexDirection:'row'}}>\n                    <View style={{marginRight:10}}>\n                        <Button style={{width:'20%'}} title='DONE' onPress = {addGoalHandler.bind(this, userInput)}/>\n                    </View>\n                    <Button style={{width:'20%'}} title={delText} onPress = {handleDelete}/>\n                </View>\n            </View>\n        </ScrollView>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30,\n        alignItems:'center'\n      },\n      button:{\n        width:'20%' \n      },\n      input:{\n        width: '80%', \n        borderColor:'black', \n        borderWidth:1, \n        padding:10,\n        marginBottom: 10\n      }\n});\n\nexport default AddSet;","import React, {useState} from 'react';\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\nimport firebase from 'firebase';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\n\nconst TypeSelect = props =>{\n    props = {...global.props, props};\n    const [academic_open, set_academic_open]= useState(true);\n    const [personal_open, set_personal_open]= useState(false);\n    const science=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n                        'focus':{\n                            'prompt':'What are my questions? Which question is most relevant?',\n                            'answer':''\n                        },\n                        'gather':{\n                            'prompt':'How will I gather information? What is my hypothesis?',\n                            'answer':''\n                        },\n                        'brainstorm':{\n                            'prompt':  'How will I design an experiment? How is this similar to previous experiments?',\n                            'answer':''\n                        },\n                        'evaluate':{\n                            'prompt':'What is the best choice?',\n                            'answer':''\n                        },\n                        'plan':{\n                            'prompt':'What do I do first, second ..? Is this working?',\n                            'answer':''\n                        },\n                        'reflect':{\n                            'prompt':'What did I learn? How do I know?',\n                            'answer':''\n                        }});\n        props.setScreen(1);\n    }\n    const math=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n                        'focus':{\n                            'prompt':'What is the problem asking me to solve?',\n                            'answer':''\n                        },\n                        'gather':{\n                            'prompt':'How do I know? What do I need to know?',\n                            'answer':''\n                        },\n                        'brainstorm':{\n                            'prompt':   'What are the ways I can solve this problem?',\n                            'answer':''\n                        },\n                        'evaluate':{\n                            'prompt': 'What is the best way to solve this problem?',\n                            'answer':''\n                        },\n                        'plan':{\n                            'prompt':  'Can I make a model?',\n                            'answer':''\n                        },\n                        'reflect':{\n                            'prompt':'Did it work? How do I know?',\n                            'answer':''\n                        }});\n        props.setScreen(1);\n    }\n    const reading=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':\"Do I understand what I'm reading? Does what I'm reading make sense?\",\n            'answer':''\n        },\n        'gather':{\n            'prompt':'What do I understand? What do I need to understand?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':   'What strategies could help me understand?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':  'Which is the best choice? Why?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What should I try first? Second?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Is this working? Do I understand now?',\n            'answer':''\n        }});\n  \n        props.setScreen(1);\n    }\n\n    const writing=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'How do I select a topic/focus? What questions do I have about any topic/focus? What are my best questions?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'How will I gather information on some or all of my questions?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':    'How could I organize and present my information?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'What is the best choice? Why?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What do I do first, second ..? Is this working?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'What was surprising about my research? What did I do well and how can I improve?',\n            'answer':''\n        }});\n\n        props.setScreen(1);\n    }\n\n    const social=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'What happened?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'Who? What? Where? When? Why? How?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':    'What am I willing to do? What have a I tried? What might work?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'What are the pros and cons? What is the best choice? ',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What are my next steps? How can I do it?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again to solve this?',\n            'answer':''\n        }});\n        props.setScreen(1);\n    }\n\n    const emotional=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'What am I feeling? How do I/they feel? What is she/he feeling?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'What is causing this feeling?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':     'What strategies can I use to make myself feel better?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'Has this helped me in the past? How did it help? How did it help? How did I feel after?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again? ',\n            'answer':''\n        }});\n        props.setScreen(1);\n    }\n\n    const academicAndSocial=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'What is the problem? What is the question? What is the task?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'What do I know? What do I need to know? What is similar and what is different?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':     'How can I solve this problem? What are possible solutions? What can I do?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'What is the best way to solve this problem? Does this make sense?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again?',\n            'answer':''\n        }});\n        props.setScreen(1);\n    }\n    const custom=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'',\n            'answer':''\n        },\n        'gather':{\n            'prompt': '',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':     '',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   '',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  '',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': '',\n            'answer':''\n        }});\n        props.setScreen(7);\n    }\n\n    var academic = \n    <React.Fragment>\n    <View style={styles.row}>\n    <TouchableOpacity onPress={science}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_science.png')}\n    resizeMode={\"stretch\"}\n    /></TouchableOpacity>\n    <TouchableOpacity onPress={math}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_math.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n</View>\n<View style={styles.row}>\n    <TouchableOpacity onPress={reading}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_reading.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n    <TouchableOpacity onPress={writing}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_writing.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n</View></React.Fragment>;\n     var personal = \n    <React.Fragment>\n    <View style={styles.row}>\n    <View style={styles.extraSpacing}>\n    <TouchableOpacity onPress={social}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_social.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n    </View>\n   \n</View></React.Fragment>;\n\n    return   (\n\n        <ScrollView>\n            <View style={styles.row}>\n             \n                        <TouchableOpacity onPress={academicAndSocial}>\n                            <Image style={styles.image}\n                            source={require('../assets/academic_social.png')}\n                            resizeMode={\"stretch\"}/>\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={emotional}>\n                        <Image style={styles.image}\n                        source={require('../assets/selfq_emotional.png')}\n                        resizeMode={\"stretch\"}/>\n                        </TouchableOpacity>\n            </View>\n            <View style={styles.row}>\n                <View style={styles.extraSpacing}>\n                    <TouchableOpacity onPress={custom}>\n                        <Image style={styles.image}\n                        source={require('../assets/selfq_custom.png')}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                </View>\n             \n            </View>\n            <View style={styles.row}>\n                <TouchableOpacity style={styles.dropdown} onPress= {set_academic_open.bind(this,!academic_open)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(academic_open?'v':'>') +'  Academic SELf-Question sets by Subject Area'}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            {academic_open && academic}\n\n            <View style={styles.row}>\n                <TouchableOpacity style={styles.dropdown} onPress= {set_personal_open.bind(this,!personal_open)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(personal_open?'v':'>') +'  Personal'}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            {personal_open && personal}\n\n        </ScrollView>\n    );\n}\n\n/*\n\n*/\nconst {width} = Dimensions.get(\"screen\");\nconst image_width =Math.min( width * 0.45,250);\nconst styles = StyleSheet.create({\n    image:{\n        height:image_width,\n        width:image_width,\n        margin:15\n    },\n    dropdown:{\n        width:2*image_width +30\n    },\n    row:{\n        flexDirection:'row',\n        justifyContent:'center'\n    },\n    listItem:{ \n        padding:10,\n        marginVertical:10,\n        backgroundColor: '#ccc',\n        borderColor:'black',\n        borderWidth:1\n      },\n      extraSpacing:{\n          marginRight:image_width+15\n        }\n  });\n  \n\nexport default TypeSelect;","import React, {useState} from 'react';\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\nimport firebase from 'firebase';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\nconst Settings= props =>{\n\n    const handleSignOut = ()=>{\n        firebase.auth().signOut();\n        props.setScreen(2);\n    }\n    \n    return   (\n    <View style={styles.container}>\n        <View style={{ alignItems:'center', justifyContent:'center'}}>\n            <Button  title=\"  Log Out  \" onPress ={handleSignOut}/>\n        </View>\n    </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1, \n      alignItems: 'center',\n    justifyContent:'center'}\n   \n  });\n  \n\nexport default Settings;","import React, {useState} from 'react';\nimport {View, Text, Button, StyleSheet,FlatList, TouchableOpacity, TextInput} from 'react-native';\n\nimport GoalItem from '../components/GoalItem';\nimport firebase from 'firebase';\n//import Card from '../components/Card'\n\nconst AddCustomPrompts = props =>{\n    const handleEdit=()=>{\n        props.setScreen(1);\n    }\n\n    const[yesSave, setYesSave]=useState(false);\n    const[name, setName]=useState('');\n\n    const handleSetSave=()=>{\n        setYesSave(true);\n    }\n   \n    const handleNo=()=>{\n        props.setScreen(0);\n    }\n    const handleCancel=()=>{\n        setYesSave(false);\n    }\n    const handleSave=()=>{\n        const db= firebase.database();\n        var details=props.qInfo;\n        details['name']='';\n        details['focus']['answer']='';\n        details['gather']['answer']='';\n        details['brainstorm']['answer']='';\n        details['plan']['answer']='';\n        details['reflect']['answer']='';\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+name).set(details);\n        props.setScreen(0);\n    }\n    return   (\n    <View style={styles.screen}>\n        <Text style={{color: '#05375a',fontSize: 30,fontWeight: 'bold',padding:15}}>Set Saved!</Text>\n        <Text style={{color: '#05375a',fontSize: 30}}>Also save custom prompt list for reuse?</Text>\n        \n        {!yesSave&&<View style={{flexDirection:'row'}}>\n            <View style={{padding:15}}>\n                <Button  title=' Yes ' onPress={handleSetSave}/>\n            </View>\n            <View style={{padding:15}}>\n                <Button  title=' No ' onPress={handleNo}/>\n            </View>\n        </View>}\n        {yesSave&&<View  style={styles.screen}>\n            <TextInput style={{width: '100%', borderColor:'black', borderWidth:1, padding:10,marginBottom: 10}}placeholder='Name this prompt set' value={name} onChangeText={setName}/>\n            <View style={{flexDirection:'row'}}>\n                <View style={{padding:15}}>\n                    <Button  title=' Save ' onPress={handleSave}/>\n                </View>\n                <View style={{padding:15}}>\n                    <Button  title=' Cancel ' onPress={handleCancel}/>\n                </View>\n            </View>\n        </View>}\n\n        <Text style={{fontWeight:'bold', color :'red'}}>Select A Focus</Text>\n        <TouchableOpacity onPress={handleEdit}>\n            <Text>{props.qInfo['focus']['prompt']}</Text>\n        </TouchableOpacity>\n\n        <Text style={{fontWeight:'bold', color :'orange'}}>Gather Information</Text>\n        <TouchableOpacity onPress={handleEdit}>\n            <Text>{props.qInfo['gather']['prompt']}</Text>\n        </TouchableOpacity>\n\n        <Text style={{fontWeight:'bold', color :'yellow'}}>Brainstorm</Text>\n        <TouchableOpacity onPress={handleEdit}>\n            <Text>{props.qInfo['brainstorm']['prompt']}</Text>\n        </TouchableOpacity>\n\n        <Text style={{fontWeight:'bold', color :'green'}}>Evaluate</Text>\n        <TouchableOpacity onPress={handleEdit}>\n            <Text>{props.qInfo['evaluate']['prompt']}</Text>\n        </TouchableOpacity>\n\n        <Text style={{fontWeight:'bold', color :'blue'}}>Plan and Act</Text>\n        <TouchableOpacity onPress={handleEdit}>\n            <Text>{props.qInfo['plan']['prompt']}</Text>\n        </TouchableOpacity>\n\n        <Text style={{fontWeight:'bold', color :'purple'}}>Reflect</Text>\n        <TouchableOpacity onPress={handleEdit}>\n            <Text>{props.qInfo['reflect']['prompt']}</Text>\n        </TouchableOpacity>\n\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30,\n        alignItems:'center'\n      }\n});\n\nexport default AddCustomPrompts;","import React, {useState} from 'react';\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\n\nimport GoalItem from '../components/GoalItem';\nimport firebase from 'firebase';\n//import Card from '../components/Card'\n\n//var once = 0;\nconst SelectCustom = props =>{\n    const [nameList, setNameList]=useState([]);\n    const db = firebase.database();\n    //if (firebase.auth().currentUser.uid!=once){\n      db.ref(firebase.auth().currentUser.uid+'/custom-prompts').once(\"value\", function(snapshot) {\n\n        //console.log(snapshot.val())\n        if(snapshot.val()!=null){\n          var l =[];\n            for (var n in snapshot.val()){\n               l.push({'id':n,'value':n});\n           }\n          setNameList(l);\n        }\n      }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n      });\n     // once=firebase.auth().currentUser.uid;\n  // }\n\n\n    const removeGoalHandler = goalId=>{\n        // props.setQList(currentGoals=>{\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\n        // });\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+goalId).once(\"value\", function(snapshot) {\n          const data=snapshot.val();\n          console.log(goalId)\n          props.setQInfo(data);\n          props.setScreen(1);\n        }, function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        });\n      }; \n    return   (\n    <View style={styles.screen}>\n      <Button title  = 'New Custom Set' onPress={()=>props.setScreen(1)}/>\n      <FlatList data = {nameList}\n      keyExtractor={(item, index)=> item.id}\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30\n      }\n});\n\nexport default SelectCustom;","import React, {useState} from 'react';\nimport {Image,View, Platform,Dimensions, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\n\nimport GoalInput from '../components/GoalInput';\nimport CustomGoalInput from '../components/CustomGoalInput';\nimport firebase from 'firebase'\n\nconst SwipeAddSet = props =>{\n    const db = firebase.database();\n    const [currQ, setCurrQ]= useState(0);\n    const [useCustom, setUseCustom]= useState(false);\n\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\n    console.log(userInput);\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\n\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\n    const addGoalHandler = goalTitle=>{\n        const rid =props.rid;\n        //console.log(rid);\n        var l =[];\n        props.qList.forEach(element=>{\n            if(element['id']!=rid){\n                l.push(element);\n            }\n        });\n        console.log([...l, {id: rid, value: userInput}]);\n        props.setQList([...l, {id: rid, value: userInput}]);\n        const details = {'name': userInput,\n                        'focus':{\n                            'prompt':focusP,\n                            'answer':focus\n                        },\n                        'gather':{\n                            'prompt':gatherP,\n                            'answer':gather\n                        },\n                        'brainstorm':{\n                            'prompt':brainstormP,\n                            'answer':brainstorm\n                        },\n                        'evaluate':{\n                            'prompt':evaluateP,\n                            'answer':evaluate\n                        },\n                        'plan':{\n                            'prompt':planP,\n                            'answer':plan\n                        },\n                        'reflect':{\n                            'prompt':reflectP,\n                            'answer':reflect\n                        }};\n        \n        db.ref(firebase.auth().currentUser.uid+'/detail-list/'+rid).set(details);\n        var toPage=0;\n        if(focusP!=props.qInfo['focus']['prompt']||gatherP!=props.qInfo['gather']['prompt']||brainstormP!=props.qInfo['brainstorm']['prompt']||\n            evaluateP!=props.qInfo['evaluate']['prompt']||planP!=props.qInfo['plan']['prompt']||reflectP!=props.qInfo['reflect']['prompt']  ){\n                props.setQInfo(details);\n                toPage=6;\n            }\n        //console.log(details);\n        props.setScreen(toPage);\n      };\n      const handleSwipeButton=()=>{\n        const details = {'name': userInput,\n        'focus':{\n            'prompt':focusP,\n            'answer':focus\n        },\n        'gather':{\n            'prompt':gatherP,\n            'answer':gather\n        },\n        'brainstorm':{\n            'prompt':brainstormP,\n            'answer':brainstorm\n        },\n        'evaluate':{\n            'prompt':evaluateP,\n            'answer':evaluate\n        },\n        'plan':{\n            'prompt':planP,\n            'answer':plan\n        },\n        'reflect':{\n            'prompt':reflectP,\n            'answer':reflect\n        }};\n        props.setQInfo(details);\n        props.setScreen(1);\n    }\n\n    const namePage=<React.Fragment>\n      <View style={{flex:1}}>\n      <View style={{width:'90%', flexDirection:'row-reverse'}}>\n                <TouchableOpacity onPress={handleSwipeButton}>\n                    <Image style={{height:50,width:50, margin:16}}\n                        source={require('../assets/row_btn.png')}\n                        resizeMode={\"stretch\"}/>\n                </TouchableOpacity>\n            </View>\n          <View style={{\n                  flex:1,\n                  flexDirection :'column',\n                  alignItems: 'center',\n                  padding:20\n              }}>\n                  <TextInput value={userInput} onChangeText={setUserInput} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Name this question set'></TextInput>\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                          <Button onPress={(userInput)=>addGoalHandler(userInput)} title={' DONE '}/>\n                          \n                  </View>\n                  <View style={{height:'70%',flexDirection:'column-reverse'}}>\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                                <Image \n                                source={require('../assets/left_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                                <Image \n                                source={require('../assets/right_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            \n                    </View>\n                    </View>\n          </View>\n      </View>\n  </React.Fragment>;\n\n    const focusPage=<React.Fragment>\n        <View style={{flex:1}}>\n            <View style={{\n                    flex:1,\n                    flexDirection :'column',\n                    alignItems: 'center',\n                    backgroundColor:'#00FFFF',\n                    padding:20\n                }}>\n                    <TextInput value={focusP} onChangeText={setFocusP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a focus question'></TextInput>\n                    <TextInput value={focus} onChangeText={setFocus} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the focus question'></TextInput>\n                    <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                                <Image \n                                source={require('../assets/left_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                                <Image \n                                source={require('../assets/right_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            \n                    </View>\n            </View>\n        </View>\n    </React.Fragment>;\n\nconst gatherPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'#AF69EF',\n            padding:20\n        }}>\n            <TextInput value={gatherP} onChangeText={setGatherP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a gathering information question'></TextInput>\n            <TextInput value={gather} onChangeText={setGather} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the gathering information question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst brainstormPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'yellow',\n            padding:20\n        }}>\n            <TextInput value={brainstormP} onChangeText={setBrainstormP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a brainstorming question'></TextInput>\n            <TextInput value={brainstorm} onChangeText={setBrainstorm} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the brainstorming question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst evaluatePage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'green',\n            padding:20\n        }}>\n            <TextInput value={evaluateP} onChangeText={setEvaluateP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask an evaluation question'></TextInput>\n            <TextInput value={evaluate} onChangeText={setEvaluate} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the evaluation question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst planPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'#ffdb58',\n            padding:20\n        }}>\n            <TextInput value={planP} onChangeText={setPlanP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a plan and action question'></TextInput>\n            <TextInput value={plan} onChangeText={setPlan} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the plan and action question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst reflectPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'purple',\n            padding:20\n        }}>\n            <TextInput value={reflectP} onChangeText={setReflectP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a reflection question'></TextInput>\n            <TextInput value={reflect} onChangeText={setReflect} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the reflection question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\n\n\n    return(\n        <View style={{flex:1}}>\n            {currQ==0&&namePage}\n            {currQ==1&&focusPage}\n            {currQ==2&&gatherPage}\n            {currQ==3&&brainstormPage}\n            {currQ==4&&evaluatePage}\n            {currQ==5&&planPage}\n            {currQ==6&&reflectPage}\n        </View>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30,\n        alignItems:'center'\n      },\n      button:{\n        width:'20%' \n      },\n      input:{\n        width: '80%', \n        borderColor:'black', \n        borderWidth:1, \n        padding:10,\n        marginBottom: 10\n      }\n});\n\nexport default SwipeAddSet;","import React, {useState} from 'react';\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image} from 'react-native';\nimport firebase from 'firebase';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\n\nconst SignUp = props =>{\n    console.log('HERE SIR');\n    const [email, setEmail]= useState('');\n    const [password, setPassword]= useState('');\n    const [error, setError]=useState('');\n    const handleSignUp = ()=>{\n        setError('Loading...');\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n        .then(()=>{\n            props.setScreen(0);\n        })\n        .catch((error)=>{\n            setError(error+' Please try again.');\n        });\n     \n    }\n    const handleBack = ()=>{\n        props.setScreen(2);\n     \n    }\n    return   (\n    <View style={styles.container}>\n        <View style ={styles.header}>\n            <Image \n            source={require('../assets/self-q.png')}\n            style={styles.logo}\n            resizeMode={\"stretch\"}/>\n        </View>\n        <View style ={styles.footer}>\n            <Text style={styles.title}>Welcome to SELf-Q!</Text>\n            <Text style = {styles.text}>Register With A New Account</Text>\n            <TextInput placeholder={\"Email\"} style ={styles.input} onChangeText={setEmail}/>\n            <TextInput secureTextEntry={true} placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\n            <Text style={styles.text}>{error}</Text>\n          \n            <View style={styles.centerRow}>\n                <View style={styles.button}>\n                    <Button style={styles.button} title=\"Sign Up\" onPress ={()=>handleSignUp()}/>\n                </View>\n                <View style={styles.button}>\n                    <Button style={styles.button} title=\"Back\" onPress ={()=>handleBack()}/>\n                </View>\n            </View>\n        </View>\n    </View>\n    );\n}\n\nconst {height,width} = Dimensions.get(\"screen\");\nconst height_logo = height * 0.14;\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 2, \n      backgroundColor: '#009387'\n    },\n    header: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    footer: {\n        flex: 2,\n        backgroundColor: '#fff',\n        borderTopLeftRadius: 30,\n        borderTopRightRadius: 30,\n        paddingVertical: 50,\n        paddingHorizontal: 30\n    },\n    logo: {\n        width: height_logo,\n        height: height_logo\n    },\n    title: {\n        color: '#05375a',\n        fontSize: 30,\n        fontWeight: 'bold'\n    },\n    text: {\n        color: 'grey',\n        marginTop:5\n    },\n    clickableText: {\n        color: 'blue',\n        fontWeight: 'bold',\n        marginTop:10\n    },\n    smallHeader: {\n        color: '#05375a',\n        fontWeight: 'bold',\n        marginTop:10\n    },\n    button: {\n        width:\"20%\",\n        marginTop: 30\n    },\n    signIn: {\n        width: 150,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 50,\n        flexDirection: 'row'\n    },\n    textSign: {\n        color: 'white',\n        fontWeight: 'bold'\n    },\n    input:{\n        width: '90%', \n         borderColor:'black', \n         borderWidth:1, \n         padding:5,\n        margin: 10\n       },\n    button:{\n        padding:20, \n        width:'40%'\n    },\n    centerRow:{\n        flexDirection:'row',\n        justifyContent:'center'\n    }\n  });\n  \n\nexport default SignUp;","import React, {useState} from 'react';\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\nimport firebase from 'firebase';\nimport GoalItem from '../components/GoalItem';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\n\nconst ClassroomMain = props =>{\n    const db = firebase.database();\n    const clickClassHandler=(name)=>{\n        props.setClassName(name);\n        db.ref('/classes/'+name).once(\"value\", function(snapshot) {\n            var data=snapshot.val();\n            //console.log(data)\n            props.setClassDetails(data);\n            props.setScreen(12);\n          }, function (errorObject) {\n            console.log(\"The read failed: \" + errorObject.code);\n          });\n        }; \n       \n   \n     \n\n    return   (\n    <View style={{padding:20}}>\n            <View style={styles.row}>\n                <View style={{margin:15}}>\n                    <Button title=' Join a Class ' onPress={()=>props.setScreen(11)}/>  \n                </View> \n                <View style={{margin:15}}>\n                    <Button onPress={()=>props.setScreen(10)} title='Create a Class'/>\n                </View>\n            </View>\n            <FlatList style={{flex:1}}data = {props.classes}\n            keyExtractor={(item, index)=> item.id}\n            renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={id=>clickClassHandler(id)}title ={itemData.item.value}/>}/>\n\n    </View>\n    );\n}\n\nconst {width} = Dimensions.get(\"screen\");\nconst image_width =Math.min( width * 0.45,250);\nconst styles = StyleSheet.create({\n    \n    row:{\n        flexDirection:'row',\n        justifyContent:'center',\n        padding:15\n    },\n    listItem:{ \n        padding:10,\n        marginVertical:10,\n        backgroundColor: '#ccc',\n        borderColor:'black',\n        borderWidth:1\n      },\n      extraSpacing:{\n          marginRight:image_width+15\n        }\n  });\n  \n\nexport default ClassroomMain;","import React, {useState} from 'react';\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\nimport firebase from 'firebase';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\nconst ClassroomCreate= props =>{\n    const [name, setName]= useState('');\n    const [password, setPassword]= useState('');\n    const [error, setError]=useState('');\n\n    const db= firebase.database();\n   \n    const handleCreate = ()=>{\n        setError('Loading...');\n        //console.log('HERERE mememememe');\n        db.ref('/classes/'+name.toLowerCase()).once(\"value\", function(snapshot) {\n            const data=snapshot.val();\n            if(data==null){\n                console.log(props.classes);\n                props.setClasses([...props.classes, {'id':name.toLowerCase(),'value':name.toLowerCase()}]);\n                db.ref('/classes/'+name.toLowerCase()+'/password').set(password);\n                db.ref('/classes/'+name.toLowerCase()+'/members').set([firebase.auth().currentUser.uid]);\n                db.ref('/classes/'+name.toLowerCase()+'/owner').set(firebase.auth().currentUser.uid);\n                props.setClassName(name.toLowerCase());\n                \n                props.setClassDetails({'password':password,\n                                    'members':[firebase.auth().currentUser.uid],\n                                    'owner':firebase.auth().currentUser.uid\n\n                })\n                props.setScreen(12);\n            }\n            else{\n                setError('Class name already exists, please choose another. ')\n            }\n          }, function (errorObject) {\n            setError(\"The read failed: \" + errorObject.code+' Please try again');\n          });\n        }; \n     \n    \n\n    return   (\n    <View style={styles.container}>\n        <View >\n            <Text style={styles.title}>Create a Class</Text>\n            <TextInput placeholder={\"Class Name\"} style ={styles.input} onChangeText={setName}/>\n            <TextInput placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\n            <Text style={styles.text}>{error}</Text>\n            <Button style={{width:'25%'}} title=\"Create\" onPress ={handleCreate}/>\n        </View>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 2, \n      padding:20\n    },\n    title: {\n        color: '#05375a',\n        fontSize: 30,\n        fontWeight: 'bold'\n    },\n    text: {\n        color: 'grey',\n        marginTop:5\n    },\n    smallHeader: {\n        color: '#05375a',\n        fontWeight: 'bold',\n        marginTop:10\n    },\n    button: {\n        width:\"20%\",\n        marginTop: 30\n    },\n    signIn: {\n        width: 150,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 50,\n        flexDirection: 'row'\n    },\n    textSign: {\n        color: 'white',\n        fontWeight: 'bold'\n    },\n    input:{\n        width: '90%', \n         borderColor:'black', \n         borderWidth:1, \n         padding:5,\n        margin: 10\n       }\n  });\n  \n\nexport default ClassroomCreate;","import React, {useState} from 'react';\nimport {View, Text, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, TouchableOpacity} from 'react-native';\nimport firebase from 'firebase';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\nconst ClassroomJoin= props =>{\n    const [name, setName]= useState('');\n    const [password, setPassword]= useState('');\n    const [error, setError]=useState('');\n    const [realName, setRealName]=useState('');\n\n    const db= firebase.database();\n   \n    const handleJoin = ()=>{\n        setError('Loading...');\n        db.ref('/classes/'+name.toLowerCase()).once(\"value\", function(snapshot) {\n            const data=snapshot.val();\n            if(data==null){\n                setError('The class are trying to join does exist. Check the spelling and try again.')\n            }\n            else{\n                if(data['members'].includes(firebase.auth().currentUser.uid)){\n                    setError('You are already in this class.');\n                }\n                else{\n                    if(password!=data['password']){\n                        setError('Incorrect Password.')\n                    }\n                    else{\n                        var names=  data['names']!=null? data['names']:[]; \n                        db.ref('/classes/'+name.toLowerCase()+'/members').set([...data['members'], firebase.auth().currentUser.uid ]);\n                        db.ref('/classes/'+name.toLowerCase()+'/names').set([...names, {'id':firebase.auth().currentUser.uid,'value': realName }]);\n                        //console.log(props.classes);\n                        //console.log({'id':name.toLowerCase,'value':name.toLowerCase});\n                        props.setClasses([...props.classes, {'id':name.toLowerCase(),'value':name.toLowerCase()}]);\n                        //onsole.log(props.classes);\n                        props.setScreen(9);\n                    }\n                }\n            }\n          }, function (errorObject) {\n            setError(\"The read failed: \" + errorObject.code+' Please try again.');\n          });\n        }; \n     \n    \n\n    return   (\n    <View style={styles.container}>\n        <View >\n            <Text style={styles.title}>Join a Class</Text>\n            <TextInput placeholder={\"Enter your first name only\"} style ={styles.input} onChangeText={setRealName}/>\n            <TextInput placeholder={\"Class Name\"} style ={styles.input} onChangeText={setName}/>\n            <TextInput placeholder={\"Password\"} style ={styles.input} onChangeText={setPassword}/>\n            <Text style={styles.text}>{error}</Text>\n            <Button style={{width:'25%'}} title=\"Join\" onPress ={handleJoin}/>\n        </View>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 2, \n      padding:20\n    },\n    title: {\n        color: '#05375a',\n        fontSize: 30,\n        fontWeight: 'bold'\n    },\n    text: {\n        color: 'grey',\n        marginTop:5\n    },\n    smallHeader: {\n        color: '#05375a',\n        fontWeight: 'bold',\n        marginTop:10\n    },\n    button: {\n        width:\"20%\",\n        marginTop: 30\n    },\n    signIn: {\n        width: 150,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 50,\n        flexDirection: 'row'\n    },\n    textSign: {\n        color: 'white',\n        fontWeight: 'bold'\n    },\n    input:{\n        width: '90%', \n         borderColor:'black', \n         borderWidth:1, \n         padding:5,\n        margin: 10\n       }\n  });\n  \n\nexport default ClassroomJoin;","import React, {useState} from 'react';\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\nimport firebase from 'firebase';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\n\nconst AssignTypeSelect = props =>{\n    const [academic_open, set_academic_open]= useState(true);\n    const [personal_open, set_personal_open]= useState(false);\n    const science=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n                        'focus':{\n                            'prompt':'What are my questions? Which question is most relevant?',\n                            'answer':''\n                        },\n                        'gather':{\n                            'prompt':'How will I gather information? What is my hypothesis?',\n                            'answer':''\n                        },\n                        'brainstorm':{\n                            'prompt':  'How will I design an experiment? How is this similar to previous experiments?',\n                            'answer':''\n                        },\n                        'evaluate':{\n                            'prompt':'What is the best choice?',\n                            'answer':''\n                        },\n                        'plan':{\n                            'prompt':'What do I do first, second ..? Is this working?',\n                            'answer':''\n                        },\n                        'reflect':{\n                            'prompt':'What did I learn? How do I know?',\n                            'answer':''\n                        }});\n        props.setScreen(15);\n    }\n    const math=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n                        'focus':{\n                            'prompt':'What is the problem asking me to solve?',\n                            'answer':''\n                        },\n                        'gather':{\n                            'prompt':'How do I know? What do I need to know?',\n                            'answer':''\n                        },\n                        'brainstorm':{\n                            'prompt':   'What are the ways I can solve this problem?',\n                            'answer':''\n                        },\n                        'evaluate':{\n                            'prompt': 'What is the best way to solve this problem?',\n                            'answer':''\n                        },\n                        'plan':{\n                            'prompt':  'Can I make a model?',\n                            'answer':''\n                        },\n                        'reflect':{\n                            'prompt':'Did it work? How do I know?',\n                            'answer':''\n                        }});\n        props.setScreen(15);\n    }\n    const reading=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':\"Do I understand what I'm reading? Does what I'm reading make sense?\",\n            'answer':''\n        },\n        'gather':{\n            'prompt':'What do I understand? What do I need to understand?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':   'What strategies could help me understand?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':  'Which is the best choice? Why?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What should I try first? Second?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Is this working? Do I understand now?',\n            'answer':''\n        }});\n  \n        props.setScreen(15);\n    }\n\n    const writing=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'How do I select a topic/focus? What questions do I have about any topic/focus? What are my best questions?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'How will I gather information on some or all of my questions?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':    'How could I organize and present my information?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'What is the best choice? Why?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What do I do first, second ..? Is this working?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'What was surprising about my research? What did I do well and how can I improve?',\n            'answer':''\n        }});\n\n        props.setScreen(15);\n    }\n\n    const social=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'What happened?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'Who? What? Where? When? Why? How?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':    'What am I willing to do? What have a I tried? What might work?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'What are the pros and cons? What is the best choice? ',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What are my next steps? How can I do it?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again to solve this?',\n            'answer':''\n        }});\n        props.setScreen(15);\n    }\n\n    const emotional=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'What am I feeling? How do I/they feel? What is she/he feeling?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'What is causing this feeling?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':     'What strategies can I use to make myself feel better?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'Has this helped me in the past? How did it help? How did it help? How did I feel after?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again? ',\n            'answer':''\n        }});\n        props.setScreen(15);\n    }\n    const academicAndSocial=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'What is the problem? What is the question? What is the task?',\n            'answer':''\n        },\n        'gather':{\n            'prompt': 'What do I know? What do I need to know? What is similar and what is different?',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':     'How can I solve this problem? What are possible solutions? What can I do?',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   'What is the best way to solve this problem? Does this make sense?',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  'What do I do first, second, and so on? Does this work? Is this working?',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': 'Did it work? How do I know? Do I need to go back and try again?',\n            'answer':''\n        }});\n        props.setScreen(15);\n    }\n    const custom=()=>{\n        props.setRid(Math.random().toString().substring(2));\n        props.setQInfo({'name':'',\n        'focus':{\n            'prompt':'',\n            'answer':''\n        },\n        'gather':{\n            'prompt': '',\n            'answer':''\n        },\n        'brainstorm':{\n            'prompt':     '',\n            'answer':''\n        },\n        'evaluate':{\n            'prompt':   '',\n            'answer':''\n        },\n        'plan':{\n            'prompt':  '',\n            'answer':''\n        },\n        'reflect':{\n            'prompt': '',\n            'answer':''\n        }});\n        props.setScreen(19);\n    }\n\n    var academic = \n    <React.Fragment>\n    <View style={styles.row}>\n    <TouchableOpacity onPress={science}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_science.png')}\n    resizeMode={\"stretch\"}\n    /></TouchableOpacity>\n    <TouchableOpacity onPress={math}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_math.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n</View>\n<View style={styles.row}>\n    <TouchableOpacity onPress={reading}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_reading.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n    <TouchableOpacity onPress={writing}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_writing.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n</View></React.Fragment>;\n     var personal = \n    <React.Fragment>\n    <View style={styles.row}>\n    <View style={styles.extraSpacing}>\n    <TouchableOpacity onPress={social}>\n    <Image style={styles.image}\n    source={require('../assets/selfq_social.png')}\n    resizeMode={\"stretch\"}/>\n    </TouchableOpacity>\n    </View>\n   \n</View></React.Fragment>;\n\n    return   (\n\n        <ScrollView>\n            <View style={styles.row}>\n             \n                        <TouchableOpacity onPress={academicAndSocial}>\n                            <Image style={styles.image}\n                            source={require('../assets/academic_social.png')}\n                            resizeMode={\"stretch\"}/>\n                        </TouchableOpacity>\n                        <TouchableOpacity onPress={emotional}>\n                        <Image style={styles.image}\n                        source={require('../assets/selfq_emotional.png')}\n                        resizeMode={\"stretch\"}/>\n                        </TouchableOpacity>\n            </View>\n            <View style={styles.row}>\n                <View style={styles.extraSpacing}>\n                    <TouchableOpacity onPress={custom}>\n                        <Image style={styles.image}\n                        source={require('../assets/selfq_custom.png')}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                </View>\n             \n            </View>\n            <View style={styles.row}>\n                <TouchableOpacity style={styles.dropdown} onPress= {set_academic_open.bind(this,!academic_open)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(academic_open?'v':'>') +'  Academic SELf-Question sets by Subject Area'}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            {academic_open && academic}\n\n            <View style={styles.row}>\n                <TouchableOpacity style={styles.dropdown} onPress= {set_personal_open.bind(this,!personal_open)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(personal_open?'v':'>') +'  Personal'}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            {personal_open && personal}\n\n        </ScrollView>\n    \n    );\n}\n\n/*\n\n*/\nconst {width} = Dimensions.get(\"screen\");\nconst image_width =Math.min( width * 0.45,250);\nconst styles = StyleSheet.create({\n    image:{\n        height:image_width,\n        width:image_width,\n        margin:15\n    },\n    dropdown:{\n        width:2*image_width +30\n    },\n    row:{\n        flexDirection:'row',\n        justifyContent:'center'\n    },\n    listItem:{ \n        padding:10,\n        marginVertical:10,\n        backgroundColor: '#ccc',\n        borderColor:'black',\n        borderWidth:1\n      },\n      extraSpacing:{\n          marginRight:image_width+15\n        }\n  });\n  \n\nexport default AssignTypeSelect;","import React, {useState} from 'react';\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity, AsyncStorage} from 'react-native';\n\nimport GoalInput from '../components/GoalInput';\nimport CustomGoalInput from '../components/CustomGoalInput';\nimport firebase from 'firebase'\n\nconst AssignSet = props =>{\n    const db = firebase.database();\n    const [useCustom, setUseCustom]= useState(true);\n\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\n\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\n    const addGoalHandler = goalTitle=>{\n        const rid =props.rid;\n        props.setLink(\"http://localhost:19006/link?assignment=\"+props.rid+\"&class=\"+props.className.replaceAll(\" \", \"%20\"));\n        var rid_contained=false;\n        var l =[];\n        var assignments=[];\n        if(props.classDetails['assignments']!=null && props.classDetails['assignments']['set-list']!=null){\n            assignments=props.classDetails['assignments']['set-list'];\n        }\n        console.log(props.classDetails);\n        console.log(assignments);\n        assignments.forEach(element=>{\n            if(element['id']!=rid){\n                l.push(element);\n            }\n        });\n        db.ref('/classes/'+props.className+'/assignments/set-list').set([...l, {id: rid, value: goalTitle}]);\n        const details = {'name': goalTitle,\n                        'focus':{\n                            'prompt':focusP,\n                            'answer':focus\n                        },\n                        'gather':{\n                            'prompt':gatherP,\n                            'answer':gather\n                        },\n                        'brainstorm':{\n                            'prompt':brainstormP,\n                            'answer':brainstorm\n                        },\n                        'evaluate':{\n                            'prompt':evaluateP,\n                            'answer':evaluate\n                        },\n                        'plan':{\n                            'prompt':planP,\n                            'answer':plan\n                        },\n                        'reflect':{\n                            'prompt':reflectP,\n                            'answer':reflect\n                        }};\n        //console.log(details);\n        db.ref('/classes/'+props.className+'/assignments/details/'+rid).set(details);\n\n        db.ref('/classes/'+props.className).on(\"value\", function(snapshot) {\n            const data=snapshot.val();\n            props.setClassDetails(data);\n\n            var toPage=12;\n            if(focusP!=props.qInfo['focus']['prompt']||gatherP!=props.qInfo['gather']['prompt']||brainstormP!=props.qInfo['brainstorm']['prompt']||\n                evaluateP!=props.qInfo['evaluate']['prompt']||planP!=props.qInfo['plan']['prompt']||reflectP!=props.qInfo['reflect']['prompt']  ){\n                    props.setQInfo(details);\n                    toPage=6;\n                }\n            //console.log(details);\n            props.setScreen(toPage);\n            \n          }, function (errorObject) {\n            setError(\"The read failed: \" + errorObject.code+' Please try again.');\n          });\n\n       \n      };\n\n    \n\n      const regInput=<React.Fragment>\n      <GoalInput input = {focus} setInput={setFocus} text={props.qInfo['focus']['prompt']}color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }useCustom={setUseCustom}/>\n      <GoalInput input = {gather} setInput={setGather} text={props.qInfo['gather']['prompt']} color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}useCustom={setUseCustom}/>\n      <GoalInput input = {brainstorm} setInput={setBrainstorm} text={props.qInfo['brainstorm']['prompt']} color ='orange' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}useCustom={setUseCustom}/>\n      <GoalInput input = {evaluate} setInput={setEvaluate} color ='green' text={props.qInfo['evaluate']['prompt']} header='Evaluate' question = {props.qInfo['evaluate']['prompt']}useCustom={setUseCustom}/>\n      <GoalInput input = {plan} setInput={setPlan} color ='#ffdb58' text={props.qInfo['plan']['prompt']} header='Plan and Act' question = {props.qInfo['plan']['prompt']}useCustom={setUseCustom}/>\n      <GoalInput input = {reflect} setInput={setReflect} text={props.qInfo['reflect']['prompt']}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}useCustom={setUseCustom}/></React.Fragment>;\n  \n  const custInput=<React.Fragment>\n  <CustomGoalInput color='#00FFFF' input = {focus} setInput={setFocus}  header='Select A Focus' prompt={focusP} setPrompt={setFocusP}/>\n  <CustomGoalInput color ='#AF69EF' input = {gather} setInput={setGather}  header='Gather Information' prompt={gatherP} setPrompt={setGatherP}/>\n  <CustomGoalInput color ='yellow' input = {brainstorm} setInput={setBrainstorm}  header='Brainstorm' prompt={brainstormP} setPrompt={setBrainstormP}/>\n  <CustomGoalInput color ='green' input = {evaluate} setInput={setEvaluate}  header='Evaluate' prompt={evaluateP} setPrompt={setEvaluateP}/>\n  <CustomGoalInput color ='ffdb58' input = {plan} setInput={setPlan}  header='Plan and Act' prompt={planP} setPrompt={setPlanP}/>\n  <CustomGoalInput color ='purple' input = {reflect} setInput={setReflect}  header='Reflect' prompt={reflectP} setPrompt={setReflectP}/>\n  </React.Fragment>;\n    var input=useCustom? custInput:regInput;\n\n    return(\n        <ScrollView>\n                \n            <View style={{\n                padding:30,\n                flex:1,\n                flexDirection :'column',\n                alignItems: 'center'\n            }}>\n                \n                <Text style={{fontWeight:'bold'}} >Ask the class a question</Text>\n                <TextInput value = {userInput} placeholder = 'Question' style={{\n            width: '80%', \n            borderColor:'black', \n            borderWidth:1, \n            padding:10,\n            marginBottom: 10\n        }} onChangeText ={text=>setUserInput(text)}/>\n                {input}\n                <Button style={{width:'20%'}} title='ASSIGN' onPress = {addGoalHandler.bind(this, userInput)}/>\n            </View>\n        </ScrollView>\n    );\n    \n}\n\n\nexport default AssignSet;","import React, {useState} from 'react';\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\n\nimport GoalInput from '../components/GoalInput';\nimport CustomGoalInput from '../components/CustomGoalInput';\nimport firebase from 'firebase'\n\nconst AddSetClass = props =>{\n    const db = firebase.database();\n    // console.log('here sir');\n    // console.log(props.qInfo);\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\n\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\n\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\n    const addGoalHandler = goalTitle=>{\n        const rid =props.rid;\n        // var l =[]\n        // props.qList.forEach(element=>{\n        //     if(element['id']!=rid){\n        //         l.push(element);\n        //     }\n        // });\n        // props.setQList([...l, {id: rid, value: goalTitle}]);\n        const details = {'name': goalTitle,\n                        'focus':{\n                            'prompt':focusP,\n                            'answer':focus\n                        },\n                        'gather':{\n                            'prompt':gatherP,\n                            'answer':gather\n                        },\n                        'brainstorm':{\n                            'prompt':brainstormP,\n                            'answer':brainstorm\n                        },\n                        'evaluate':{\n                            'prompt':evaluateP,\n                            'answer':evaluate\n                        },\n                        'plan':{\n                            'prompt':planP,\n                            'answer':plan\n                        },\n                        'reflect':{\n                            'prompt':reflectP,\n                            'answer':reflect\n                        }};\n        //console.log(details);\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+firebase.auth().currentUser.uid).set(details);\n\n        var classDetails = props.classDetails;\n        db.ref('classes/'+props.className).on(\"value\", function(snapshot) {\n            const data=snapshot.val();\n            console.log(data);\n            props.setClassDetails(data);\n            props.setScreen(12);\n            \n          }, function (errorObject) {\n            setError(\"The read failed: \" + errorObject.code+' Please try again.');\n          });\n\n      \n      };\n\n      const handleSwipeButton=()=>{\n        const details = {'name': userInput,\n        'focus':{\n            'prompt':focusP,\n            'answer':focus\n        },\n        'gather':{\n            'prompt':gatherP,\n            'answer':gather\n        },\n        'brainstorm':{\n            'prompt':brainstormP,\n            'answer':brainstorm\n        },\n        'evaluate':{\n            'prompt':evaluateP,\n            'answer':evaluate\n        },\n        'plan':{\n            'prompt':planP,\n            'answer':plan\n        },\n        'reflect':{\n            'prompt':reflectP,\n            'answer':reflect\n        }};\n        props.setQInfo(details);\n          props.setScreen(17);\n      }\n\n    const regInput=<React.Fragment>\n    <GoalInput input = {focus} setInput={setFocus} text={props.qInfo['focus']['prompt']}color ='red' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }useCustom={setUseCustom}/>\n    <GoalInput input = {gather} setInput={setGather} text={props.qInfo['gather']['prompt']} color ='orange' header='Gather Information' question = {props.qInfo['gather']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {brainstorm} setInput={setBrainstorm} text={props.qInfo['brainstorm']['prompt']} color ='yellow' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {evaluate} setInput={setEvaluate} color ='green' text={props.qInfo['evaluate']['prompt']} header='Evaluate' question = {props.qInfo['evaluate']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {plan} setInput={setPlan} color ='blue' text={props.qInfo['plan']['prompt']} header='Plan and Act' question = {props.qInfo['plan']['prompt']}useCustom={setUseCustom}/>\n    <GoalInput input = {reflect} setInput={setReflect} text={props.qInfo['reflect']['prompt']}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}useCustom={setUseCustom}/></React.Fragment>;\n\nconst custInput=<React.Fragment>\n<CustomGoalInput color='red' input = {focus} setInput={setFocus}  header='Select A Focus' prompt={focusP} setPrompt={setFocusP}/>\n<CustomGoalInput color ='orange' input = {gather} setInput={setGather}  header='Gather Information' prompt={gatherP} setPrompt={setGatherP}/>\n<CustomGoalInput color ='yellow' input = {brainstorm} setInput={setBrainstorm}  header='Brainstorm' prompt={brainstormP} setPrompt={setBrainstormP}/>\n<CustomGoalInput color ='green' input = {evaluate} setInput={setEvaluate}  header='Evaluate' prompt={evaluateP} setPrompt={setEvaluateP}/>\n<CustomGoalInput color ='blue' input = {plan} setInput={setPlan}  header='Plan and Act' prompt={planP} setPrompt={setPlanP}/>\n<CustomGoalInput color ='purple' input = {reflect} setInput={setReflect}  header='Reflect' prompt={reflectP} setPrompt={setReflectP}/>\n</React.Fragment>;\n    var input=useCustom? custInput:regInput;\n\n    return(\n        <ScrollView>\n            <View style={{width:'90%', flexDirection:'row-reverse'}}>\n                <TouchableOpacity onPress={handleSwipeButton}>\n                    <Image style={{height:50,width:50, margin:16}}\n                        source={require('../assets/swipe_btn.png')}\n                        resizeMode={\"stretch\"}/>\n                </TouchableOpacity>\n            </View>\n                \n            <View style={{\n                padding:30,\n                flex:1,\n                flexDirection :'column',\n                alignItems: 'center'\n            }}>\n                \n                <Text style={{fontWeight:'bold'}} >Name this Question Set</Text>\n                <TextInput value = {userInput} placeholder = 'Name' style={{\n            width: '80%', \n            borderColor:'black', \n            borderWidth:1, \n            padding:10,\n            marginBottom: 10\n        }} onChangeText ={text=>setUserInput(text)}/>\n                {input}\n                <Button style={{width:'20%'}} title='DONE' onPress = {addGoalHandler.bind(this, userInput)}/>\n            </View>\n        </ScrollView>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30,\n        alignItems:'center'\n      },\n      button:{\n        width:'20%' \n      },\n      input:{\n        width: '80%', \n        borderColor:'black', \n        borderWidth:1, \n        padding:10,\n        marginBottom: 10\n      }\n});\n\nexport default AddSetClass;","import React, {useState} from 'react';\nimport {Image,View, Platform,Dimensions, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\n\nimport GoalInput from '../components/GoalInput';\nimport CustomGoalInput from '../components/CustomGoalInput';\nimport firebase from 'firebase'\n\nconst SwipeAddSetClass = props =>{\n    const db = firebase.database();\n    const [currQ, setCurrQ]= useState(0);\n    const [useCustom, setUseCustom]= useState(false);\n\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\n    console.log(userInput);\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\n\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\n    const addGoalHandler = goalTitle=>{\n        const rid =props.rid;\n        // var l =[]\n        // props.qList.forEach(element=>{\n        //     if(element['id']!=rid){\n        //         l.push(element);\n        //     }\n        // });\n        // props.setQList([...l, {id: rid, value: goalTitle}]);\n        const details = {'name': userInput,\n                        'focus':{\n                            'prompt':focusP,\n                            'answer':focus\n                        },\n                        'gather':{\n                            'prompt':gatherP,\n                            'answer':gather\n                        },\n                        'brainstorm':{\n                            'prompt':brainstormP,\n                            'answer':brainstorm\n                        },\n                        'evaluate':{\n                            'prompt':evaluateP,\n                            'answer':evaluate\n                        },\n                        'plan':{\n                            'prompt':planP,\n                            'answer':plan\n                        },\n                        'reflect':{\n                            'prompt':reflectP,\n                            'answer':reflect\n                        }};\n        console.log(details);\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+firebase.auth().currentUser.uid).set(details);\n        var classDetails = props.classDetails;\n        classDetails['responses'][rid][firebase.auth().currentUser.uid]=details;\n        console.log(classDetails);\n        props.setClassDetails(classDetails);\n        props.setScreen(12);\n      };\n      const handleSwipeButton=()=>{\n        const details = {'name': userInput,\n        'focus':{\n            'prompt':focusP,\n            'answer':focus\n        },\n        'gather':{\n            'prompt':gatherP,\n            'answer':gather\n        },\n        'brainstorm':{\n            'prompt':brainstormP,\n            'answer':brainstorm\n        },\n        'evaluate':{\n            'prompt':evaluateP,\n            'answer':evaluate\n        },\n        'plan':{\n            'prompt':planP,\n            'answer':plan\n        },\n        'reflect':{\n            'prompt':reflectP,\n            'answer':reflect\n        }};\n        props.setQInfo(details);\n        props.setScreen(16);\n    }\n\n    const namePage=<React.Fragment>\n      <View style={{flex:1}}>\n      <View style={{width:'90%', flexDirection:'row-reverse'}}>\n                <TouchableOpacity onPress={handleSwipeButton}>\n                    <Image style={{height:50,width:50, margin:16}}\n                        source={require('../assets/row_btn.png')}\n                        resizeMode={\"stretch\"}/>\n                </TouchableOpacity>\n            </View>\n          <View style={{\n                  flex:1,\n                  flexDirection :'column',\n                  alignItems: 'center',\n                  padding:20\n              }}>\n                  <TextInput value={userInput} onChangeText={setUserInput} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Name this question set'></TextInput>\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                          <Button onPress={(userInput)=>addGoalHandler(userInput)} title={' DONE '}/>\n                          \n                  </View>\n                  <View style={{height:'70%',flexDirection:'column-reverse'}}>\n                  <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                                <Image \n                                source={require('../assets/left_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                                <Image \n                                source={require('../assets/right_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            \n                    </View>\n                    </View>\n          </View>\n      </View>\n  </React.Fragment>;\n\n    const focusPage=<React.Fragment>\n        <View style={{flex:1}}>\n            <View style={{\n                    flex:1,\n                    flexDirection :'column',\n                    alignItems: 'center',\n                    backgroundColor:'#00FFFF',\n                    padding:20\n                }}>\n                    <TextInput value={focusP} onChangeText={setFocusP} style={{backgroundColor:'#FFFFFF',width: '100%', borderColor:'#000000', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a focus question'></TextInput>\n                    <TextInput value={focus} onChangeText={setFocus} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the focus question'></TextInput>\n                    <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                                <Image \n                                source={require('../assets/left_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                                <Image \n                                source={require('../assets/right_arrow.png')}\n                                style={{height:'100%',width:'100%'}}\n                                resizeMode={\"stretch\"}/>\n                            </TouchableOpacity>\n                            \n                    </View>\n            </View>\n        </View>\n    </React.Fragment>;\n\nconst gatherPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'#AF69EF',\n            padding:20\n        }}>\n            <TextInput value={gatherP} onChangeText={setGatherP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a gathering information question'></TextInput>\n            <TextInput value={gather} onChangeText={setGather} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the gathering information question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst brainstormPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'yellow',\n            padding:20\n        }}>\n            <TextInput value={brainstormP} onChangeText={setBrainstormP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a brainstorming question'></TextInput>\n            <TextInput value={brainstorm} onChangeText={setBrainstorm} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the brainstorming question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst evaluatePage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'green',\n            padding:20\n        }}>\n            <TextInput value={evaluateP} onChangeText={setEvaluateP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask an evaluation question'></TextInput>\n            <TextInput value={evaluate} onChangeText={setEvaluate} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the evaluation question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst planPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'#ffdb58',\n            padding:20\n        }}>\n            <TextInput value={planP} onChangeText={setPlanP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a plan and action question'></TextInput>\n            <TextInput value={plan} onChangeText={setPlan} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the plan and action question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\nconst reflectPage=<React.Fragment>\n<View style={{flex:1}}>\n    <View style={{\n            flex:1,\n            flexDirection :'column',\n            alignItems: 'center',\n            backgroundColor:'purple',\n            padding:20\n        }}>\n            <TextInput value={reflectP} onChangeText={setReflectP} style={{backgroundColor:'white',width: '100%', borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Ask a reflection question'></TextInput>\n            <TextInput value={reflect} onChangeText={setReflect} multiline={true} style={{backgroundColor:'white',width: '100%', height:'70%',borderColor:'black', borderWidth:1, padding:10,margin: 20}} placeholder='Answer the reflection question'></TextInput>\n            <View style={{height:'15%',width:'100%',flexDirection:'row', alignItems:'center', justifyContent:'center'}}>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+6)%7)}>\n                        <Image \n                        source={require('../assets/left_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={{height:120,width:120}} onPress={()=>setCurrQ((currQ+1)%7)}>\n                        <Image \n                        source={require('../assets/right_arrow.png')}\n                        style={{height:'100%',width:'100%'}}\n                        resizeMode={\"stretch\"}/>\n                    </TouchableOpacity>\n                    \n            </View>\n    </View>\n</View>\n</React.Fragment>;\n\n\n\n    return(\n        <View style={{flex:1}}>\n            {currQ==0&&namePage}\n            {currQ==1&&focusPage}\n            {currQ==2&&gatherPage}\n            {currQ==3&&brainstormPage}\n            {currQ==4&&evaluatePage}\n            {currQ==5&&planPage}\n            {currQ==6&&reflectPage}\n        </View>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30,\n        alignItems:'center'\n      },\n      button:{\n        width:'20%' \n      },\n      input:{\n        width: '80%', \n        borderColor:'black', \n        borderWidth:1, \n        padding:10,\n        marginBottom: 10\n      }\n});\n\nexport default SwipeAddSetClass;","import React, {useState} from 'react';\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\nimport firebase, { auth } from 'firebase';\nimport GoalItem from '../components/GoalItem';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\n\nconst GradingStudList = props =>{\n    const [toDoOpen, setToDoOpen]= useState(true);\n    const [completeOpen, setCompleteOpen]= useState(false);\n    console.log(\"http://localhost:19006/link?assignment=\"+props.rid+\"&class=\"+props.className.replaceAll(\" \", \"%20\"));\n    \n    const handleStudClick=(id)=>{\n        // console.log('handleStudClick');\n        // console.log(props.classDetails);\n        // console.log(props.rid);\n       \n        var qInfo = props.classDetails['assignments']['details'][props.rid];\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][props.rid]!=null&&props.classDetails['responses'][props.rid][id]!=null){\n            qInfo = props.classDetails['responses'][props.rid][id];\n            \n        }\n\n        var fInfo={//'grade': '',\n        'gFeedback':'',\n        'focus':'',\n        'gather':'',\n        'brainstorm':'',\n        'evaluate':'',\n        'plan':'',\n        'reflect':''};\n\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][props.rid]!=null&&props.classDetails['responses'][props.rid][id]!=null &&props.classDetails['responses'][props.rid][id]['feedback']!=null){\n            fInfo = props.classDetails['responses'][props.rid][id]['feedback'];\n            \n        }\n\n        props.setStudent(id);\n        props.setQInfo(qInfo);\n        props.setFInfo(fInfo);\n        props.setScreen(20);\n    };\n\n\n    var data = props.classDetails['names']!=null?props.classDetails['names']:[];\n\n    var to_grade=[];\n    var graded=[];\n    data.forEach(element => {\n        console.log(element);\n        if(props.classDetails['responses'][props.rid]==null||props.classDetails['responses'][props.rid][element['id']]==null||props.classDetails['responses'][props.rid][element['id']]['feedback']==null){\n           \n            to_grade.push(element);\n        }\n        else{\n            console.log(element['value']);\n            const el ={'id':element['id'],'value': element['value']};//+\" - \"+props.classDetails['responses'][props.rid][element['id']]['feedback']['grade']};\n            graded.push(el);\n        }\n    });\n\n    return   (\n    <View style={{padding:20}}>\n        <View style={{flexDirection:'row'}}>\n            <Text style={{color:'grey'}}>{\"Link to Share: \"}</Text>\n            <TextInput style={{flex:1}}value={\"http://localhost:19006/link?assignment=\"+props.rid+\"&class=\"+props.className.replaceAll(\" \", \"%20\")}/>\n        </View> \n         <View style={styles.row}>\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setToDoOpen(!toDoOpen)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(toDoOpen?'v':'>') +'  To Provide Feeback  '}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n\n        {\n             toDoOpen&&<View>\n                 <FlatList style={{flex:1}}data = {to_grade}\n             keyExtractor={(item, index)=> item.id}\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleStudClick(id)}title ={itemData.item.value}/>}/>\n             {to_grade.length==0&&<Text style={{fontStyle:'italic'}}>All done.</Text>}\n             </View>\n\n            }\n\n            <View style={styles.row}>\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setCompleteOpen(!completeOpen)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(completeOpen?'v':'>') +'  Feedback Provided  '}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            {\n             completeOpen&&<FlatList style={{flex:1}}data = {graded}\n             keyExtractor={(item, index)=> item.id}\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleStudClick(id)}title ={itemData.item.value}/>}/>\n\n            }\n\n        \n           \n\n    </View>\n    );\n}\n\nconst {width} = Dimensions.get(\"screen\");\nconst image_width =Math.min( width * 0.45,250);\nconst styles = StyleSheet.create({\n    \n    row:{\n        flexDirection:'row',\n        justifyContent:'center'\n    },\n    listItem:{ \n        padding:10,\n        marginVertical:10,\n        backgroundColor: '#add8e6',\n        borderColor:'black',\n        borderWidth:1\n      },\n      extraSpacing:{\n          marginRight:image_width+15\n        },\n    header:{\n            color: '#05375a',\n            fontSize: 30,\n            fontWeight: 'bold'\n    }\n  });\n  \n\nexport default GradingStudList;","import React, {useState} from 'react';\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\n\nimport GoalItem from '../components/GoalItem';\nimport firebase from 'firebase';\n//import Card from '../components/Card'\n\n//var once = 0;\nconst ClassSelectCustom = props =>{\n    const [nameList, setNameList]=useState([]);\n    const db = firebase.database();\n    //if (firebase.auth().currentUser.uid!=once){\n      db.ref(firebase.auth().currentUser.uid+'/custom-prompts').once(\"value\", function(snapshot) {\n\n        //console.log(snapshot.val())\n        if(snapshot.val()!=null){\n          var l =[];\n            for (var n in snapshot.val()){\n               l.push({'id':n,'value':n});\n           }\n          setNameList(l);\n        }\n      }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n      });\n     // once=firebase.auth().currentUser.uid;\n  // }\n\n\n    const removeGoalHandler = goalId=>{\n        // props.setQList(currentGoals=>{\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\n        // });\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+goalId).once(\"value\", function(snapshot) {\n          const data=snapshot.val();\n          //console.log(goalId)\n          props.setQInfo(data);\n          props.setScreen(15);\n        }, function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        });\n      }; \n    return   (\n    <View style={styles.screen}>\n      <Button title  = 'New Custom Set' onPress={()=>props.setScreen(15)}/>\n      <FlatList data = {nameList}\n      keyExtractor={(item, index)=> item.id}\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30\n      }\n});\n\nexport default ClassSelectCustom;","import React, {useState} from 'react';\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\n\nimport GoalInput from '../components/GoalInput';\nimport CustomGoalInput from '../components/CustomGoalInput';\nimport firebase from 'firebase'\nimport FeedbackGoalInput from '../components/FeedbackGoalInput';\n\nconst LeaveFeedback = props =>{\n    const db = firebase.database();\n    // console.log('here sir');\n    // console.log(props.qInfo);\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\n\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\n\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\n\n    const [focusR, setFocusR]= useState(props.fInfo['focus']);\n    const [gatherR, setGatherR]= useState(props.fInfo['gather']);\n    const [brainstormR, setBrainstormR]= useState(props.fInfo['brainstorm']);\n    const [evaluateR, setEvaluateR]= useState(props.fInfo['evaluate']);\n    const [planR, setPlanR]= useState(props.fInfo['plan']);\n    const [reflectR, setReflectR]= useState(props.fInfo['reflect']);\n    const [gFeedback, setGFeedback]=useState(props.fInfo['gFeedback']);\n    const [grade, setGrade]=useState(props.fInfo['grade']);\n    const handleDone = ()=>{\n        const rid =props.rid;\n        // var l =[]\n        // props.qList.forEach(element=>{\n        //     if(element['id']!=rid){\n        //         l.push(element);\n        //     }\n        // });\n        // props.setQList([...l, {id: rid, value: goalTitle}]);\n        const details = {//'grade': grade,\n                        'gFeedback':gFeedback,\n                        'focus':focusR,\n                        'gather':gatherR,\n                        'brainstorm':brainstormR,\n                        'evaluate':evaluateR,\n                        'plan':planR,\n                        'reflect':reflectR};\n        //console.log(details);\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+props.student).set(props.qInfo);\n        db.ref('classes/'+props.className+'/responses/'+rid+'/'+props.student+'/feedback').set(details);\n        var classDetails = props.classDetails;\n        //console.log(rid);\n        //console.log(classDetails);\n        classDetails['responses'][rid][props.student]=props.qInfo;\n        classDetails['responses'][rid][props.student]['feedback']=details;\n        //console.log(classDetails);\n        props.setClassDetails(classDetails);\n        props.setScreen(18);\n      };\n\n    const responses=<React.Fragment>\n    <FeedbackGoalInput comment={focusR}input = {focus} setInput={setFocusR} color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }/>\n    <FeedbackGoalInput comment={gatherR}input = {gather} setInput={setGatherR}  color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}/>\n    <FeedbackGoalInput comment={brainstormR}input = {brainstorm} setInput={setBrainstormR} color ='yellow' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}/>\n    <FeedbackGoalInput comment={evaluateR}input = {evaluate} setInput={setEvaluateR} color ='green'header='Evaluate' question = {props.qInfo['evaluate']['prompt']}/>\n    <FeedbackGoalInput comment={planR}input = {plan} setInput={setPlanR} color ='#ffdb58'  header='Plan and Act' question = {props.qInfo['plan']['prompt']}/>\n    <FeedbackGoalInput comment={reflectR} input = {reflect} setInput={setReflectR}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}/></React.Fragment>;\n\n\n\n    return(\n        <ScrollView>\n                \n            <View style={{\n                padding:30,\n                flex:1,\n                flexDirection :'column',\n                alignItems: 'center'\n            }}>\n                \n                <Text style={{fontWeight:'bold'}} >Leave Feedback</Text>\n                <Text style={{\n            width: '80%', \n            borderColor:'black', \n            borderWidth:1, \n            padding:10,\n            marginBottom: 10\n        }} > {userInput}</Text>\n                {responses}\n                <TextInput value={gFeedback}style={styles.input} placeholder='General Feedback' onChangeText={text=>setGFeedback(text)}/>\n                {/* <TextInput value={grade}  style={{\n        width: '10%', \n        borderColor:'black', \n        borderWidth:1, \n        padding:10,\n        marginBottom: 10\n      }} placeholder='Grade' onChangeText={text=>setGrade(text)}/> */}\n                <Button style={{width:'20%'}} title='DONE' onPress = {handleDone}/>\n            </View>\n        </ScrollView>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30,\n        alignItems:'center'\n      },\n      button:{\n        width:'20%' \n      },\n      input:{\n        width: '80%', \n        borderColor:'black', \n        borderWidth:1, \n        padding:10,\n        marginBottom: 10\n      }\n});\n\nexport default LeaveFeedback;","import React, {useState} from 'react';\nimport {View, Text, Button, StyleSheet,FlatList} from 'react-native';\n\nimport GoalItem from '../components/GoalItem';\nimport firebase from 'firebase';\n//import Card from '../components/Card'\n\n//var once = 0;\nconst AssignCustom = props =>{\n    const [nameList, setNameList]=useState([]);\n    const db = firebase.database();\n    //if (firebase.auth().currentUser.uid!=once){\n      db.ref(firebase.auth().currentUser.uid+'/custom-prompts').once(\"value\", function(snapshot) {\n\n        //console.log(snapshot.val())\n        if(snapshot.val()!=null){\n          var l =[];\n            for (var n in snapshot.val()){\n               l.push({'id':n,'value':n});\n           }\n          setNameList(l);\n        }\n      }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n      });\n     // once=firebase.auth().currentUser.uid;\n  // }\n\n\n    const removeGoalHandler = goalId=>{\n        // props.setQList(currentGoals=>{\n        //   return currentGoals.filter((goal)=>goal.id !==goalId);\n        // });\n        db.ref(firebase.auth().currentUser.uid+'/custom-prompts/'+goalId).once(\"value\", function(snapshot) {\n          const data=snapshot.val();\n          console.log(goalId)\n          props.setQInfo(data);\n          props.setScreen(15);\n        }, function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        });\n      }; \n    return   (\n    <View style={styles.screen}>\n      <Button title  = 'New Custom Set' onPress={()=>props.setScreen(15)}/>\n      <FlatList data = {nameList}\n      keyExtractor={(item, index)=> item.id}\n      renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={removeGoalHandler}title ={itemData.item.value}/>}/>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30\n      }\n});\n\nexport default AssignCustom;","import React from 'react';\nimport {View, Text, StyleSheet} from 'react-native';\n\nconst Blank = props =>{\n    return   (\n    <View>\n       \n    </View>\n    );\n}\n\n\nexport default Blank;","import React from 'react';\nimport {View, Text, StyleSheet} from 'react-native';\nimport firebase from 'firebase';\nconst Linking = props =>{\n    global.linked=true;\n    //console.log(global.linked);\n    global.setScreen(22);\n\n    firebase.auth().onAuthStateChanged((user) => {\n       // console.log('LOG '+global.linked)\n        if (user) {\n            console.log(props);\n         global.handleAssignmentLink(props.route.params.class,props.route.params.assignment);\n        }\n     });\n    return   (\n    <View >\n    </View>\n    );\n}\n\n\nexport default Linking;","import React from 'react';\nimport {View, Text, StyleSheet} from 'react-native';\nconst LinkLoading = props =>{\n    return   (\n    <View >\n        <Text style={{margin:10}}>Loading...</Text>\n        <Text style={{margin:10}}>If you are not automatically redirected make sure you are signed in and enrolled in this class</Text>\n    </View>\n    );\n}\n\n\nexport default LinkLoading;","import React, {useState} from 'react';\nimport {View,Dimensions, Image, Button, StyleSheet,FlatList, TouchableOpacity} from 'react-native';\nimport firebase from 'firebase';\n\nconst Tab = props =>{\n    var img = \"../assets/home.png\";\n    const handlePress=()=>{\n        if(firebase.auth().currentUser!=null){\n            props.setScreen(0);\n        }\n    }\n    return   (\n    \n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1}} onPress={()=> props.setScreen(props.screen)}>\n        <TouchableOpacity onPress={handlePress}>\n        <Image \n            source={require('../assets/home.png')}\n            style={styles.logo}\n            resizeMode={\"stretch\"}/>\n        </TouchableOpacity>\n    </View>\n    );\n}\n  \nconst {width} = Dimensions.get(\"screen\");\n\n\nconst styles = StyleSheet.create({\n    tab:{\n        flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1\n    },\n    logo: {\n        width: 72,\n        height: 64\n    }\n    \n});\n\nexport default Tab;","import React, {useState} from 'react';\nimport {View,Dimensions, Image, Button, StyleSheet,FlatList, TouchableOpacity} from 'react-native';\n\nimport firebase from 'firebase';\nconst TabN = props =>{\n    var img = \"../assets/home.png\";\n    const handlePress=()=>{\n      if(firebase.auth().currentUser!=null){\n          props.setScreen(4);\n        }\n     }\n    return   (\n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1}} onPress={()=> props.setScreen(props.screen)}>\n        <TouchableOpacity onPress={handlePress}>\n          <Image \n              source={require('../assets/document.png')}\n              style={styles.logo}\n              resizeMode={\"stretch\"}/>\n        </TouchableOpacity>\n    </View>\n    );\n}\n  \nconst {width} = Dimensions.get(\"screen\");\n\n\nconst styles = StyleSheet.create({\n    tab:{\n        flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1\n    },\n    logo: {\n        width: 72,\n        height: 64\n    }\n    \n});\n\nexport default TabN;","import React, {useState} from 'react';\nimport {TouchableOpacity,View,Dimensions, Image, Button, StyleSheet,FlatList} from 'react-native';\n\nimport firebase from 'firebase';\nconst TabG = props =>{\n    var img = \"../assets/home.png\";\n\n    const handlePress=()=>{\n      if(firebase.auth().currentUser!=null){\n          props.goClassroom();\n      }\n  }\n    return   (\n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1}} >\n        <TouchableOpacity onPress={handlePress}>\n          <Image \n              source={require('../assets/classroom.png')}\n              style={styles.logo}\n              resizeMode={\"stretch\"}/>\n          </TouchableOpacity>\n    </View>\n    );\n}\n  \nconst {width} = Dimensions.get(\"screen\");\n\n\nconst styles = StyleSheet.create({\n    tab:{\n        flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1\n    },\n    logo: {\n        width: 72,\n        height: 64\n    }\n    \n});\n\nexport default TabG;","import React, {useState} from 'react';\nimport {View,Dimensions, Image, Button, StyleSheet,FlatList, TouchableOpacity} from 'react-native';\n\nimport firebase from 'firebase';\nconst TabS = props =>{\n    var img = \"../assets/home.png\";\n    const handlePress=()=>{\n      if(firebase.auth().currentUser!=null){\n          props.setScreen(5);\n        }\n        else{\n            props.setScreen(2);\n        }\n     }\n    return   (\n    <View style={{backgroundColor:props.colorList[props.screen], flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1}} onPress={()=> props.setScreen(props.screen)}>\n        <TouchableOpacity onPress={handlePress}>\n          <Image \n              source={require('../assets/settings.png')}\n              style={styles.logo}\n              resizeMode={\"stretch\"}/>\n        </TouchableOpacity>\n    </View>\n    );\n}\n  \nconst {width} = Dimensions.get(\"screen\");\n\n\nconst styles = StyleSheet.create({\n    tab:{\n        flex:1,\n        alignItems:'center',\n        borderColor:'grey',\n        borderWidth:1\n    },\n    logo: {\n        width: 72,\n        height: 64\n    }\n    \n});\n\nexport default TabS;","import React, {useState} from 'react';\nimport {View, TextInput, Button, StyleSheet, Modal, Text} from 'react-native';\nimport Tab from './Tab';\nimport TabN from './TabN';\nimport TabG from './TabG';\nimport TabS from './TabS';\n\nconst MenuBar = props =>{\n    \n    return  (\n      \n        <View style={{flexDirection:'row'}}>\n            <Tab setScreen = {props.setScreen} currScreen ={props.screen} screen={0} colorList={props.colorList}></Tab>\n            <TabN setScreen = {props.setScreen} currScreen ={props.screen} screen={1} colorList={props.colorList}></TabN>\n            <TabG goClassroom={props.goClassroom} setScreen = {props.setScreen} currScreen ={props.screen} screen={2} colorList={props.colorList}></TabG>\n            <TabS setScreen = {props.setScreen} currScreen ={props.screen} screen={3} colorList={props.colorList}></TabS>\n      </View>\n    );\n}\n\n\n\nexport default MenuBar;","import React from 'react';\nimport {View, Button,TextInput, Text, Dimensions, StyleSheet} from 'react-native';\n\nconst Popup = props =>{\n    console.log('popup');\n    const handleClick =()=>{\n        props.setLink(\"\");\n    }\n    return   (\n    <View style ={styles.card}>\n        <Text style={{color:'blue', fontSize:20}}>Link to Share</Text>\n        <TextInput style={{width:250, margin:20}}value={props.link}/>\n        <Button style={{width:100, height:50}} title='Done' onPress={handleClick}/>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n   card:{\n       width: 300,\n       height:150,\n       borderColor:'black', \n       borderWidth:1, \n       padding:10,\n       backgroundColor:'white',\n        position: 'absolute', justifyContent: 'center', alignItems: 'center',\n        left: (Dimensions.get('window').width / 2) - 175,\n        top:(Dimensions.get('window').height / 2) - 125},\n   \n});\n\nexport default Popup;","import React, {useState} from 'react';\nimport {View, Text,TouchableOpacity, TextInput, Button, StyleSheet,FlatList, Dimensions, Image, ScrollView} from 'react-native';\nimport firebase, { auth } from 'firebase';\nimport GoalItem from '../components/GoalItem';\nimport Popup from '../components/Popup';\n//import * as GoogleSignIn from 'expo-google-sign-in';\n\n\n\n\nconst ClassroomDetails = props =>{\n\n    const [toDoOpen, setToDoOpen]= useState(true);\n    const [completeOpen, setCompleteOpen]= useState(false);\n    //console.log(props.classDetails)\n    const assignHandler=()=>{\n        props.setScreen(13);\n    };\n    const handleAssingmentClick=(id)=>{\n        // console.log(props.classDetails);\n        // console.log(props.classDetails['responses'][id]);\n        var qInfo = props.classDetails['assignments']['details'][id];\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][id]!=null&&props.classDetails['responses'][id][firebase.auth().currentUser.uid]!=null){\n            qInfo = props.classDetails['responses'][id][firebase.auth().currentUser.uid];\n        }\n\n        \n        var fInfo={'grade': '',\n        'gFeedback':'',\n        'focus':'',\n        'gather':'',\n        'brainstorm':'',\n        'evaluate':'',\n        'plan':'',\n        'reflect':''};\n        var targetScreen =16;\n        console.log(props.classDetails);\n        if (props.classDetails['responses']!=null&&props.classDetails['responses'][id]!=null&&props.classDetails['responses'][id][firebase.auth().currentUser.uid]!=null &&props.classDetails['responses'][id][firebase.auth().currentUser.uid]['feedback']!=null){\n            fInfo = props.classDetails['responses'][id][firebase.auth().currentUser.uid]['feedback'];\n            targetScreen=21;\n        }\n        props.setFInfo(fInfo);\n        props.setRid(id);\n        props.setQInfo(qInfo);\n        props.setScreen(targetScreen);\n    };\n\n    const ownerAssignmentClicked=(id)=>{\n        props.setRid(id);\n        props.setScreen(18);\n    }\n    var isOwned = firebase.auth().currentUser.uid==props.classDetails['owner'];\n\n    var data = props.classDetails['assignments']!=null&&props.classDetails['assignments']['set-list'] !=null?props.classDetails['assignments']['set-list']:[];\n    var to_do=[];\n    var complete=[];\n    if(!isOwned){\n        data.forEach(element => {\n            if(props.classDetails['responses']==null||props.classDetails['responses'][element['id']]==null||props.classDetails['responses'][element['id']][firebase.auth().currentUser.uid]==null){\n\n                to_do.push(element);\n            }\n            else{\n                complete.push(element);\n            }\n        });\n    }\n    // else{\n    //     data.forEach(element => {\n    //         var existsUngraded =false;\n    //         console.log( props.classDetails['responses'][element['id']])\n    //         props.classDetails['responses'][element['id']].forEach(([key,value]) => {\n    //             if(value==null || value['feedback']==null){\n    //                 existsUngraded=true;\n    //             }\n    //         });\n    //         if(existsUngraded){\n    //             to_do.push(element);\n    //         }\n    //         else{\n    //             complete.push(element);\n    //         }\n\n             \n    //     });\n    // }\n\n    return   (\n    <View style={{height:'100%', width: '100%'}}>\n        <View style={{position:'absolute', zIndex: 3, elevation: 3}}>\n            {props.link.length!=0&&<Popup   link={props.link} setLink={props.setLink}/>}\n        </View>\n\n        <View style={{padding:20}}>\n         {props.link.length!=0&&<Popup link={props.link} setLink={props.setLink}/>}\n           <Text style={styles.header}>{props.name}</Text>\n            {isOwned&&<View>\n                <View style={styles.row}>\n                <View style={{margin:15}}>\n                    <Text>{'Password: ' +props.classDetails['password']}</Text>\n                </View> \n                <View style={{margin:15}}>\n                    <Button title=' Assign ' onPress={assignHandler}/>  \n                </View> \n            </View>\n             <FlatList style={{flex:1}}data = {data}\n             keyExtractor={(item, index)=> item.id}\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={id=>ownerAssignmentClicked(id)}title ={itemData.item.value}/>}/>\n             </View>}\n             {!isOwned&&<View>\n            <View style={styles.row}>\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setToDoOpen(!toDoOpen)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(toDoOpen?'v':'>') +'  To-Do  '}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            {\n             toDoOpen&&<View>\n                 <FlatList style={{flex:1}}data = {to_do}\n             keyExtractor={(item, index)=> item.id}\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleAssingmentClick(id)}title ={itemData.item.value}/>}/>\n             {to_do.length==0&&<Text style={{fontStyle:'italic'}}>All done.</Text>}\n             </View>\n\n            }\n\n            <View style={styles.row}>\n                <TouchableOpacity style={{width:'100%'}} onPress= {()=>setCompleteOpen(!completeOpen)}>\n                    <View style = {styles.listItem}>\n                        <Text>{(completeOpen?'v':'>') +'  Complete  '}</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            {\n             completeOpen&&<FlatList style={{flex:1}}data = {complete}\n             keyExtractor={(item, index)=> item.id}\n             renderItem = {itemData=><GoalItem id = {itemData.item.id} onDelete ={(id)=>handleAssingmentClick(id)}title ={itemData.item.value}/>}/>\n\n            }\n            </View>\n\n            \n             \n             }\n\n\n           \n\n    </View>\n    \n    \n    </View>\n    );\n}\n\nconst {width} = Dimensions.get(\"screen\");\nconst image_width =Math.min( width * 0.45,250);\nconst styles = StyleSheet.create({\n    \n    row:{\n        flexDirection:'row',\n        justifyContent:'center'\n    },\n    listItem:{ \n        padding:10,\n        marginVertical:10,\n        backgroundColor: '#add8e6',\n        borderColor:'black',\n        borderWidth:1\n      },\n      extraSpacing:{\n          marginRight:image_width+15\n        },\n    header:{\n            color: '#05375a',\n            fontSize: 30,\n            fontWeight: 'bold'\n    }\n  });\n  \n\nexport default ClassroomDetails;","import React, {useState} from 'react';\nimport {View, TextInput, Button, StyleSheet, Modal, Text, TouchableOpacity} from 'react-native';\n\nconst FeedbackGoalView = props =>{\n  \n\n    return  (\n      \n          <View style={styles.inputContainer}>\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\n            \n              <Text>{props.question}</Text>\n \n            <TouchableOpacity onPress={()=>setCommentMode(true)}>\n              <Text> {props.input}</Text>\n            </TouchableOpacity>\n          <View style={{width:'100%'}}>\n    <Text style={styles.italics}>{props.comment!=''?'Instructor feedback: '+props.comment:''}</Text>\n\n              </View>\n\n  \n            \n          </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputContainer:{\n        width:'80%',\n        flex:1,\n        flexDirection :'column',\n        alignItems: 'center'\n  \n     },\n     input:{\n      width: '100%', \n       borderColor:'black', \n       borderWidth:1, \n       padding:10,\n       marginBottom: 10\n     },\n     italics:{\n      fontStyle:'italic',\n        width: '100%', \n       padding:10,\n       marginBottom: 10\n     }\n});\n\nexport default FeedbackGoalView;","import React, {useState} from 'react';\nimport {Image, View, Text, Button, StyleSheet,FlatList, TextInput, ScrollView, ImagePropTypes, TouchableOpacity} from 'react-native';\n\nimport GoalInput from '../components/GoalInput';\nimport CustomGoalInput from '../components/CustomGoalInput';\nimport firebase from 'firebase'\nimport FeedbackGoalInput from '../components/FeedbackGoalInput';\nimport FeedbackGoalView from '../components/FeedbackGoalView';\n\nconst ViewFeedback = props =>{\n    const db = firebase.database();\n    // console.log('here sir');\n    // console.log(props.qInfo);\n    const [useCustom, setUseCustom]= useState(props.qInfo['focus']['prompt']=='');\n\n    const [userInput, setUserInput]= useState(props.qInfo['name']);\n    const [focus, setFocus]= useState(props.qInfo['focus']['answer']);\n    const [gather, setGather]= useState(props.qInfo['gather']['answer']);\n    const [brainstorm, setBrainstorm]= useState(props.qInfo['brainstorm']['answer']);\n    const [evaluate, setEvaluate]= useState(props.qInfo['evaluate']['answer']);\n    const [plan, setPlan]= useState(props.qInfo['plan']['answer']);\n    const [reflect, setReflect]= useState(props.qInfo['reflect']['answer']);\n\n    const [focusP, setFocusP]= useState(props.qInfo['focus']['prompt']);\n    const [gatherP, setGatherP]= useState(props.qInfo['gather']['prompt']);\n    const [brainstormP, setBrainstormP]= useState(props.qInfo['brainstorm']['prompt']);\n    const [evaluateP, setEvaluateP]= useState(props.qInfo['evaluate']['prompt']);\n    const [planP, setPlanP]= useState(props.qInfo['plan']['prompt']);\n    const [reflectP, setReflectP]= useState(props.qInfo['reflect']['prompt']);\n\n    const [focusR, setFocusR]= useState(props.fInfo['focus']);\n    const [gatherR, setGatherR]= useState(props.fInfo['gather']);\n    const [brainstormR, setBrainstormR]= useState(props.fInfo['brainstorm']);\n    const [evaluateR, setEvaluateR]= useState(props.fInfo['evaluate']);\n    const [planR, setPlanR]= useState(props.fInfo['plan']);\n    const [reflectR, setReflectR]= useState(props.fInfo['reflect']);\n    const [gFeedback, setGFeedback]=useState(props.fInfo['gFeedback']);\n    const [grade, setGrade]=useState(props.fInfo['grade']);\n    const handleDone = ()=>{\n       \n        //props.setClassDetails(classDetails);\n        props.setScreen(12);\n      };\n\n    const responses=<React.Fragment>\n    <FeedbackGoalView comment={focusR}input = {focus} setInput={setFocusR} color ='#00FFFF' header='Select A Focus' question = {props.qInfo['focus']['prompt'] }/>\n    <FeedbackGoalView comment={gatherR}input = {gather} setInput={setGatherR}  color ='#AF69EF' header='Gather Information' question = {props.qInfo['gather']['prompt']}/>\n    <FeedbackGoalView comment={brainstormR}input = {brainstorm} setInput={setBrainstormR} color ='yellow' header='Brainstorm' question = {props.qInfo['brainstorm']['prompt']}/>\n    <FeedbackGoalView comment={evaluateR}input = {evaluate} setInput={setEvaluateR} color ='green'header='Evaluate' question = {props.qInfo['evaluate']['prompt']}/>\n    <FeedbackGoalView comment={planR}input = {plan} setInput={setPlanR} color ='#ffdb58'  header='Plan and Act' question = {props.qInfo['plan']['prompt']}/>\n    <FeedbackGoalView comment={reflectR} input = {reflect} setInput={setReflectR}  color ='purple' header='Reflect' question = {props.qInfo['reflect']['prompt']}/></React.Fragment>;\n\n\n\n    return(\n        <ScrollView>\n                \n            <View style={{\n                padding:30,\n                flex:1,\n                flexDirection :'column',\n                alignItems: 'center'\n            }}>\n                \n                <Text style={{fontWeight:'bold'}} >Leave Feedback</Text>\n                <Text style={{\n            width: '80%', \n            padding:10,\n            marginBottom: 10\n        }} > {userInput}</Text>\n                {responses}\n                <Text style={{fontStyle:'italic'}}>{gFeedback!=''?'Feedback: '+gFeedback:''}</Text>\n                <Text style={{fontStyle:'italic'}} >{'Grade: '+grade}</Text>\n                <Button style={{width:'20%'}} title='DONE' onPress = {handleDone}/>\n            </View>\n        </ScrollView>\n    );\n    \n}\n\nconst styles = StyleSheet.create({\n    screen:{\n        padding:30,\n        alignItems:'center'\n      },\n      button:{\n        width:'20%' \n      },\n      input:{\n        width: '80%', \n        borderColor:'black', \n        borderWidth:1, \n        padding:10,\n        marginBottom: 10\n      }\n});\n\nexport default ViewFeedback;","module.exports = __webpack_public_path__ + \"static/media/home.f2a9ae9d.png\";","module.exports = __webpack_public_path__ + \"static/media/document.37fa493b.png\";","module.exports = __webpack_public_path__ + \"static/media/classroom.c7ea54d6.png\";","module.exports = __webpack_public_path__ + \"static/media/settings.4564248b.png\";","import React, {useState} from 'react';\nimport {View, TextInput, Button, StyleSheet, Modal, Text, TouchableOpacity} from 'react-native';\n\nconst GoalInput = props =>{\n    const [enteredGoal, setEnteredGoal] = useState(''); \n\n    function goalInputHandler(enteredText){\n        props.setInput(enteredText);\n    }\n    return  (\n      \n          <View style={styles.inputContainer}>\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\n            <TouchableOpacity onPress={()=>props.useCustom(true)}>\n              <Text>{props.question}</Text>\n            </TouchableOpacity>\n            <TextInput text={props.text} placeholder={props.header} style ={styles.input} onChangeText = {goalInputHandler} value={props.input}/>\n            \n          </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputContainer:{\n        width:'80%',\n        flex:1,\n        flexDirection :'column',\n        alignItems: 'center'\n  \n     },\n     input:{\n      width: '100%', \n       borderColor:'black', \n       borderWidth:1, \n       padding:10,\n       marginBottom: 10\n     }\n});\n\nexport default GoalInput;","import React, {useState} from 'react';\nimport {View, TextInput, Button, StyleSheet, Modal, Text} from 'react-native';\n\nconst CustomGoalInput = props =>{\n\n    function goalInputHandler(enteredText){\n        props.setInput(enteredText);\n    }\n    return  (\n      \n          <View style={styles.inputContainer}>\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\n            <TextInput style ={styles.input} placeholder ={props.header+' question'} value={props.prompt} onChangeText={props.setPrompt}></TextInput>\n            <TextInput placeholder={props.header} style ={styles.input} onChangeText = {goalInputHandler} value={props.input}/>\n            \n          </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputContainer:{\n        width:'80%',\n        flex:1,\n        flexDirection :'column',\n        alignItems: 'center'\n  \n     },\n     input:{\n      width: '100%', \n       borderColor:'black', \n       borderWidth:1, \n       padding:10,\n       marginBottom: 10\n     }\n});\n\nexport default CustomGoalInput;","import React from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity} from 'react-native';\n\nconst GoalItem = props =>{\n    return  (\n    <TouchableOpacity onPress= {props.onDelete.bind(this,props.id)}>\n        <View style = {styles.listItem}>\n            <Text>{props.title }</Text>\n        </View>\n    </TouchableOpacity>);\n}\n\nconst styles = StyleSheet.create({\n    listItem:{ \n        padding:10,\n        marginVertical:10,\n        backgroundColor: '#ccc',\n        borderColor:'black',\n        borderWidth:1\n      }\n});\n\nexport default GoalItem;","module.exports = __webpack_public_path__ + \"static/media/left_arrow.947c4ae8.png\";","module.exports = __webpack_public_path__ + \"static/media/right_arrow.05efbab9.png\";","import React, {useState} from 'react';\nimport {View, TextInput, Button, StyleSheet, Modal, Text, TouchableOpacity} from 'react-native';\n\nconst FeedbackGoalInput = props =>{\n    const [commentMode, setCommentMode] = useState(props.comment!=''); \n\n    return  (\n      \n          <View style={styles.inputContainer}>\n            <Text style={{fontWeight:'bold', color :props.color}}>{props.header}</Text>\n            \n              <Text>{props.question}</Text>\n \n            <TouchableOpacity onPress={()=>setCommentMode(true)}>\n              <Text  style ={styles.italics}> {props.input}</Text>\n            </TouchableOpacity>\n            {commentMode&& <View style={{width:'100%'}}>\n              <TextInput value={props.comment}style={styles.input} placeholder={'Leave a comment on '+props.header} onChangeText={text=>props.setInput(text)}/>\n\n              </View>\n\n            }\n            \n          </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    inputContainer:{\n        width:'80%',\n        flex:1,\n        flexDirection :'column',\n        alignItems: 'center'\n  \n     },\n     input:{\n      width: '100%', \n       borderColor:'black', \n       borderWidth:1, \n       padding:10,\n       marginBottom: 10\n     },\n     italics:{\n      fontStyle:'italic',\n        width: '100%', \n       padding:10,\n       marginBottom: 10\n     }\n});\n\nexport default FeedbackGoalInput;"],"sourceRoot":""}